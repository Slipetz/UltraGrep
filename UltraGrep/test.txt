Using C++11 ThreadPool...
Grepping: C:/Python34/LICENSE.txt
Matched: [4]: Python was created in the early 1990s by Guido van Rossum at Stichting
Matched: [5]: Mathematisch Centrum (CWI, see http://www.cwi.nl) in the Netherlands
Matched: [7]: principal author, although it includes many contributions from others.
Matched: [9]: In 1995, Guido continued his work on Python at the Corporation for
Matched: [11]: in Reston, Virginia where he released several versions of the
Matched: [14]: In May 2000, Guido and the Python core development team moved to
Matched: [15]: BeOpen.com to form the BeOpen PythonLabs team.  In October of the same
Matched: [16]: year, the PythonLabs team moved to Digital Creations (now Zope
Matched: [17]: Corporation, see http://www.zope.com).  In 2001, the Python Software
Matched: [21]: the PSF.
Matched: [24]: the Open Source Definition).  Historically, most, but not all, Python
Matched: [25]: releases have also been GPL-compatible; the table below summarizes
Matched: [26]: the various releases.
Matched: [46]:     the GPL.  All Python licenses, unlike the GPL, let you distribute
Matched: [49]:     other software that is released under the GPL; the others don't.
Matched: [54]:     is "not incompatible" with the GPL.
Matched: [56]: Thanks to the many outside volunteers who have worked under Guido's
Matched: [57]: direction to make these releases possible.
Matched: [66]: 1. This LICENSE AGREEMENT is between the Python Software Foundation
Matched: [67]: ("PSF"), and the Individual or Organization ("Licensee") accessing and
Matched: [68]: otherwise using this software ("Python") in source or binary form and
Matched: [71]: 2. Subject to the terms and conditions of this License Agreement, PSF hereby
Matched: [74]: distribute, and otherwise use Python alone or in any derivative version,
Matched: [80]: 3. In the event Licensee prepares a derivative work that is based on
Matched: [81]: or incorporates Python or any part thereof, and wants to make
Matched: [82]: the derivative work available to others as provided herein, then
Matched: [84]: the changes made to Python.
Matched: [107]: 8. By copying, installing or otherwise using Python, Licensee
Matched: [108]: agrees to be bound by the terms and conditions of this License
Matched: [118]: office at 160 Saratoga Avenue, Santa Clara, CA 95051, and the
Matched: [119]: Individual or Organization ("Licensee") accessing and otherwise using
Matched: [121]: documentation ("the Software").
Matched: [123]: 2. Subject to the terms and conditions of this BeOpen Python License
Matched: [127]: otherwise use the Software alone or in any derivative version,
Matched: [128]: provided, however, that the BeOpen Python License is retained in the
Matched: [131]: 3. BeOpen is making the Software available to Licensee on an "AS IS"
Matched: [147]: respects by the law of the State of California, excluding conflict of
Matched: [153]: third party.  As an exception, the "BeOpen Python" logos available at
Matched: [154]: http://www.pythonlabs.com/logos.html may be used according to the
Matched: [157]: 7. By copying, installing or otherwise using the software, Licensee
Matched: [158]: agrees to be bound by the terms and conditions of this License
Matched: [165]: 1. This LICENSE AGREEMENT is between the Corporation for National
Matched: [167]: Reston, VA 20191 ("CNRI"), and the Individual or Organization
Matched: [168]: ("Licensee") accessing and otherwise using Python 1.6.1 software in
Matched: [171]: 2. Subject to the terms and conditions of this License Agreement, CNRI
Matched: [174]: prepare derivative works, distribute, and otherwise use Python 1.6.1
Matched: [180]: Agreement, Licensee may substitute the following text (omitting the
Matched: [181]: quotes): "Python 1.6.1 is made available subject to the terms and
Matched: [182]: conditions in CNRI's License Agreement.  This Agreement together with
Matched: [183]: Python 1.6.1 may be located on the Internet using the following
Matched: [185]: Agreement may also be obtained from a proxy server on the Internet
Matched: [186]: using the following URL: http://hdl.handle.net/1895.22/1013".
Matched: [188]: 3. In the event Licensee prepares a derivative work that is based on
Matched: [189]: or incorporates Python 1.6.1 or any part thereof, and wants to make
Matched: [190]: the derivative work available to others as provided herein, then
Matched: [192]: the changes made to Python 1.6.1.
Matched: [209]: 7. This License Agreement shall be governed by the federal
Matched: [210]: intellectual property law of the United States, including without
Matched: [211]: limitation the federal copyright law, and, to the extent such
Matched: [212]: U.S. federal law does not apply, by the law of the Commonwealth of
Matched: [214]: Notwithstanding the foregoing, with regard to derivative works based
Matched: [216]: previously distributed under the GNU General Public License (GPL), the
Matched: [217]: law of the Commonwealth of Virginia shall govern this License
Matched: [226]: 8. By clicking on the "ACCEPT" button where indicated, or by copying,
Matched: [227]: installing or otherwise using Python 1.6.1, Licensee agrees to be
Matched: [228]: bound by the terms and conditions of this License Agreement.
Matched: [236]: Copyright (c) 1991 - 1995, Stichting Mathematisch Centrum Amsterdam,
Matched: [237]: The Netherlands.  All rights reserved.
Matched: [241]: provided that the above copyright notice appear in all copies and that
Matched: [243]: supporting documentation, and that the name of Stichting Mathematisch
Matched: [245]: distribution of the software without specific, written prior
Matched: [262]: includes the following files:
Matched: [268]: If you further distribute programs that include the Microsoft
Matched: [269]: Distributable Code, you must comply with the restrictions on
Matched: [271]: distributors and external end users to agree to terms that protect the
Matched: [273]: requirements for the Distributable Code. See Microsoft's documentation
Matched: [277]: Redistribution of the Windows binary build of the Python interpreter
Matched: [286]: - distribute Microsoft's Distributable Code to run on a platform other
Matched: [293]: These restrictions apply only to the Microsoft Distributable Code as
Matched: [294]: defined above, not to Python itself or any programs running on the
Matched: [295]: Python interpreter. The redistribution of the Python interpreter and
Matched: [296]: libraries is governed by the Python Software License included with this
Matched: [297]: file, or by other licenses as marked.
Matched: [300]: This copy of Python includes a copy of bzip2, which is licensed under the following terms:
Matched: [305]: This program, "bzip2", the associated library "libbzip2", and all
Matched: [310]: modification, are permitted provided that the following conditions
Matched: [313]: 1. Redistributions of source code must retain the above copyright
Matched: [314]:    notice, this list of conditions and the following disclaimer.
Matched: [317]:    not claim that you wrote the original software.  If you use this 
Matched: [318]:    software in a product, an acknowledgment in the product 
Matched: [322]:    not be misrepresented as being the original software.
Matched: [324]: 4. The name of the author may not be used to endorse or promote 
Matched: [345]: This copy of Python includes a copy of openssl, which is licensed under the following terms:
Matched: [351]:   The OpenSSL toolkit stays under a dual license, i.e. both the conditions of
Matched: [352]:   the OpenSSL License and the original SSLeay license apply to the toolkit.
Matched: [353]:   See below for the actual license texts. Actually both licenses are BSD-style
Matched: [364]:  * modification, are permitted provided that the following conditions
Matched: [367]:  * 1. Redistributions of source code must retain the above copyright
Matched: [368]:  *    notice, this list of conditions and the following disclaimer. 
Matched: [370]:  * 2. Redistributions in binary form must reproduce the above copyright
Matched: [371]:  *    notice, this list of conditions and the following disclaimer in
Matched: [372]:  *    the documentation and/or other materials provided with the
Matched: [376]:  *    software must display the following acknowledgment:
Matched: [377]:  *    "This product includes software developed by the OpenSSL Project
Matched: [378]:  *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
Matched: [386]:  *    nor may "OpenSSL" appear in their names without prior written
Matched: [387]:  *    permission of the OpenSSL Project.
Matched: [389]:  * 6. Redistributions of any form whatsoever must retain the following
Matched: [391]:  *    "This product includes software developed by the OpenSSL Project
Matched: [392]:  *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
Matched: [425]:  * the following conditions are aheared to.  The following conditions
Matched: [426]:  * apply to all code found in this distribution, be it the RC4, RSA,
Matched: [427]:  * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
Matched: [428]:  * included with this distribution is covered by the same copyright terms
Matched: [429]:  * except that the holder is Tim Hudson (tjh@cryptsoft.com).
Matched: [432]:  * the code are not to be removed.
Matched: [434]:  * as the author of the parts of the library used.
Matched: [435]:  * This can be in the form of a textual message at program startup or
Matched: [436]:  * in documentation (online or textual) provided with the package.
Matched: [439]:  * modification, are permitted provided that the following conditions
Matched: [441]:  * 1. Redistributions of source code must retain the copyright
Matched: [442]:  *    notice, this list of conditions and the following disclaimer.
Matched: [443]:  * 2. Redistributions in binary form must reproduce the above copyright
Matched: [444]:  *    notice, this list of conditions and the following disclaimer in the
Matched: [445]:  *    documentation and/or other materials provided with the distribution.
Matched: [447]:  *    must display the following acknowledgement:
Matched: [450]:  *    The word 'cryptographic' can be left out if the rouines from the library
Matched: [452]:  * 4. If you include any Windows specific code (or a derivative thereof) from 
Matched: [453]:  *    the apps directory (application code) you must include an acknowledgement:
Matched: [470]:  * copied and put under another distribution licence
Matched: [471]:  * [including the GNU Public Licence.]
Matched: [475]: This copy of Python includes a copy of Tcl, which is licensed under the following terms:
Matched: [477]: This software is copyrighted by the Regents of the University of
Matched: [479]: Corporation and other parties.  The following terms apply to all files
Matched: [480]: associated with the software unless explicitly disclaimed in
Matched: [487]: license, or royalty fee is required for any of the authorized uses.
Matched: [488]: Modifications to this software may be copyrighted by their authors
Matched: [489]: and need not follow the licensing terms described here, provided that
Matched: [490]: the new terms are clearly indicated on the first page of each file where
Matched: [491]: they apply.
Matched: [506]: GOVERNMENT USE: If you are acquiring this software on behalf of the
Matched: [507]: U.S. government, the Government shall have only "Restricted Rights"
Matched: [508]: in the software and related documentation as defined in the Federal 
Matched: [510]: are acquiring the software on behalf of the Department of Defense, the
Matched: [511]: software shall be classified as "Commercial Computer Software" and the
Matched: [513]: 252.227-7014 (b) (3) of DFARs.  Notwithstanding the foregoing, the
Matched: [514]: authors grant the U.S. Government and others acting in its behalf
Matched: [515]: permission to use and distribute the software in accordance with the
Matched: [518]: This copy of Python includes a copy of Tk, which is licensed under the following terms:
Matched: [520]: This software is copyrighted by the Regents of the University of
Matched: [522]: Corporation, Apple Inc. and other parties.  The following terms apply to
Matched: [523]: all files associated with the software unless explicitly disclaimed in
Grepping: C:/Python34/README.txt
Matched: [530]: license, or royalty fee is required for any of the authorized uses.
Matched: [531]: Modifications to this software may be copyrighted by their authors
Matched: [532]: and need not follow the licensing terms described here, provided that
Matched: [533]: the new terms are clearly indicated on the first page of each file where
Matched: [534]: they apply.
Matched: [7]: Python 3.x is a new version of the language, which is incompatible with the 2.x
Matched: [8]: line of releases.  The language is mostly the same, but many details, especially
Matched: [549]: GOVERNMENT USE: If you are acquiring this software on behalf of the
Matched: [550]: U.S. government, the Government shall have only "Restricted Rights"
Matched: [551]: in the software and related documentation as defined in the Federal
Matched: [27]: You can pass many options to the configure script; run "./configure --help" to
Matched: [553]: are acquiring the software on behalf of the Department of Defense, the
Matched: [28]: find out more.  On OSX and Cygwin, the executable is called python.exe;
Matched: [554]: software shall be classified as "Commercial Computer Software" and the
Matched: [32]: use "make frameworkinstall" to do the installation.  Note that this installs the
Matched: [556]: 252.227-7013 (b) (3) of DFARs.  Notwithstanding the foregoing, the
Matched: [557]: authors grant the U.S. Government and others acting in its behalf
Matched: [38]: If you wish, you can create a subdirectory and invoke configure from there.  For
Matched: [558]: permission to use and distribute the software in accordance with the
Matched: [561]: This copy of Python includes a copy of Tix, which is licensed under the following terms:
Matched: [47]: (This will fail if you *also* built at the top-level directory.  You should do a
Matched: [48]: "make clean" at the toplevel first.)
Matched: [567]: This software is copyrighted by the above entities
Matched: [568]: and other parties.  The following terms apply to all files associated
Matched: [54]: We try to have a comprehensive overview of the changes in the "What's New in
Matched: [569]: with the software unless explicitly disclaimed in individual files.
Matched: [60]: incomplete, and also doesn't list anything merged in from the 2.7 release under
Matched: [63]: If you want to install multiple versions of Python see the section below
Matched: [575]: license, or royalty fee is required for any of the authorized uses.
Matched: [576]: Modifications to this software may be copyrighted by their authors
Matched: [577]: and need not follow the licensing terms described here, provided that
Matched: [578]: the new terms are clearly indicated on the first page of each file where
Matched: [75]: is downloadable in HTML, PDF, and reStructuredText formats; the latter version
Matched: [579]: they apply.
Matched: [79]: If you would like to contribute to the development of Python, relevant
Matched: [594]: GOVERNMENT USE: If you are acquiring this software on behalf of the
Matched: [595]: U.S. government, the Government shall have only "Restricted Rights"
Matched: [596]: in the software and related documentation as defined in the Federal 
Matched: [598]: are acquiring the software on behalf of the Department of Defense, the
Matched: [94]: A source-to-source translation tool, "2to3", can take care of the mundane task
Matched: [599]: software shall be classified as "Commercial Computer Software" and the
Grepping: C:/Python34/NEWS.txt
Matched: [96]: is complemented by the deprecation warnings in 2.6.  See
Matched: [601]: 252.227-7013 (c) (1) of DFARs.  Notwithstanding the foregoing, the
Matched: [602]: authors grant the U.S. Government and others acting in its behalf
Matched: [103]: To test the interpreter, type "make test" in the top-level directory.  The test
Matched: [603]: permission to use and distribute the software in accordance with the
Matched: [104]: set produces some output.  You can generally ignore the messages about skipped
Matched: [608]: Parts of this software are based on the Tcl/Tk software copyrighted by
Matched: [609]: the Regents of the University of California, Sun Microsystems, Inc.,
Matched: [610]: and other parties. The original license terms of the Tcl/Tk software
Matched: [109]: memory.  To enable these tests, run "make testall".
Matched: [611]: distribution is included in the file docs/license.tcltk.
Matched: [28]: - Issue #23048: Fix jumping out of an infinite while loop in the pdb.
Matched: [613]: Parts of this software are based on the HTML Library software
Matched: [111]: IMPORTANT: If the tests fail and you decide to mail a bug report, *don't*
Matched: [615]: the HTML Library software distribution is included in the file
Matched: [112]: include the output of "make test".  It is useless.  Run the failing test
Matched: [117]: (substituting the top of the source tree for '.' if you built in a different
Matched: [118]: directory).  This runs the test in verbose mode.
Matched: [48]: - Issue #22520: Fix overflow checking when generating the repr of a unicode
Matched: [55]: - Issue #23165: Perform overflow checks before allocating memory in the
Matched: [125]: using the same installation prefix (--prefix argument to the configure script)
Matched: [126]: you must take care that your primary python executable is not overwritten by the
Matched: [128]: "make altinstall" contain the major and minor version and can thus live
Matched: [130]: ${prefix}/bin/pythonX.Y.  If you intend to install multiple versions using the
Matched: [77]: - Issue #23353: Fix the exception handling of generators in
Matched: [132]: Install that version using "make install".  Install all other versions using
Matched: [78]:   PyEval_EvalFrameEx(). At entry, save or swap the exception state even if
Matched: [135]: For example, if you want to install Python 2.6, 2.7 and 3.4 with 2.7 being the
Matched: [79]:   PyEval_EvalFrameEx() is called with throwflag=0. At exit, the exception state
Matched: [137]: and "make altinstall" in the others.
Matched: [143]: We're soliciting bug reports about all aspects of the language.  Fixes are also
Matched: [88]: - Issue #23268: Fixed bugs in the comparison of ipaddress classes.
Matched: [144]: welcome, preferable in unified diff format.  Please use the issue tracker:
Matched: [95]:   headers with no key rather than amusing the body has started.
Matched: [148]: If you're not sure whether you're dealing with a bug or a feature, use the
Matched: [99]: - Issue #23098: 64-bit dev_t is now supported in the os module.
Matched: [153]: To subscribe to the list, use the mailman form:
Matched: [101]: - Issue #23250: In the http.cookies module, capitalize "HttpOnly" and "Secure"
Matched: [102]:   as they are written in the standard.
Matched: [161]: If you have a proposal to change Python, you may want to send an email to the
Matched: [104]: - Issue #23063: In the disutils' check command, fix parsing of reST with code or
Matched: [108]:   reference to the selector mapping to break a reference cycle. Initial patch
Matched: [112]:   availability of the function is checked during the compilation. Patch written
Matched: [185]: Copyright (c) 1991-1995 Stichting Mathematisch Centrum.  All rights reserved.
Matched: [116]:   uses the :data:`~ssl.PROTOCOL_SSLv23` protocol by default, not
Matched: [187]: See the file "LICENSE" for information on the history of this software, terms &
Matched: [120]: - Issue #23111: In the ftplib, make ssl.PROTOCOL_SSLv23 the default protocol
Matched: [192]: but these are entirely optional.
Matched: [194]: All trademarks referenced herein are property of their respective holders.
Matched: [128]: - Issue #23112: Fix SimpleHTTPServer to correctly carry the query string and
Matched: [131]: - Issue #23093: In the io, module allow more operations to work on detached
Matched: [140]: - Issue #19858: pickletools.optimize() now aware of the MEMOIZE opcode, can
Matched: [142]:   data contains MEMOIZE opcodes together with PUT or BINPUT opcodes.
Matched: [145]:   value in the host header was set to "None".  Patch by Demian Brecht.
Matched: [147]: - Issue #23016: A warning no longer produces an AttributeError when the program
Matched: [152]:   That is not the case, so the exception handler itself raised AttributeError
Matched: [153]:   when run on Linux (and, presumably, any other non-Windows OS).
Matched: [159]: - Issue #22959: In the constructor of http.client.HTTPSConnection, prefer the
Matched: [160]:   context's check_hostname attribute over the *check_hostname* parameter.
Matched: [162]: - Issue #16043: Add a default limit for the amount of data xmlrpclib.gzip_decode
Matched: [166]:   asked to compile a source file containing multiple dots in the source file
Matched: [169]: - Issue #21971: Update turtledemo doc and add module to the index.
Matched: [179]: - Issue #22609: Constructors and update methods of mapping classes in the
Matched: [180]:   collections module now accept the self keyword argument.
Matched: [184]: - Issue #22921: Allow SSLContext to take the *hostname* parameter even if
Matched: [187]: - Issue #22894: TestCase.subTest() would cause the test suite to be stopped
Matched: [188]:   when in failfast mode, even in the absence of failures.
Matched: [190]: - Issue #22638: SSLv3 is now disabled throughout the standard library.
Matched: [198]: - Issue #22849: Fix possible double free in the io.TextIOWrapper constructor.
Matched: [200]: - Issue #12728: Different Unicode characters having the same uppercase but
Matched: [206]: - Issue #22406: Fixed the uu_codec codec incorrectly ported to 3.x.
Matched: [220]:   (SSLContext) as an argument which will then used be for HTTPS connection.
Matched: [223]: - Issue #22776: Brought excluded code into the scope of a try block in
Matched: [232]: - Issue #22410: Module level functions in the re module now cache compiled
Matched: [233]:   locale-dependent regular expressions taking into account the locale.
Matched: [236]:   now return False when the underlying stat call raises NotADirectoryError.
Matched: [245]:   are no longer ignored when also set on the parent parser.
Matched: [248]:   be read-only (MappingProxyType).  Previously the dictionary was modifiable
Matched: [249]:   but a new one was created on each access of the attribute.
Matched: [251]: - Issue #22641: In asyncio, the default SSL context for client connections
Matched: [268]: - Issue #11866: Eliminated race condition in the computation of names
Matched: [277]: - Issue #22449: In the ssl.SSLContext.load_default_certs, consult the
Matched: [285]:   os.posix_fallocate() because their prototypes in system headers are wrong.
Matched: [299]: - Issue #20577: Configuration of the max line length for the FormatParagraph
Matched: [300]:   extension has been moved from the General tab of the Idle preferences dialog
Matched: [301]:   to the FormatParagraph tab of the Config Extensions dialog.
Matched: [312]:   editor window with a filename.  When Class Browser is requested otherwise,
Matched: [317]: - Issue #4832: Save As to type Python files automatically adds .py to the
Matched: [321]: - Issue #21986: Code objects are not normally pickled by the pickle module.
Matched: [322]:   To match this, they are no longer pickled when running under Idle.
Matched: [332]: - Issue #18982: Add tests for CLI of the calendar module.
Matched: [335]:   statements in the updated documentation remain accurate. Patch by Martin
Matched: [357]: - Issue #15506: Use standard PKG_PROG_PKG_CONFIG autoconf macro in the configure
Matched: [360]: - Issue #22935: Allow the ssl module to be compiled if openssl doesn't support
Matched: [363]: - Issue #16537: Check whether self.extensions is empty in setup.py. Patch by
Matched: [381]: - Issue #19548: Update the codecs module documentation to better cover the
Matched: [382]:   distinction between text encodings and other codecs, together with other
Matched: [385]: - Issue #22914: Update the Python 2/3 porting HOWTO to describe a more automated
Matched: [388]: - Issue #21514: The documentation of the json module now refers to new JSON RFC
Matched: [394]: - Issue #22314: pydoc now works when the LINES environment variable is set.
Matched: [400]:   to be in ``PCbuild\..\externals`` rather than ``PCbuild\..\..``.
Matched: [425]:   used in the with statement in generator.
Matched: [433]: - Issue #22415: Fixed debugging output of the GROUPREF_EXISTS opcode in the re
Matched: [440]:   line buffering, rather than block buffering.  Patch by Akira Li.
Matched: [451]: - Issue #22258: Fix the the internal function set_inheritable() on Illumos.
Matched: [452]:   This platform exposes the function ``ioctl(FIOCLEX)``, but calling it fails
Matched: [454]:   now falls back to the slower ``fcntl()`` (``F_GETFD`` and then ``F_SETFD``).
Matched: [456]: - Issue #21669: With the aid of heuristics in SyntaxError.__init__, the
Matched: [461]: - Issue #21642: If the conditional if-else expression, allow an integer written
Matched: [462]:   with no space between itself and the ``else`` keyword (e.g. ``True if 42else
Matched: [465]: - Issue #21523: Fix over-pessimistic computation of the stack effect of
Matched: [466]:   some opcodes in the compiler.  This also fixes a quadratic compilation
Matched: [474]:   a method.  Since EmailMessage is provisional, we can change the API in a
Matched: [478]: - Issue #21079: Fix email.message.EmailMessage.is_attachment to return the
Matched: [479]:   correct result when the header has parameters as well as a value.
Matched: [483]: - Issue #4180: The warnings registries are now reset when the filters
Matched: [486]: - Issue #22419: Limit the length of incoming HTTP request in wsgiref server to
Matched: [494]: - Issue #22384: An exception in Tkinter callback no longer crashes the program
Matched: [499]: - Issue #21147: sqlite3 now raises an exception if the request contains a null
Matched: [506]:   if the memory allocation fails.
Matched: [508]: - Issue #22338: Fix a crash in the json module on memory allocation failure.
Matched: [510]: - Issue #22226: First letter no longer is stripped from the "status" key in
Matched: [511]:   the result of Treeview.heading().
Matched: [513]: - Issue #19524: Fixed resource leak in the HTTP connection when an invalid
Matched: [516]: - Issue #22051: turtledemo no longer reloads examples to re-run them.
Matched: [520]: - Issue #21933: Turtledemo users can change the code font size with a menu
Matched: [524]: - Issue #21597: The separator between the turtledemo text pane and the drawing
Matched: [526]:   be widened to easily view or copy the full width of the text.  The canvas
Matched: [529]: - Issue #18132: Turtledemo buttons no longer disappear when the window is
Matched: [533]:   most obvious consequence of the previous behavior was a STARTTLS failure
Matched: [537]:   caused by mutation of the waiters queue without holding the lock.  Patch
Matched: [543]: - The webbrowser module now uses subprocess's start_new_session=True rather
Matched: [556]: - Issue #8797: Raise HTTPError on failed Basic Authentication immediately.
Matched: [559]: - Issue #20729: Restored the use of lazy iterkeys()/itervalues()/iteritems()
Matched: [560]:   in the mailbox module.
Matched: [566]:   and clearer error message when the user forgets the required parameters.
Matched: [575]:   when unpickling pickled sqlite3.Row).  sqlite3.Row is now initialized in the
Matched: [596]: - Issue #19884: readline: Disable the meta modifier key if stdout is not
Matched: [597]:   a terminal to not write the ANSI sequence "\033[1034h" into stdout. This
Matched: [601]: - Issue #21888: plistlib's load() and loads() now work if the fmt parameter is
Matched: [609]: - Issue #19076: Don't pass the redundant 'file' argument to self.error().
Matched: [614]:   if the number of received bytes is negative.
Matched: [622]: - Issue #20639: calling Path.with_suffix('') allows removing the suffix
Matched: [625]: - Issue #21714: Disallow the construction of invalid paths using
Matched: [628]: - Issue #21897: Fix a crash with the f_locals attribute with closure
Matched: [631]: - Issue #21151: Fixed a segfault in the winreg module when ``None`` is passed
Matched: [635]:   it ignored I/O errors if at least the first C call read() succeed.
Matched: [640]:   object is destroyed. The destructor now closes the file if needed. The
Matched: [641]:   close() method can now be called twice: the second call does nothing.
Matched: [643]: - Issue #21858: Better handling of Python exceptions in the sqlite3 module.
Matched: [645]: - Issue #21476: Make sure the email.parser.BytesParser TextIOWrapper is
Matched: [646]:   discarded after parsing, so the input file isn't unexpectedly closed.
Matched: [648]: - Issue #21729: Used the "with" statement in the dbm.dumb module to ensure
Matched: [656]:   negative values the same way for keyword arguments as it does for
Matched: [659]: - Issue #21812: turtle.shapetransform did not tranform the turtle on the
Matched: [663]:   cache didn't match the actual result.  The former was a list of tuples
Matched: [664]:   and the latter was a list of named tuples.
Matched: [669]: - Issue #21723: asyncio.Queue: support any type of number (ex: float) for the
Matched: [674]:   raise an exception if the event loop was closed.
Matched: [676]: - Issue #21774: Fixed NameError for an incorrect variable reference in the
Matched: [687]: - Issue #11709: Fix the pydoc.help function to not fail when sys.stdin is not a
Matched: [690]: - Issue #13223: Fix pydoc.writedoc so that the HTML documentation for methods
Matched: [691]:   that use 'self' in the example code is generated correctly.
Matched: [693]: - Issue #21463: In urllib.request, fix pruning of the FTP cache.
Matched: [696]:   inherited by the calling process and already higher than POSIX resource
Matched: [697]:   limits would otherwise allow.  On systems with a functioning /proc/self/fd
Matched: [698]:   or /dev/fd interface the max is now ignored and all fds are closed.
Matched: [701]:   the tkinter module on 64-bit platforms.
Matched: [703]: - Issue #14315: The zipfile module now ignores extra fields in the central
Matched: [706]:   the wild and is ignored by other zip tools.
Matched: [713]: - Issue #18807: If copying (no symlinks) specified for a venv, then the python
Matched: [714]:   interpreter aliases (python, python3) are now created by copying rather than
Matched: [726]: - Issue #8743: Fix interoperability between set objects and the
Matched: [741]:   broken by the fix for security issue #19435.  Patch by Zach Byrne.
Matched: [746]: - Issue #22176: Update the ctypes module's libffi to v3.1.  This release
Matched: [747]:   adds support for the Linux AArch64 and POWERPC ELF ABIv2 little endian
Matched: [754]:   installer packages compatible with the Gatekeeper security feature.
Matched: [760]:   now display special message when and only when there are failures.
Matched: [766]: - Issue #21166: Prevent possible segfaults and other random failures of
Matched: [779]:   Currently, the entry is on the Help menu, but it may move to Run.
Matched: [795]:   bindings for Idle so Caps Lock does not disable them. Patch by Roger Serwy.
Matched: [797]: - Issue #21695: Closing a Find-in-files output window while the search is
Matched: [809]: - Issue #22166:  with the assistance of a new internal _codecs._forget_codec
Matched: [810]:   helping function, test_codecs now clears the encoding caches to avoid the
Matched: [822]: - Issue #22104: regrtest.py no longer holds a reference to the suite of tests
Matched: [837]:   does not interfere with the transaction semantics expected by the tests.
Matched: [839]: - Issue #19493: Refactored the ctypes test package to skip tests explicitly
Matched: [840]:   rather than silently.
Matched: [854]: - Issue #19925: Added tests for the spwd module. Original patch by Vajrasky Kok.
Matched: [863]:   documented explicitly, rather than assuming users will be able to derive
Matched: [864]:   the expected behaviour from the behaviour of the corresponding str methods.
Matched: [872]: - Issue #10747: Use versioned labels in the Windows start menu.
Matched: [878]: - Issue #22201: Command-line interface of the zipfile module now correctly
Matched: [895]: - Issue #21418: Fix a crash in the builtin function super() when called without
Matched: [898]: - Issue #21425: Fix flushing of standard streams in the interactive
Matched: [912]:   with ignore case.  Original patch by Matthew Barnett.
Matched: [918]:   flush() on the underlying binary stream.  Patch by akira.
Matched: [920]: - Issue #21470: Do a better job seeding the random number generator by
Matched: [921]:   using enough bytes to span the full state space of the Mersenne Twister.
Matched: [923]: - Issue #21398: Fix an unicode error in the pydoc pager when the documentation
Matched: [924]:   contains characters not encodable to the stdout encoding.
Matched: [929]: - Issue #17756: Fix test_code test when run from the installed location.
Matched: [931]: - Issue #17752: Fix distutils tests when run from the installed location.
Matched: [937]:   consolidating and improving human-validated tests of Idle. Change other files
Matched: [938]:   as needed to work with htest.  Running the module as __main__ runs all tests.
Matched: [951]: - Issue #21209: Fix sending tuples to custom generator objects with the yield
Matched: [962]: - Issue #20731: Properly position in source code files even if they
Matched: [972]:   replacement fields. It now matches the behavior of str.format() in
Matched: [979]:   In porting to Argument Clinic, the first two arguments were reversed.
Matched: [981]: - Issue #21469:  Reduced the risk of false positives in robotparser by
Matched: [985]: - Issue #21321: itertools.islice() now releases the reference to the source
Matched: [986]:   iterator when the slice is exhausted.  Patch by Anton Afanasyev.
Matched: [989]:   in the exception's traceback.
Matched: [991]: - Issue #13204: Calling sys.flags.__new__ would crash the interpreter,
Matched: [994]: - Issue #19385: Make operations on a closed dbm.dumb database always raise the
Matched: [997]: - Issue #21207: Detect when the os.urandom cached fd has been closed or
Matched: [1002]:   at the same time without losing the Popen.returncode value.
Matched: [1014]: - Issue #21239: patch.stopall() didn't work deterministically when the same
Matched: [1023]:   strict RFC conformance.  Instead of losing the error code when we issue the
Matched: [1024]:   subsequent RSET, smtplib now returns the error code and defers raising the
Matched: [1025]:   SMTPServerDisconnected error until the next command is issued.
Matched: [1039]: - Issue #21169: getpass now handles non-ascii characters that the
Matched: [1040]:   input stream encoding cannot encode by re-encoding using the
Matched: [1043]: - Issue #21171: Fixed undocumented filter API of the rot13 codec.
Matched: [1049]:   if path and sock are specified at the same time.
Matched: [1052]:   shutdown. Thanks to Devin Jeanpierre for the patch.
Matched: [1055]:   TypeError if the second argument is not a string or compiled regex.
Matched: [1058]:   :func:`tempfile.NamedTemporaryFile`, close the file descriptor if
Matched: [1070]: - Issue #21082: In os.makedirs, do not set the process-wide umask. Note this
Matched: [1076]:   curve for ECDH key exchange on OpenSSL 1.0.2 and later, and otherwise
Matched: [1079]: - Issue #20995: Enhance default ciphers used by the ssl module to enable
Matched: [1086]: - Issue #20879: Delay the initialization of encoding and decoding tables for
Matched: [1087]:   base32, ascii85 and base85 codecs in the base64 module, and delay the
Matched: [1088]:   initialization of the unquote_to_bytes() table of the urllib.parse module, to
Matched: [1089]:   not waste memory if these modules are not used.
Matched: [1091]: - Issue #19157: Include the broadcast address in the usuable hosts for IPv6
Matched: [1095]:   prints out the whole command line (instead of just the command name) if the
Matched: [1108]: - Issue #20283: RE pattern methods now accept the string keyword parameters
Matched: [1114]: - Issue #20791: copy.copy() now doesn't make a copy when the input is
Matched: [1132]:   Due to the specifics of functools.partial implementation,
Matched: [1145]: - Issue #11571: Ensure that the turtle window becomes the topmost window
Matched: [1151]: - Issue #21276: posixmodule: Don't define USE_XATTRS on KFreeBSD and the Hurd.
Matched: [1158]: - Issue #21139: Change default paragraph width to 72, the PEP 8 recommendation.
Matched: [1173]: - Issue #15234: For BerkelyDB and Sqlite, only add the found library and
Matched: [1174]:   include directories if they aren't already being searched. This avoids
Matched: [1190]: - Issue #17386: Expanded functionality of the ``Doc/make.bat`` script to make
Matched: [1193]: - Issue #21043: Remove the recommendation for specific CA organizations and to
Matched: [1194]:   mention the ability to load the OS certificates.
Matched: [1200]:   the Python Packaging Authority tools. Existing guides have been retained
Matched: [1201]:   as legacy links from the distutils docs, as they still contain some
Matched: [1211]:   at least check whether Tk can be instantiated when the GUI resource is
Matched: [1216]: - Issue #21223: Pass test_site/test_startup_imports when some of the extensions
Matched: [1242]: - Add support for the PEP 465 matrix multiplication operator to 2to3.
Matched: [1249]: - Issue #20535: PYTHONWARNING no longer affects the run_tests.py script.
Matched: [1284]: - Issue #20839: Don't trigger a DeprecationWarning in the still supported
Matched: [1293]: - Issue #20748: Uninstalling pip does not leave behind the pyc of
Matched: [1294]:   the uninstaller anymore.
Matched: [1296]: - Issue #20568: The Windows installer now installs the unversioned ``pip``
Matched: [1297]:   command in addition to the versioned ``pip3`` and ``pip3.4`` commands.
Matched: [1299]: - Issue #20757: The ensurepip helper for the Windows uninstaller now skips
Matched: [1300]:   uninstalling pip (rather than failing) if the user has updated pip to a
Matched: [1301]:   different version from the one bundled with ensurepip.
Matched: [1318]: - Issue #20261: In pickle, lookup __getnewargs__ and __getnewargs_ex__ on the
Matched: [1319]:   type of the object.
Matched: [1321]: - Issue #20619: Give the AST nodes of keyword-only arguments a column and line
Matched: [1325]:   don't clear anymore the state of Python threads early during the Python
Matched: [1331]: - Issue #20710: The pydoc summary line no longer displays the "self" parameter
Matched: [1343]:   error if the address is not resolved; use __slots__ in Handle and
Matched: [1344]:   TimerHandle; as_completed() and wait() raise TypeError if the passed
Matched: [1345]:   list of Futures is a single Future; call_soon() and other 'call_*()'
Matched: [1346]:   functions raise TypeError if the passed callback is a coroutine
Matched: [1349]:   to consider pausing receiving if the watermark limits have changed;
Matched: [1350]:   fix _check_resolved_address() for IPv6 address; and other minor
Matched: [1367]: - Issue #19744: the ensurepip installation step now just prints a warning to
Matched: [1368]:   stderr rather than failing outright if SSL/TLS is unavailable. This allows
Matched: [1371]: - Issue #20594: Avoid name clash with the libc function posix_close.
Matched: [1377]:   with the NoImpersonate flag, to support elevated execution (UAC).
Matched: [1382]: - Issue #20609: Restored the ability to build 64-bit Windows binaries on
Matched: [1383]:   32-bit Windows, which was broken by the change in issue #19788.
Matched: [1395]:   cleaning other modules.  The sys and builtins modules are cleaned last.
Matched: [1407]: - Issue #20404: io.TextIOWrapper (and hence the open() builtin) now uses the
Matched: [1415]: - Issue #20162: Fix an alignment issue in the siphash24() hash function which
Matched: [1422]:   to reflect the fact that they only accept positional-only arguments.
Matched: [1424]: - Issue #20517: Functions in the os module that accept two filenames
Matched: [1425]:   now register both filenames in the exception on failure.
Matched: [1430]:   boundary marker, instead of doing so only when there is an epilogue.  This
Matched: [1435]:   algorithm would introduce idle delays before the entire transmission of a
Matched: [1438]: - Issue #16983: the new email header parsing code will now decode encoded words
Matched: [1441]: - Issue #19772: email.generator no longer mutates the message object when
Matched: [1444]: - Issue #20536: the statistics module now correctly handle Decimal instances
Matched: [1447]: - Issue #18805: the netmask/hostmask parsing in ipaddress now more reliably
Matched: [1450]: - Issue #20481: For at least Python 3.4, the statistics module will require
Matched: [1452]:   else a mixed of ints and a single other consistent type. This avoids
Matched: [1453]:   some interoperability issues that arose with the previous approach of
Matched: [1456]: - Issue #20478: the statistics module now treats collections.Counter inputs
Matched: [1457]:   like any other iterable.
Matched: [1459]: - Issue #17369: get_filename was raising an exception if the filename
Matched: [1463]: - Issue #20013: Some imap servers disconnect if the current mailbox is
Matched: [1465]:   handles the 'bye' correctly.
Matched: [1467]: - Issue #20531: Revert 3.4 version of fix for #19063, and apply the 3.3
Matched: [1471]: - Issue #20476: If a non-compat32 policy is used with any of the email parsers,
Matched: [1472]:   EmailMessage is now used as the factory class.  The factory class should
Matched: [1473]:   really come from the policy; that will get fixed in 3.5.
Matched: [1480]: - Issue #19186: Restore namespacing of expat symbols inside the pyexpat module.
Matched: [1482]: - Issue #20053: ensurepip (and hence venv) are no longer affected by the
Matched: [1483]:   settings in the default pip configuration file.
Matched: [1485]: - Issue #20426: When passing the re.DEBUG flag, re.compile() displays the
Matched: [1486]:   debug output every time it is called, regardless of the compilation cache.
Matched: [1496]: - Issue #20354: Fix an alignment issue in the tracemalloc module on 64-bit
Matched: [1507]: - Issue #20311, #20452: poll and epoll now round the timeout away from zero,
Matched: [1512]:   zero.  However, the granularity property and asyncio's resolution feature
Matched: [1516]:   unix pipes; Future.set_exception() instantiates the exception
Matched: [1522]:   in gather(), wait(), as_completed(); use a bytearray for buffering
Matched: [1532]: - Issue #20372: inspect.getfile (and a bunch of other inspect functions that
Matched: [1537]:   positional-only parameters from others.
Matched: [1558]: - Issue #20105: the codec exception chaining now correctly sets the
Matched: [1559]:   traceback of the original exception as its __traceback__ attribute.
Matched: [1566]: - Issue #14455: plistlib: fix serializing integers in the range
Matched: [1567]:   of an unsigned long long but outside of the range of signed long long for
Matched: [1576]: - Update the python.gif icon for the Idle classbrowser and pathbowser
Matched: [1577]:   from the old green snake to the new blue and yellow snakes.
Matched: [1589]: - Issue #19990: Added tests for the imghdr module.  Based on patch by
Matched: [1603]: - Issue #20456: Argument Clinic now observes the C preprocessor conditional
Matched: [1604]:   compilation statements of the C files it parses.  When a Clinic block is
Matched: [1608]: - Issue #20456: Cloned functions in Argument Clinic now use the correct
Matched: [1609]:   name, not the name of the function they were cloned from, for text
Matched: [1615]:   for a parameter in Python and C, using "as" on the parameter line.
Matched: [1622]: - Issue #20326: Argument Clinic now generates separate checksums for the
Matched: [1623]:   input and output sections of the block, allowing external tools to verify
Matched: [1624]:   that the input has not changed (and thus the output is not out-of-date).
Matched: [1641]: - Issue #20488: Change wording to say importlib is *the* implementation of
Matched: [1644]: - Issue #6386: Clarify in the tutorial that specifying a symlink to execute
Matched: [1645]:   means the directory containing the executed script and not the symlink is
Matched: [1669]:   the source encoding was specified on the second line.  Now the source encoding
Matched: [1670]:   declaration on the second line isn't effective if the first line contains
Matched: [1671]:   anything except a comment.  'python -x' works now again with files with the
Matched: [1679]:   issues listed below.  E.g. wait_for() now cancels the inner task if
Matched: [1680]:   the timeout occcurs; tweaked the set of exported symbols; renamed
Matched: [1686]:   between the resolution of the BaseEventLoop.time() method and the resolution
Matched: [1687]:   of the selector. The granuarility is used in the scheduler to round time and
Matched: [1698]:   correctly (for example, by the @contextmanager decorator). The infinite
Matched: [1699]:   loop this caused is now avoided by checking if the expected context is
Matched: [1704]: - Issue #20262: Warnings are raised now when duplicate names are added in the
Matched: [1708]:   @expectedFailure successful if they pass.
Matched: [1720]: - Issue #20245: The open functions in the tarfile module now correctly handle
Matched: [1723]: - Issue #20242: Fixed basicConfig() format strings for the alternative
Matched: [1724]:   formatting styles. Thanks to kespindler for the bug report and patch.
Matched: [1730]:   using a more efficient algorithm that doesn't have the bug.
Matched: [1738]: - Issue #19097: Raise the correct Exception when cgi.FieldStorage is given an
Matched: [1750]: - Issue #18960: The tokenize module now ignore the source encoding declaration
Matched: [1751]:   on the second line if the first line contains anything except a comment.
Matched: [1770]: - Issue #14455: Fix some problems with the new binary plist support in plistlib.
Matched: [1778]: - Issue #18960: IDLE now ignores the source encoding declaration on the second
Matched: [1779]:   line if the first line contains anything except a comment.
Matched: [1787]: - Issue #19804: The test_find_mac test in test_uuid is now skipped if the
Matched: [1802]:   kwargs (or args), the PyArg_NoKeywords (or PyArg_NoPositional) calls
Matched: [1803]:   generated are only run when the type object is an exact match.
Matched: [1808]: - Issue #20390: Argument Clinic converters now have a new template they can
Matched: [1809]:   inject code into: "modifiers".  Code put there is run in the parsing
Matched: [1810]:   function after argument parsing but before the call to the impl.
Matched: [1814]: - Issue #20381: Argument Clinic now sanity checks the default argument when
Matched: [1819]:   __new__ are always of type newfunc, the type of the tp_new slot.
Matched: [1821]:   the type of tp_init.
Matched: [1823]: - Issue #20189: Argument Clinic now suppresses the docstring for __new__
Matched: [1824]:   and __init__ functions if no docstring is provided in the input.
Matched: [1826]: - Issue #20189: Argument Clinic now suppresses the "self" parameter in the
Matched: [1832]: - Issue #20299: Argument Clinic custom converters may now change the default
Matched: [1842]:   requires them.  Disable executable bits and shebang lines in test and
Matched: [1845]:   shebang lines in the unittestgui and checkpip scripts.
Matched: [1847]: - Issue #20268: Argument Clinic now supports cloning the parameters and
Matched: [1860]: - Issue #18960: 2to3 and the findnocoding.py script now ignore the source
Matched: [1861]:   encoding declaration on the second line if the first line contains anything
Matched: [1870]: - Issue #20141: Improved Argument Clinic's support for the PyArg_Parse "O!"
Matched: [1898]: - Issue #19526: Exclude all new API from the stable ABI. Exceptions can be
Matched: [1908]: - Issue #19787: PyThread_set_key_value() now always set the value. In Python
Matched: [1909]:   3.3, the function did nothing if the key already exists (if the current value
Matched: [1912]: - Issue #14432: Remove the thread state field from the frame structure. Fix a
Matched: [1913]:   crash when a generator is created in a C thread that is destroyed while the
Matched: [1915]:   the frame kept a reference to the Python state of the destroyed C thread. The
Matched: [1920]:   the first time and PyEval_InitThreads() was not called yet, a GIL needs to be
Matched: [1945]: - Issue #20111: pathlib.Path.with_suffix() now sanity checks the given suffix.
Matched: [1953]: - Issue #19422: Explicitly disallow non-SOCK_STREAM sockets in the ssl
Matched: [1954]:   module, rather than silently let them emit clear text data.
Matched: [1957]:   calculated.  Generalized support of the euro modifier.
Matched: [1978]:   the file before the method is possibly called.
Matched: [1983]: - Issue #19967: Thanks to the PEP 442, asyncio.Future now uses a
Matched: [1984]:   destructor to log uncaught exceptions, instead of the dedicated
Matched: [2003]: - Issue #20026: Fix the sqlite module to handle correctly invalid isolation
Matched: [2009]: - Issue #19855: uuid.getnode() on Unix now looks on the PATH for the
Matched: [2010]:   executables used to find the mac address, with /sbin and /usr/sbin as
Matched: [2019]:   otherwise rely on parent modules being correctly imported prior to
Matched: [2023]:   parent is created with the default permissions, ignoring the mode argument
Matched: [2024]:   (mimicking the POSIX "mkdir -p" command).
Matched: [2026]: - Issue #19887: Improve the Path.resolve() algorithm to support certain
Matched: [2031]: - Issue #19911: ntpath.splitdrive() now correctly processes the 'İ' character
Matched: [2035]:   respects the -f and -q flags instead of ignoring them.
Matched: [2037]: - Issue #19623: Fixed writing to unseekable files in the aifc module.
Matched: [2039]: - Issue #19946: multiprocessing.spawn now raises ImportError when the module to
Matched: [2040]:   be used as the main module cannot be imported.
Matched: [2043]:   Fixed integer overflow in the eventmask parameter.
Matched: [2045]: - Issue #19063: if a Charset's body_encoding was set to None, the email
Matched: [2046]:   package would generate a message claiming the Content-Transfer-Encoding
Matched: [2047]:   was 7bit, and produce garbage output for the content.  This now works.
Matched: [2048]:   A couple of other set_payload mishandlings of non-ASCII are also fixed.
Matched: [2055]:   and move the function to importlib.util.
Matched: [2058]:   reference cycles between frames and the _Outcome instance.
Matched: [2060]: - Issue #17429: platform.linux_distribution() now decodes files from the UTF-8
Matched: [2061]:   encoding with the surrogateescape error handler, instead of decoding from the
Matched: [2062]:   locale encoding in strict mode. It fixes the function on Fedora 19 which is
Matched: [2063]:   probably the first major distribution release with a non-ASCII name. Patch
Matched: [2070]:   rather than 4096 for efficiency.  A microbenchmark shows Linux and OS X
Matched: [2077]:   if the FD is closed (as long as it was registered).
Matched: [2085]:   objects by setting the encoding argument of Unpickler to be 'bytes'.
Matched: [2095]:   no exception detail exists (no colon following the exception's name, or
Matched: [2096]:   a colon does follow but no text follows the colon).
Matched: [2101]:   socket.socket can now avoid a second syscall if the ioctl() function can be
Matched: [2102]:   used, or if the non-blocking flag of the socket is unchanged.
Matched: [2123]: - Issue #19509: Add SSLContext.check_hostname to match the peer's certificate
Matched: [2131]: - Issue #3693: Make the error message more helpful when the array.array()
Matched: [2132]:   constructor is given a str. Move the array module typecode documentation to
Matched: [2133]:   the docstring of the constructor.
Matched: [2135]: - Issue #19088: Fixed incorrect caching of the copyreg module in
Matched: [2149]: - Issue #6477: Added support for pickling the types of built-in singletons
Matched: [2155]: - Issue #19708: Update pkgutil to use the new importer APIs.
Matched: [2157]: - Issue #19703: Update pydoc to use the new importer APIs.
Matched: [2193]:   disabled since 3.0 due to the changes in listcomp handling.
Matched: [2202]: - Issue #19828: Fixed test_site when the whole suite is run with -S.
Matched: [2217]:   of the time.  Patch by Julian Gindi.
Matched: [2232]: - Issue #19788: kill_python(_d).exe is now run as a PreBuildEvent on the
Matched: [2239]: - Issue #20265: Updated some parts of the Using Windows document.
Matched: [2241]: - Issue #20266: Updated some parts of the Windows FAQ.
Matched: [2243]: - Issue #20255: Updated the about and bugs pages.
Matched: [2245]: - Issue #20253: Fixed a typo in the ipaddress docs that advertised an
Matched: [2248]: - Issue #18840: Introduce the json module in the tutorial, and de-emphasize
Matched: [2249]:   the pickle module.
Matched: [2251]: - Issue #19845: Updated the Compiling Python on Windows section.
Matched: [2271]: - Use the repr of a module name in more places in import, especially
Matched: [2275]:   internal API to throw LookupError for known non-text encodings, rather
Matched: [2276]:   than attempting the encoding or decoding operation and then throwing a
Matched: [2286]:   error handler now works with the utf-16* and utf-32* codecs.  Based on
Matched: [2297]:   codec processing with a replacement exception of the same type that
Matched: [2298]:   includes the codec name in the error message. It ensures it only does this
Matched: [2299]:   when the creation of the replacement exception won't lose any information.
Matched: [2301]: - Issue #19466: Clear the frames of daemon threads earlier during the
Matched: [2318]: - Issue #19369: Optimized the usage of __length_hint__().
Matched: [2320]: - Issue #18603: Ensure that PyOS_mystricmp and PyOS_mystrnicmp are in the
Matched: [2321]:   Python executable and not removed by the linker's optimizer.
Matched: [2323]: - Issue #19306: Add extra hints to the faulthandler module's stack
Matched: [2324]:   dumps that these are "upside down".
Matched: [2332]: - Issue #13477: Added command line interface to the tarfile module.
Matched: [2339]:   computes the stack effect of bytecode instructions.
Matched: [2346]:   which anchor the pattern at both ends of the string to match.
Matched: [2347]:   Original patch by Matthew Barnett.
Matched: [2349]: - Issue #13592: Improved the repr for regular expression pattern objects.
Matched: [2352]: - Issue #19641: Added the audioop.byteswap() function to convert big-endian
Matched: [2355]: - Issue #15204: Deprecated the 'U' mode in file-like objects.
Matched: [2359]: - Issue #19668: Added support for the cp1125 encoding.
Matched: [2371]:   certificates from default stores or system stores. By default the method
Matched: [2372]:   loads CA certs for authentication of server certs.
Matched: [2374]: - Issue #19673: Add pathlib to the stdlib as a provisional module (PEP 428).
Matched: [2377]:   yield from rather than stepping out of the generator into its
Matched: [2382]:   markers in the new disassembly API (Patch by Claudiu Popa).
Matched: [2390]: - Issue #19555: Restore sysconfig.get_config_var('SO'), (and the distutils
Matched: [2393]: - Issue #8813: Add SSLContext.verify_flags to change the verification flags
Matched: [2394]:   of the context in order to enable certification revocation list (CRL)
Matched: [2397]: - Issue #18294: Fix the zlib module to make it 64-bit safe.
Matched: [2415]:   provide the same API elements as non-keyed cryptographic hash functions.
Matched: [2420]: - Issue #19449: in csv's writerow, handle non-string keys when generating the
Matched: [2421]:   error message that certain keys are not in the 'fieldnames' list.
Matched: [2426]: - Issue #2927: Added the unescape() function to the html module.
Matched: [2428]: - Issue #8402: Added the escape() function to the glob module.
Matched: [2430]: - Issue #17618: Add Base85 and Ascii85 encoding/decoding to the base64 module.
Matched: [2436]:   on a system with SO_REUSEPORT defined in the headers but run on a system
Matched: [2439]: - Fix compilation error under gcc of the ctypes module bundled libffi for arm.
Matched: [2444]: - Issue #19282: dbm.open now supports the context management protocol. (Inital
Matched: [2447]: - Issue #8311: Added support for writing any bytes-like objects in the aifc,
Matched: [2450]: - Issue #5202: Added support for unseekable files in the wave module.
Matched: [2459]:   parameters to sdist command accidentally rolled back as part of the
Matched: [2465]: - Issue #19406: implementation of the ensurepip module (part of PEP 453).
Matched: [2470]:   in the rollback of distutils2.
Matched: [2472]: - Issue #19544 and Issue #7457: Restore the read_pkg_file method to
Matched: [2473]:   distutils.dist.DistributionMetadata accidentally removed in the undo of
Matched: [2476]: - Issue #16685: Added support for any bytes-like objects in the audioop module.
Matched: [2482]: - Issue #19261: Added support for writing 24-bit samples in the sunau module.
Matched: [2489]: - Issue #19378: Fixed a number of cases in the dis module where the new
Matched: [2492]: - Issue #19378: Removed the "dis.Bytecode.show_info" method
Matched: [2494]: - Issue #19378: Renamed the "dis.Bytecode.display_code" method to
Matched: [2495]:   "dis.Bytecode.dis" and converted it to returning a string rather than
Matched: [2498]: - Issue #19378: the "line_offset" parameter in the new "dis.get_instructions"
Matched: [2499]:   API has been renamed to "first_line" (and the default value and usage
Matched: [2500]:   changed accordingly). This should reduce confusion with the more common use
Matched: [2501]:   of "offset" in the dis docs to refer to bytecode offsets.
Matched: [2520]:   the filelist, preventing failure outlined in the ticket.
Matched: [2523]:   by the HTML5 standard.
Matched: [2525]: - Issue #15114: The html.parser module now raises a DeprecationWarning when the
Matched: [2526]:   strict argument of HTMLParser or the HTMLParser.error method are used.
Matched: [2528]: - Issue #19410: Undo the special-casing removal of '' for
Matched: [2531]: - Issue #19424: Fix the warnings module to accept filename containing surrogate
Matched: [2544]: - Issue #19227: Try to fix deadlocks caused by re-seeding then OpenSSL
Matched: [2565]: - Issue #19330: the unnecessary wrapper functions have been removed from the
Matched: [2566]:   implementations of the new contextlib.redirect_stdout and
Matched: [2567]:   contextlib.suppress context managers, which also ensures they provide
Matched: [2570]: - Issue #19393: Fix symtable.symtable function to not be confused when there are
Matched: [2586]: - Issue #19379: Lazily import linecache in the warnings module, to make
Matched: [2589]: - Issue #19288: Fixed the "in" operator of dbm.gnu databases for string
Matched: [2592]: - Issue #19287: Fixed the "in" operator of dbm.ndbm databases for string
Matched: [2595]: - Issue #19327: Fixed the working of regular expressions with too big charset.
Matched: [2600]: - Issue #19350: Increasing the test coverage of macurl2path. Patch by Colin
Matched: [2603]: - Issue #19365: Optimized the parsing of long replacement string in re.sub*()
Matched: [2631]:   of the wrong type.
Matched: [2634]:   limiting the call to readline().  Original patch by Michał
Matched: [2637]: - Issue #17087: Improved the repr for regular expression match objects.
Matched: [2642]: - Issue #19664: test_userdict's repr test no longer depends on the order
Matched: [2646]:   import, converting from test_main to unittest.main, and running the
Matched: [2649]: - Issue #19378: the main dis module tests are now run with both stdout
Matched: [2652]: - Issue #19378: removed the not-actually-helpful assertInstructionMatches
Matched: [2668]:   attempt to reduce confusion in the glossary by not saying there are
Matched: [2674]: - Issue #19358: "make clinic" now runs the Argument Clinic preprocessor
Matched: [2688]: - Issue #19520: Fix compiler warning in the _sha3 module on 32bit Windows.
Matched: [2698]: - Issue #19649: On OS X, the same set of file names are now installed
Matched: [2705]:   upgrade pip by default, using the bundled pip provided by the new ensurepip
Matched: [2707]:   available to override the default ensurepip "--upgrade" option.  The option
Matched: [2710]: - Issue #19551: PEP 453 - the OS X installer now installs pip by default.
Matched: [2723]: - Issue #19730: Argument Clinic now supports all the existing PyArg
Matched: [2725]:   "self converters" and the "version" directive.
Matched: [2728]:   default (pass --without-pip to request the old behaviour)
Matched: [2750]:   the code is optimistic that if something exists in a directory named exactly
Matched: [2751]:   like the possible package being searched for that it's in actuality a
Matched: [2754]: - Issue #18416: importlib.machinery.PathFinder now treats '' as the cwd and
Matched: [2757]:   __file__ (this does not affect modules specified by path on the CLI but it
Matched: [2761]: - Issue #4555: All exported C symbols are now prefixed with either
Matched: [2769]: - Issue #16742: The result of the C callback PyOS_ReadlineFunctionPointer must
Matched: [2780]:   of data at the front (slice deletion).
Matched: [2787]: - Issue #19078: memoryview now correctly supports the reversed builtin
Matched: [2796]: - Issue #18235: Fix the sysconfig variables LDSHARED and BLDSHARED under AIX.
Matched: [2799]: - Issue #18606: Add the new "statistics" module (PEP 450).  Contributed
Matched: [2812]: - Issue #19262: Initial check in of the 'asyncio' package (a.k.a. Tulip,
Matched: [2813]:   a.k.a. PEP 3156).  There are no docs yet, and the PEP is slightly
Matched: [2814]:   out of date with the code.  This module will have *provisional* status
Matched: [2817]: - Issue #19276: Fixed the wave module on 64-bit big-endian platforms.
Matched: [2819]: - Issue #19266: Rename the new-in-3.4 ``contextlib.ignore`` context manager
Matched: [2821]:   descriptions of that operation elsewhere in the language and standard
Matched: [2824]: - Issue #18891: Completed the new email package (provisional) API additions
Matched: [2829]: - Issue #18999: Multiprocessing now supports 'contexts' with the same API
Matched: [2830]:   as the module, but bound to specified start methods.
Matched: [2832]: - Issue #18468: The re.split, re.findall, and re.sub functions and the group()
Matched: [2838]: - Issue #18776: atexit callbacks now display their full traceback when they
Matched: [2841]: - Issue #17827: Add the missing documentation for ``codecs.encode`` and
Matched: [2847]: - Issue #18582: Add 'pbkdf2_hmac' to the hashlib module. It implements PKCS#5
Matched: [2853]: - Issue #19209: Remove import of copyreg from the os module to speed up
Matched: [2855]:   reside in the os module.
Matched: [2857]: - Issue #19205: Don't import the 're' module in site and sysconfig module to
Matched: [2860]: - Issue #9548: Add a minimal "_bootlocale" module that is imported by the
Matched: [2861]:   _io module instead of the full locale module.
Matched: [2863]: - Issue #18764: remove the 'print' alias for the PDB 'p' command so that it no
Matched: [2864]:   longer shadows the print function.
Matched: [2871]: - Issue #18716: Deprecate the formatter module.
Matched: [2879]:   object that exports a 1 dimensional array of bytes (this means the same
Matched: [2888]:   NotImplemented being returned by the underlying comparison function (Patch
Matched: [2892]:   from the __exit__ callbacks of inner context managers (Patch by Hrvoje
Matched: [2895]: - Issue #12641: Avoid passing "-mno-cygwin" to the mingw32 compiler, except
Matched: [2899]:   if no history has been read already.  This avoids double writes to the
Matched: [2904]: - Issue #19095: SSLSocket.getpeercert() now raises ValueError when the
Matched: [2922]:   encoding and error handler for the standard IO streams (initial patch by
Matched: [2942]: - Issue #18972: Modernize email examples and use the argparse module in them.
Matched: [2955]:     4. there was no obvious way to configure an intel-32 only build.
Matched: [2957]: - Issue #19019: Change the OS X installer build script to use CFLAGS instead
Matched: [2972]: - Issue #19098: Prevent overflow in the compiler when the recursion limit is set
Matched: [2979]:   attributes returned by `dir()` that are located in the metaclass.
Matched: [2981]: - Issue #18950: Fix miscellaneous bugs in the sunau module.
Matched: [3002]: - Issue #18978: ``urllib.request.Request`` now allows the method to be
Matched: [3003]:   indicated on the class and no longer sets it to None in ``__init__``.
Matched: [3005]: - Issue #18626: the inspect module now offers a basic command line
Matched: [3012]:   before moving them into place, to avoid race conditions with other programs
Matched: [3013]:   that may be accessing the maildir directory.
Matched: [3016]:   argument (and therefore is reading the user's $HOME/.netrc file), it now
Matched: [3017]:   enforces the same security rules as typical ftp clients: the .netrc file must
Matched: [3018]:   be owned by the user that owns the process and must not be readable by any
Matched: [3019]:   other user.
Matched: [3028]:   to ensure that a block of code emits a message using the logging module.
Matched: [3034]:   in the underlying iterables.
Matched: [3037]:   if all the necessary functions have already been found in libuuid.  Patch by
Matched: [3040]: - The :envvar:`PYTHONFAULTHANDLER` environment variable now only enables the
Matched: [3041]:   faulthandler module if the variable is non-empty. Same behaviour than other
Matched: [3045]:   the local variables of all the stack frames referenced by a traceback
Matched: [3066]: - Issue #17003: Unified the size argument names in the io module with common
Matched: [3072]: - Issue #18596: Support the use of address sanity checking in recent versions
Matched: [3073]:   of clang and GCC by appropriately marking known false alarms in the small
Matched: [3079]: - Issue #18873: 2to3 and the findnocoding.py script now detect Python source
Matched: [3093]: - Issue #18571: Implementation of the PEP 446: file descriptors and file
Matched: [3098]: - Issue #11619: The parser and the import machinery do not encode Unicode
Matched: [3108]: - Issue #18771: Add optimization to set object lookups to reduce the cost
Matched: [3112]: - Issue #16105: When a signal handler fails to write to the file descriptor
Matched: [3114]:   of ignoring the error.
Matched: [3116]: - Issue #18722: Remove uses of the "register" keyword in C code.
Matched: [3137]: - Issue #18808: Thread.join() now waits for the underlying thread state to
Matched: [3144]: - Issue #18852: Handle case of ``readline.__doc__`` being ``None`` in the new
Matched: [3148]:   the _sre module.
Matched: [3153]: - Issue #18878: sunau.open now supports the context management protocol.  Based on
Matched: [3159]: - Issue #18876: The FileIO.mode attribute now better reflects the actual mode
Matched: [3160]:   under which the file was opened.  Patch by Erik Bray.
Matched: [3166]: - Issue #18901: The sunau getparams method now returns a namedtuple rather than
Matched: [3169]: - Issue #17487: The result of the wave getparams method now is pickleable again.
Matched: [3183]: - Issue #16611: http.cookie now correctly parses the 'secure' and 'httponly'
Matched: [3190]:   instead of symlinks even where symlinks are available and the default.
Matched: [3197]: - Issue #17702: On error, os.environb now suppresses the exception context
Matched: [3198]:   when raising a new KeyError with the original key.
Matched: [3206]:   supersedes the previous fixes for #14360, #1717, and #16564.
Matched: [3212]:   in the tkinter module.
Matched: [3215]:   A pthread_atfork() parent handler is used to seed the PRNG with pid, time
Matched: [3221]: - Issue #18777: The ssl module now uses the new CRYPTO_THREADID API of
Matched: [3222]:   OpenSSL 1.0.0+ instead of the deprecated CRYPTO id callback function.
Matched: [3230]:   inside subjectAltName correctly. Formerly the module has used OpenSSL's
Matched: [3231]:   GENERAL_NAME_print() function to get the string represention of ASN.1
Matched: [3237]: - Issue #18756: Improve error reporting in os.urandom() when the failure
Matched: [3239]:   exhausting the file descriptor limit).
Matched: [3244]: - Issue #18532: Change the builtin hash algorithms' names to lower case names
Matched: [3251]: - Issue #18405: Improve the entropy of crypt.mksalt().
Matched: [3254]:   instead of 6, to reduce the risk of filename collision. The entropy was
Matched: [3255]:   reduced when uppercase letters were removed from the charset used to generate
Matched: [3262]:   include the module name when a key argument is missing.
Matched: [3275]:   if methods have annotations; it now correctly displays the annotations.
Matched: [3282]: - Issue #18621: Prevent the site module's patched builtins from keeping
Matched: [3293]: - Issue #18920: argparse's default destination for the version action (-v,
Matched: [3294]:   --version) has also been changed to stdout, to match the Python executable.
Matched: [3299]: - Issue #18623: Factor out the _SuppressCoreFiles context manager into
Matched: [3304]: - Issue #15507: test_subprocess's test_send_signal could fail if the test
Matched: [3305]:   runner were run in an environment where the process inherited an ignore
Matched: [3306]:   setting for SIGINT.  Restore the SIGINT handler to the desired
Grepping: C:/Python34/Tools/pynche/html40colors.txt
Matched: [3335]: - Issue #15663: Tcl/Tk 8.5.14 is now included with the OS X 10.6+ 64-/32-bit
Matched: [3337]:   Tcl/Tk 8.5 to work around the problems in the Apple-supplied Tcl/Tk 8.5
Matched: [3344]:   their version strings to stdout, and not to sderr.
Matched: [3365]:   their globals to None, in most cases.
Matched: [3378]: - Issue #15905: Fix theoretical buffer overflow in handling of sys.argv[0],
Matched: [3379]:   prefix and exec_prefix if the operation system does not obey MAXPATHLEN.
Matched: [3386]: - Issue #18342: Use the repr of a module name when an import fails when using
Matched: [3398]: - Issue #17206: On Windows, increase the stack size from 2 MB to 4.2 MB to fix
Matched: [3399]:   a stack overflow in the marshal module (fix a crash in test_marshal).
Matched: [3402]: - Issue #3329: Implement the PEP 445: Add new APIs to customize Python memory
Matched: [3405]: - Issue #18328: Reorder ops in PyThreadState_Delete*() functions. Now the
Matched: [3406]:   tstate is first removed from TLS and then deallocated.
Matched: [3431]: - Tweak the exception message when the magic number or size value in a bytecode
Matched: [3435]:   change the C type of seqiterobject.it_index from long to Py_ssize_t.
Matched: [3437]: - Issue #18065: Don't set __path__ to the package name for frozen packages.
Matched: [3440]:   attributes on the module (e.g. __name__, __loader__, __package__, __file__,
Matched: [3445]: - Issue #12370: Prevent class bodies from interfering with the __class__
Matched: [3451]: - Issue #17237: Fix crash in the ASCII decoder on m68k.
Matched: [3453]: - Issue #17927: Frame objects kept arguments alive if they had been
Matched: [3454]:   copied into a cell, even if the cell was cleared.
Matched: [3459]: - Issue #7330: Implement width and precision (ex: "%5.3s") for the format
Matched: [3467]:   resources which would otherwise remain perpetually alive (e.g. database
Matched: [3470]: - Issue #17408: Avoid using an obsolete instance of the copyreg module when
Matched: [3471]:   the interpreter is shutdown and then started again.
Matched: [3473]: - Issue #5845: Enable tab-completion in the interactive interpreter by
Matched: [3480]:   over the closures.
Matched: [3482]: - Issue #17863: In the interactive console, don't loop forever if the encoding
Matched: [3487]: - Issue #18698: Ensure importlib.reload() returns the module out of sys.modules.
Matched: [3493]:   exception instance for the 'value' element of the arg tuple if the exception
Matched: [3513]: - Issue #14439: Python now prints the traceback on runpy failure at startup.
Matched: [3521]:   the importlib transition.
Matched: [3523]: - Issue #17610: Don't rely on non-standard behavior of the C qsort() function.
Matched: [3526]:   disabled by default.  It can be re-enabled with the `-X showrefcount` option.
Matched: [3530]: - Issue #17275: Corrected class name in init error messages of the C version of
Matched: [3548]:   in the interpreter.
Matched: [3550]: - Issue #17137: When an Unicode string is resized, the internal wide character
Matched: [3553]: - Issue #17043: The unicode-internal decoder no longer read past the end of
Matched: [3556]: - Issue #17098: All modules now have __loader__ set even if they pre-exist the
Matched: [3559]: - Issue #16979: Fix error handling bugs in the unicode-escape-decode decoder.
Matched: [3561]: - Issue #16772: The base argument to the int constructor no longer accepts
Matched: [3562]:   floats, or other non-integer objects with an __int__ method.  Objects
Matched: [3565]: - Issue #10156: In the interpreter's initialization phase, unicode globals
Matched: [3568]: - Issue #16980: Fix processing of escaped non-ascii bytes in the
Matched: [3571]: - Issue #16975: Fix error handling bug in the escape-decode bytes decoder.
Matched: [3577]:   allow the new child map to be specified explicitly.
Matched: [3580]:   exception when trying to populate its cache and it finds out the directory is
Matched: [3587]: - Issue #11461: Fix the incremental UTF-16 decoder. Original patch by
Matched: [3597]: - Issue #16759: Support the full DWORD (unsigned long) range in Reg2Py
Matched: [3601]: - Issue #14420: Support the full DWORD (unsigned long) range in Py2Reg
Matched: [3604]: - Issue #11939: Set the st_dev attribute of stat_result to allow Windows to
Matched: [3605]:   take advantage of the os.path.samefile/sameopenfile/samestat implementations
Matched: [3606]:   used by other platforms.
Matched: [3609]:   accepts non integer values.  Consistent with the behavior in Python 2.
Matched: [3616]: - Issue #16597: In buffered and text IO, call close() on the underlying stream
Matched: [3619]: - Issue #16722: In the bytes() constructor, try to call __bytes__ on the
Matched: [3623]:   handled correctly (previously, the first module loaded from that file
Matched: [3627]:   chain, the object could remain reachable through its weakref even though
Matched: [3633]:   literals. As a result, these constants are never loaded at runtime from
Matched: [3636]: - Issue #16455: On FreeBSD and Solaris, if the locale is C, the
Grepping: C:/Python34/Tools/pynche/namedcolors.txt
Matched: [3637]:   ASCII/surrogateescape codec is now used (instead of the locale encoding) to
Matched: [3638]:   decode the command line arguments. This change fixes inconsistencies with
Matched: [3639]:   os.fsencode() and os.fsdecode(), because these operating systems announce an
Matched: [3640]:   ASCII locale encoding, but actually use the ISO-8859-1 encoding in practice.
Matched: [3655]:   parameters where passed to the interpreter.  Patch by Hieu Nguyen.
Matched: [3660]: - Issue #16290: A float return value from the __complex__ special method is no
Matched: [3661]:   longer accepted in the complex() constructor.
Matched: [3664]:   encoded/decoded to/from UTF-8/surrogateescape, instead of the locale encoding
Matched: [3672]:   handled by Python to not persist after os.fork() in the child process.
Matched: [3675]:   rather than raising OverflowError.
Matched: [3680]: - Issue #8271: the utf-8 decoder now outputs the correct number of U+FFFD
Matched: [3681]:   characters when used with the 'replace' error handler on invalid utf-8
Matched: [3684]: - Issue #5765: Apply a hard recursion limit in the compiler instead of
Matched: [3685]:   blowing the stack and segfaulting. Initial patch by Andrea Griffini.
Matched: [3690]: - Issue #16336: fix input checking in the surrogatepass error handler.
Matched: [3699]: - Issue #16309: Make PYTHONPATH="" behavior the same as if PYTHONPATH
Matched: [3702]: - Issue #10189: Improve the error reporting of SyntaxErrors related to global
Matched: [3708]: - Issue #14625: Rewrite the UTF-32 decoder. It is now 3x to 4x faster. Patch
Matched: [3712]:   received a nonempty dict from the constructor.
Matched: [3717]: - Issue #12805: Make bytes.join and bytearray.join faster when the separator
Matched: [3720]: - Issue #6074: Ensure cached bytecode files can always be updated by the
Matched: [3721]:   user that created them, even when the source file is read-only.
Matched: [3736]: - Issue #15379: Fix passing of non-BMP characters as integers for the charmap
Matched: [3744]:   (which defines `AT_FDCWD` as ``0xffd19553``), harmless on other platforms.
Matched: [3748]: - Issue #15448: Buffered IO now frees the buffer when closed, instead
Matched: [3770]: - Issue #13461: Fix a crash in the TextIOWrapper.tell method on 64-bit
Matched: [3775]: - Issue #14323: Expanded the number of digits in the coefficients for the
Matched: [3776]:   RGB -- YIQ conversions so that they match the FCC NTSC versions.
Matched: [3780]: - Issue #17557: Fix os.getgroups() to work with the modified behavior of
Matched: [3783]: - Issue #18608: Avoid keeping a strong reference to the locale module
Matched: [3784]:   inside the _io module.
Matched: [3793]: - Issue #17616: wave.open now supports the context management protocol.
Grepping: C:/Python34/Tools/pynche/webcolors.txt
Matched: [3805]: - Issue #18556: Check the return type of PyUnicode_AsWideChar() in ctype's
Grepping: C:/Python34/Tools/pynche/websafe.txt
Matched: [3826]: - Issue #18480: Add missing call to PyType_Ready to the _elementtree extension.
Matched: [3833]:   platform._bcd2str have been removed. This does not affect the public
Matched: [3834]:   interface of the platform module.
Matched: [3836]: - Issue #17482: functools.update_wrapper (and functools.wraps) now set the
Matched: [3837]:   __wrapped__ attribute correctly even if the underlying function has a
Matched: [3847]:   an encoded character immediately followed the '?' that follows the CTE
Matched: [3854]:   and thus was always falling back to stdin, and would then raise an exception
Matched: [3856]:   All of these issues are now fixed.
Matched: [3858]: - Issue #17198: Fix a NameError in the dbm module.  Patch by Valentina
Matched: [3861]: - Issue #18013: Fix cgi.FieldStorage to parse the W3C sample form.
Matched: [3866]: - Issue #18347: ElementTree's html serializer now preserves the case of
Matched: [3871]: - Issue #18343: faulthandler.register() now keeps the previous signal handler
Matched: [3872]:   when the function is called twice, so faulthandler.unregister() restores
Matched: [3873]:   correctly the original signal handler.
Matched: [3878]:   segfault inside the _pickle C extension.
Matched: [3893]: - Issue #11390: Add -o and -f command line options to the doctest CLI to
Matched: [3896]: - Issue #18135: ssl.SSLSocket.write() now raises an OverflowError if the input
Matched: [3898]:   raises a ValueError if the password is longer than 2 gigabytes. The ssl
Matched: [3901]: - Issue #11016: Add C implementation of the stat module as _stat.
Matched: [3912]:   when \r\n appears at end of 65535 bytes without other newlines.
Matched: [3921]: - Issue #18058, 18057: Make the namespace package loader meet the
Matched: [3927]: - subprocess: Prevent a possible double close of parent pipe fds when the
Matched: [3928]:   subprocess exec runs into an error.  Prevent a regular multi-close of the
Matched: [3932]:   source_from_cache() while documenting the equivalent functions in imp as
Matched: [3941]: - Issue #18149: Add filecmp.clear_cache() to manually clear the filecmp cache.
Matched: [3953]:   the default locations for cafile and capath.
Matched: [3960]: - Issue #18109: os.uname() now decodes fields from the locale encoding, and
Matched: [3961]:   socket.gethostname() now decodes the hostname from the locale encoding,
Matched: [3962]:   instead of using the UTF-8 encoding in strict mode.
Matched: [3967]:   module attributes. Leads to the pending deprecation of
Matched: [3970]: - Issue #17403: urllib.parse.robotparser normalizes the urls before adding to
Matched: [3977]: - Added importlib.util.module_to_load to return a context manager to provide the
Matched: [3984]:   binascii.Error if there are non-b32-alphabet characters present in the input
Matched: [3990]: - Issue #8240: Set the SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER flag on SSL
Matched: [3996]: - Issue #16986: ElementTree now correctly works with string input when the
Matched: [4018]: - Issue #17981: logging's SysLogHandler now closes the socket when it catches
Matched: [4021]: - Issue #17964: Fix os.sysconf(): the return type of the C sysconf() function
Matched: [4024]: - Fix typos in the multiprocessing module.
Matched: [4026]: - Issue #17754: Make ctypes.util.find_library() independent of the locale.
Matched: [4030]: - Issue #17606: Fixed support of encoded byte strings in the XMLGenerator
Matched: [4040]: - Issue #16601: Restarting iteration over tarfile really restarts rather
Matched: [4044]:   or applications changing the rl_completer_word_break_characters global
Matched: [4050]: - Issue #11816: multiple improvements to the dis module: get_instructions
Matched: [4067]:   raise an OSError with ENOTCONN, instead of an AttributeError, when the
Matched: [4082]:   preserves the line endings of the original file.
Matched: [4084]: - Issue #17272: Making the urllib.request's Request.full_url a descriptor.
Matched: [4093]:   allowing the subprocess's stdin to be provided as a (byte) string.
Matched: [4099]: - Issue #16694: Add a pure Python implementation of the operator module.
Matched: [4102]: - Issue #11182: remove the unused and undocumented pydoc.Scanner class.
Matched: [4114]: - Issue #17720: Fix the Python implementation of pickle.Unpickler to correctly
Matched: [4115]:   process the APPENDS opcode when it is used on non-list objects.
Matched: [4117]: - Issue #17012: shutil.which() no longer falls back to the PATH environment
Matched: [4122]: - Issue #17341: Include the invalid name in the error messages from re about
Matched: [4125]: - Issue #17702: os.environ now raises KeyError with the original environment
Matched: [4126]:   variable name (str on UNIX), instead of using the encoded name (bytes on
Matched: [4129]: - Issue #16163: Make the importlib based version of pkgutil.iter_importers
Matched: [4132]: - Issue #16804: Fix a bug in the 'site' module that caused running
Matched: [4135]: - Issue #15480: Remove the deprecated and unused TYPE_INT64 code from marshal.
Matched: [4141]:   in the re module.  Patch by Nickolai Zeldovich.
Matched: [4146]: - Issue #9556: the logging package now allows specifying a time-of-day for a
Matched: [4150]:   has a different __name__ than its name in the TestCase class dictionary.
Matched: [4152]: - Issue #17487: The wave getparams method now returns a namedtuple rather than
Matched: [4158]: - Issue #17093: Make the ABCs in importlib.abc provide default values or raise
Matched: [4159]:   reasonable exceptions for their methods to make them more amenable to super()
Matched: [4165]: - Issue #17678: Remove the use of deprecated method in http/cookiejar.py by
Matched: [4166]:   changing the call to get_origin_req_host() to origin_req_host.
Matched: [4175]: - Issue #16795: On the ast.arguments object, unify vararg with varargannotation
Matched: [4176]:   and kwarg and kwargannotation. Change the column offset of ast.Attribute to be
Matched: [4177]:   at the attribute name.
Matched: [4183]:   it has a value of None or the attribute doesn't exist.
Matched: [4185]: - Issue #17032: The "global" in the "NameError: global name 'x' is not defined"
Matched: [4188]: - Issue #18080: When building a C extension module on OS X, if the compiler
Matched: [4189]:   is overriden with the CC environment variable, use the new compiler as
Matched: [4190]:   the default for linking if LDSHARED is not also overriden.  This restores
Matched: [4193]: - Issue #18113: Fixed a refcount leak in the curses.panel module's
Matched: [4198]: - Implement PEP 435 "Adding an Enum type to the Python standard library".
Matched: [4206]:   default values for the args and kwargs parameters.
Matched: [4224]: - Issue #17488: Change the subprocess.Popen bufsize parameter default value
Matched: [4225]:   from unbuffered (0) to buffering (-1) to match the behavior existing code
Matched: [4226]:   expects and match the behavior of the subprocess module in Python 2 to avoid
Matched: [4233]:   where the target handler wasn't configured first.
Matched: [4239]:   sending mail by closing the socket and reporting the 421 error code via the
Grepping: C:/Python34/Tools/pynche/README.txt
Matched: [4240]:   exception appropriate to the command that received the error response.
Matched: [4245]: - Issue #17485: Also delete the Request Content-Length header if the data
Matched: [10]:     originally wrote back in 1987 for the Sunview window system.  That
Matched: [11]:     editor was called ICE, the Interactive Color Editor.  I'd always
Matched: [4257]: - Issue #17192: Update the ctypes module's libffi to v3.0.13.  This
Matched: [16]:     changed the name because these days, too many other systems have
Matched: [4263]: - Issue #17443: imaplib.IMAP4_stream was using the default unbuffered IO
Matched: [17]:     the acronym `ICE'.
Matched: [4264]:   in subprocess, but the imap code assumes buffered IO.  In Python2 this
Matched: [24]:     graphics cards; 24bit+ graphics cards are so cheap these days,
Matched: [4268]:   'allmethods'; it was missing unbound methods on the class.
Matched: [4270]: - Issue #17474: Remove the deprecated methods of Request class.
Matched: [29]:     rgb.txt file from the X11R6.4 distribution for this reason, along
Matched: [30]:     with other "Web related" database (see below).  You can use a
Matched: [4275]: - Use the HTTPS PyPI url for upload, overriding any plain HTTP URL in pypirc.
Matched: [31]:     different file with the -d option.  The file xlicense.txt contains
Matched: [4277]: - Issue #5024: sndhdr.whichhdr now returns the frame count for WAV files
Matched: [32]:     the license only for rgb.txt and both files are in the X/
Matched: [4278]:   rather than -1.
Matched: [4280]: - Issue #17460: Remove the strict argument of HTTPConnection and removing the
Matched: [40]:     On Unix, start it by running the `pynche' script.  On Windows, run
Matched: [4283]: - Issue #16880: Do not assume _imp.load_dynamic() is defined in the imp module.
Matched: [41]:     pynche.pyw to inhibit the console window.  When run from the
Matched: [4285]: - Issue #16389: Fixed a performance regression relative to Python 3.1 in the
Matched: [42]:     command line, the following options are recognized:
Matched: [46]:         Alternate location of the color database file.  Without this
Matched: [47]:         option, the first valid file found will be used (see below).
Matched: [4297]: - Issue #1285086: Get rid of the refcounting hack and speed up
Matched: [51]:         Alternate location of the persistent initialization file.  See 
Matched: [52]:         the section on Persistency below.
Matched: [4301]:   is not set, harmonizing with what happens when the attribute is set to None.
Matched: [56]:         Ignore the persistent initialization file when starting up.
Matched: [4303]: - Expose the O_PATH constant in the os module if it is available.
Matched: [57]:         Pynche will still write the current option settings to the
Matched: [4305]: - Issue #17368: Fix an off-by-one error in the Python JSON decoder that caused
Matched: [62]:         Print the help message.
Matched: [65]:         a Tk color name or #rrggbb color spec to be used as the
Matched: [4313]:   ignore specified exceptions, replacing the "except SomeException: pass" idiom.
Matched: [67]:         the persistent init file.  Since `#' needs to be escaped in
Matched: [4315]: - Issue #14645: The email generator classes now produce output using the
Matched: [68]:         many shells, it is optional in the spec (e.g. #45dd1f is the
Matched: [4316]:   specified linesep throughout.  Previously if the prolog, epilog, or
Matched: [74]:     Pynche can be run as a modal dialog, inside another application,
Matched: [4321]:   the list is being resized concurrently.
Matched: [76]:     and a future version of IDLE may as well.  Pynche supports the API
Matched: [4323]: - Issue #16962: Use getdents64 instead of the obsolete getdents syscall
Matched: [77]:     implemented by the Tkinter standard tkColorChooser module, with a
Matched: [4324]:   in the subprocess module on Linux.
Matched: [79]:     the Pynche package, you can run
Matched: [4326]: - Issue #16935: unittest now counts the module as skipped if it raises SkipTest,
Matched: [83]:     which will popup Pynche as a modal dialog, and return the selected 
Matched: [87]:     vs. standalone.  When running as a modal, there is no "Quit" menu
Matched: [88]:     item under the "File" menu.  Instead there are "Okay" and "Cancel"
Matched: [91]:     When "Okay" is hit, askcolor() returns the tuple
Matched: [4341]: - Issue #15132: Allow a list for the defaultTest argument of
Matched: [96]:     respectively (in the range 0 to 255).  "name" will be a color name
Matched: [97]:     from the color database if there is an exact match, otherwise it
Matched: [4344]: - Issue #17225: JSON decoder now counts columns in the first line starting
Matched: [98]:     will be an X11 color spec of the form "#rrggbb".  Note that this
Matched: [4345]:   with 1, as in other lines.
Matched: [102]:     askcolor() supports the following optional keyword arguments:
Matched: [4350]: - Issue #13700: Fix byte/string handling in imaplib authentication when an
Matched: [105]:             the color to set as the initial selected color
Matched: [108]:             the master window to use as the parent of the modal
Matched: [4357]:   non-greedy repeat.  Patch by Matthew Barnett.
Matched: [110]:             its own Tkinter.Tk instance as the master.  This may not
Matched: [4363]: - Issue #17143: Fix a missing import in the trace module.  Initial patch by
Matched: [114]:             similar to the --database option, the value must be a
Matched: [118]:             similar to the --initfile option, the value must be a
Matched: [122]:             similar to the --ignore flag, the value is a boolean
Matched: [4372]:   web-browser on the executable search path.
Matched: [125]:             When this is true, the "name" field in the return tuple
Matched: [4375]:   the disk is full.  Original patch by Amir Szekely.
Matched: [126]:             will always be a color spec of the form "#rrggbb".  It
Matched: [127]:             will not return a color name even if there is a match;
Matched: [4379]: - Issue #16564: Fixed regression relative to Python2 in the operation of
Matched: [128]:             this is so pyColorChooser can exactly match the API of
Matched: [131]:         [*] these arguments must be specified the first time
Matched: [137]:     The top part of the main Pynche window contains the "variation
Matched: [139]:     strips always indicate the currently selected color by a highlight
Matched: [4396]: - Issue #13773: sqlite3.connect() gets a new `uri` parameter to pass the
Matched: [140]:     rectangle around the selected color chip, with an arrow pointing
Matched: [141]:     to the chip.  Each arrow has an associated number giving you the
Matched: [4399]: - Issue #16564: Fixed regression relative to Python2 in the operation of
Matched: [142]:     color value along the variation's axis.  Each variation strip
Matched: [143]:     shows you the colors that are reachable from the selected color by
Matched: [4403]:   SpooledTemporaryFile objects even when they have not yet rolled over.
Matched: [144]:     varying just one axis of the color solid.
Matched: [146]:     For example, when the selected color is (in Red/Green/Blue
Matched: [147]:     notation) 127/127/127, the Red Variations strip shows you every
Matched: [148]:     color in the range 0/127/127 to 255/127/127.  Similarly for the
Matched: [4411]:   various other functions now work correctly with 32-bit sample -0x80000000.
Matched: [150]:     chip.  This will update the highlight rectangle and the arrow, as
Matched: [4415]: - Issue #16723: httplib.HTTPResponse no longer marked closed when the connection
Matched: [151]:     well as other displays in Pynche.
Matched: [4418]: - Issue #15359: Add CAN_BCM protocol support to the socket module. Patch by
Matched: [153]:     Click on "Update while dragging" if you want Pynche to update the
Matched: [4422]:   sets in the email package.
Matched: [155]:     be a bit slower).  Click on "Hexadecimal" to display the arrow
Matched: [4424]: - Issue #16811: Fix folding of headers with no value in the provisional email
Matched: [164]:     In the lower left corner of the main window you see two larger
Matched: [4432]: - Issue #17089: Expat parser now correctly works with string input when the
Matched: [165]:     color chips.  The Selected chip shows you a larger version of the
Matched: [166]:     color selected in the variation strips, along with its X11 color
Matched: [167]:     specification.  The Nearest chip shows you the closest color in
Matched: [168]:     the X11 database to the selected color, giving its X11 color
Matched: [169]:     specification, and below that, its X11 color name.  When the
Matched: [170]:     Selected chip color exactly matches the Nearest chip color, you
Matched: [171]:     will see the color name appear below the color specification for
Matched: [4449]: - Issue #15633: httplib.HTTPResponse is now mark closed when the server
Matched: [172]:     the Selected chip.
Matched: [4450]:   sends less than the advertised Content-Length.
Matched: [174]:     Clicking on the Nearest color chip selects that color.  Color
Matched: [175]:     distance is calculated in the 3D space of the RGB color solid and
Matched: [176]:     if more than one color name is the same distance from the selected
Matched: [177]:     color, the first one found will be chosen.
Matched: [179]:     Note that there may be more than one X11 color name for the same
Matched: [180]:     RGB value.  In that case, the first one found in the text database
Matched: [181]:     is designated the "primary" name, and this is shown under the
Matched: [4462]: - Issue #17071: Signature.bind() now works when one of the keyword arguments
Matched: [182]:     Nearest chip.  The other names are "aliases" and they are visible
Matched: [183]:     in the Color List Window (see below).
Matched: [185]:     Both the color specifications and color names are selectable for
Matched: [186]:     copying and pasting into another window.
Matched: [4469]:   Code now raises FileExistsError if the file path to be used for the
Matched: [191]:     At the lower right of the main window are three entry fields.
Matched: [4471]:   will not keep the file path type if it writes to that path.
Matched: [192]:     Here you can type numeric values for any of the three color axes.
Matched: [193]:     Legal values are between 0 and 255, and these fields do not allow
Matched: [4477]:   now fills the ``os.environ`` variable correctly.
Matched: [195]:     the new color.
Matched: [197]:     Click on "Update while typing" if you want Pynche to select the
Matched: [4483]:   if all other iterators were very advanced before.
Matched: [4488]: - Issue #16957: shutil.which() no longer searches a bare file name in the
Matched: [203]: Other Views
Matched: [206]:     default.  You can bring these up via the "View" menu on the main
Matched: [4495]: - Issue #16993: shutil.which() now preserves the case of the path and extension
Matched: [213]:     have on the standard Tk text widget elements.  In the upper part
Matched: [4498]: - Issue #16992: On Windows in signal.set_wakeup_fd, validate the file
Matched: [214]:     of the window is a plain Tk text widget and here you can edit the
Matched: [4501]: - Issue #16422: For compatibility with the Python version, the C version of
Matched: [217]:     the other windows will change the text widget element specified in
Matched: [218]:     the radio buttons below.  When this is turned off, text widget
Matched: [4510]: - Issue #16955: Fix the poll() method for multiprocessing's socket
Matched: [222]:     clicking on one of the radio buttons in the bottom part of this
Matched: [4513]: - SSLContext.load_dh_params() now properly closes the input file.
Matched: [223]:     window.  Text foreground and background affect the text in the
Matched: [224]:     upper part of the window.  Selection foreground and background
Matched: [4516]:   duplication. Thanks to Ronan Lamy for the report and taking an initial stab
Matched: [225]:     affect the colors of the primary selection which is what you see
Matched: [4517]:   at the problem.
Matched: [226]:     when you click the middle button (depending on window system) and
Matched: [4520]:   and doesn't touch the underlying data with increfs and decrefs.
Matched: [229]:     The Insertion is the insertion cursor in the text window, where
Matched: [4524]: - Issue #13899: \A, \Z, and \B now correctly match the A, Z, and B literals
Matched: [236]:     The "Color List" window shows every named color in the color name
Matched: [4525]:   when used inside character classes (e.g. '[\A]').  Patch by Matthew Barnett.
Matched: [237]:     database (this window may take a while to come up).  In the upper
Matched: [238]:     part of the window you see a scrolling list of all the color names
Matched: [4528]:   failing if the connection used a row factory (such as sqlite3.Row) that
Matched: [239]:     in the database, in alphabetical order.  Click on any color to
Matched: [240]:     select it.  In the bottom part of the window is displayed any
Matched: [241]:     aliases for the selected color (those color names that have the
Matched: [4534]:   file descriptor receive the incorrect type.
Matched: [242]:     same RGB value, but were found later in the text database).  For
Grepping: C:/Python34/Lib/distutils/README.txt
Matched: [243]:     example, find the color "Black" and you'll see that its aliases
Matched: [4540]: - Issue #16860: In tempfile, use O_CLOEXEC when available to set the
Matched: [246]:     If the color has no aliases you'll see "<no aliases>" here.  If you
Matched: [1]: This directory contains the Distutils package.
Matched: [250]:     Note that the color list is always updated when a color is selected
Matched: [4550]: - Issue #16833: In http.client.HTTPConnection, do not concatenate the request
Matched: [251]:     from the main window.  There's no way to turn this feature off.  If
Matched: [4551]:   headers and body when the payload exceeds 16 KB, since it can consume more
Matched: [252]:     the selected color has no matching color name you'll see
Matched: [253]:     "<no matching color>" in the Aliases window.
Matched: [259]:     than just clicking on a color chip in the main window.  The row of
Matched: [260]:     buttons along the top apply the specified increment and decrement
Matched: [4560]:   section order within the parser. This makes `parser.update()` preserve section
Matched: [261]:     amounts to the selected color.  These delta amounts are applied to
Matched: [262]:     the variation strips specified by the check boxes labeled "Move
Matched: [4564]:   clears previous values stored in the default section. Same goes for
Matched: [264]:     will subtract 10 from the color value along the red and green
Matched: [265]:     variation only.  Note the message under the checkboxes; this
Matched: [266]:     indicates the primary color level being changed when more than one
Matched: [267]:     slider is tied together.  For example, if Red and Green are
Matched: [4575]:   non-ASCII strings.  Patch by Matthew Barnett.
Matched: [268]:     selected, you will be changing the Yellow level of the selected
Matched: [272]:     variation hits either the lower or upper boundaries (0 or 255) as
Matched: [4584]: - Issue #16165: sched.scheduler.run() no longer blocks a scheduler for other
Matched: [273]:     a result of clicking on the top row buttons:
Matched: [276]:         When the increment or decrement would send any of the tied
Matched: [277]:         variations out of bounds, the entire delta is discarded.
Matched: [280]:         When the increment or decrement would send any of the tied
Matched: [281]:         variations out of bounds, the out of bounds value is wrapped
Matched: [4601]: - Issue #15701: Fix HTTPError info method call to return the headers information.
Matched: [282]:         around to the other side.  Thus if red were at 238 and +25
Matched: [283]:         were clicked, red would have the value 7.
Matched: [4608]: - Issue #16626: Fix infinite recursion in glob.glob() on Windows when the
Matched: [286]:         When the increment or decrement would send any of the tied
Matched: [4609]:   pattern contains a wildcard in the drive or UNC path.  Patch by Serhiy
Matched: [4612]: - Issue #15783: Except for the number methods, the C version of decimal now
Matched: [288]:         one, so as to preserve the distance between them.  Thus if
Matched: [4619]: - Issue #16488: epoll() objects now support the `with` statement.  Patch
Matched: [294]:         When the increment or decrement would send any of the tied
Matched: [4622]: - Issue #16298: In HTTPResponse.read(), close the socket when there is no
Matched: [295]:         variations out of bounds, the out of bounds variation is set
Matched: [4623]:   Content-Length and the incoming stream is finished.  Patch by Eran
Matched: [296]:         to the ceiling of 255 or floor of 0, as appropriate.  In this
Matched: [4626]: - Issue #16049: Add abc.ABC class to enable the use of inheritance to create
Matched: [297]:         way, all tied variations are squashed to one edge or the
Matched: [4627]:   ABCs, rather than the more cumbersome metaclass=ABCMeta. Patch by Bruno
Matched: [298]:         other.
Matched: [4630]: - Expose the TCP_FASTOPEN and MSG_FASTOPEN flags in socket when they're
Matched: [300]:     The top row buttons have the following keyboard accelerators:
Matched: [4636]: - Issue #15872: Fix 3.3 regression introduced by the new fd-based shutil.rmtree
Matched: [312]:     Alt-w in any secondary window dismisses the window.  In the main
Matched: [4640]: - Issue #16248: Disable code execution from the user's home directory by
Matched: [4641]:   tkinter when the -E flag is passed to Python.  Patch by Zachary Ware.
Matched: [321]:     invocations, storing these values in a `persistent initialization
Matched: [4643]: - Issue #13390: New function :func:`sys.getallocatedblocks()` returns the
Matched: [322]:     file'.  The actual location of this file is specified by the
Matched: [325]:     When Pynche exits, it saves these values in the init file, and
Matched: [326]:     re-reads them when it starts up.  There is no locking on this
Matched: [328]:     may clobber the init file.
Matched: [332]:     - the currently selected color
Matched: [336]:     - the contents of the text window, the current text selection and
Matched: [340]:     - the name of the color database file (but not its contents)
Matched: [342]:     You can inhibit Pynche from reading the init file by supplying the
Matched: [4673]: - Issue #16464: Reset the Content-Length header when a urllib Request is reused
Matched: [343]:     --ignore option on the command line.  However, you cannot suppress
Matched: [344]:     the storing of the settings in the init file on Pynche exit.  If
Matched: [4677]:   lengths as unsigned 32-bit integers, like the C implementation does.
Matched: [345]:     you really want to do this, use /dev/null as the init file, using
Matched: [351]:     Pynche uses a color name database file to calculate the nearest
Matched: [352]:     color to the selected color, and to display in the Color List
Matched: [4686]: - Issue #4473: Add a POP3.capa() method to query the capabilities advertised
Matched: [4687]:   by the POP3 server.  Patch by Lorenzo Catucci.
Matched: [354]:     below.  By default, the X11 color name database file is selected.
Matched: [4689]: - Issue #4473: Ensure the socket is shutdown cleanly in POP3.close().
Matched: [355]:     Other files:
Matched: [357]:     html40colors.txt -- the HTML 4.0 guaranteed color names
Matched: [4694]: - Issue #15627: Add the importlib.abc.InspectLoader.source_to_code() method.
Matched: [359]:     websafe.txt -- the 216 "Web-safe" colors that Netscape and MSIE
Matched: [4697]:   in the zipfile module.  Patch by Serhiy Storchaka.
Matched: [360]:     guarantee will not be dithered.  These are specified in #rrggbb
Matched: [370]:     the "File" menu.  This brings up a standard Tk file dialog.
Matched: [371]:     Choose the file you want and then click "Ok".  If Pynche
Matched: [4714]: - Remove a bare print to stdout from the subprocess module that could have
Matched: [372]:     understands the format in this file, it will load the database and 
Matched: [4715]:   happened if the child process wrote garbage to its pre-exec error pipe.
Matched: [373]:     update the appropriate windows.  If not, it will bring up an error 
Matched: [4721]:   used for stdin/stdout/stderr pipes to the child when fork() fails.
Matched: [381]:     - Better support for resizing the top level windows
Matched: [4723]: - Issue #14396: Handle the odd rare case of waitpid returning 0 when not
Matched: [385]:     - Have the notion of a `last color selected'; this may require a
Matched: [388]:     - Support setting the font in the text view
Matched: [4732]: - Issue #16409: The reporthook callback made by the legacy
Matched: [4734]:   block_size as it did in Python 3.2 and 2.7.  This matches the behavior of
Matched: [4737]: - Issue #16431: Use the type information when constructing a Decimal subtype
Matched: [4744]:   successive calls after EOF in unused_data, instead of only saving the argument
Matched: [4745]:   to the last call. decompressobj().flush() now correctly sets unused_data and
Matched: [4746]:   unconsumed_tail. A bug in the handling of MemoryError when setting the
Matched: [4749]: - Issue #12759: sre_parse now raises a proper error when the name of the group
Matched: [4752]: - Issue #16152: fix tokenize to ignore whitespace at the end of the code when
Matched: [4758]: - Issue #16230: Fix a crash in select.select() when one the lists changes
Matched: [4761]: - Issue #16228: Fix a crash in the json module where a list changes size
Matched: [4770]: - Issue #16316: mimetypes now recognizes the .xz and .txz (.tar.xz) extensions.
Matched: [4774]:   mode when the logdir option is specified.
Matched: [4785]: - Issue #16245: Fix the value of a few entities in html.entities.html5.
Matched: [4787]: - Issue #16301: Fix the localhost verification in urllib/request.py for file://
Matched: [4790]: - Issue #16250: Fix the invocations of URLError which had misplaced filename
Matched: [4796]: - Issue #14398: Fix size truncation and overflow bugs in the bz2 module.
Matched: [4821]:   message stating that args[0] did not exist when either the cwd or executable
Matched: [4830]:   source and destination are the same file. Patch by Atsuo Ishimoto.
Matched: [4837]: - Issue #14377: ElementTree.write and some of the module-level functions have
Matched: [4848]:   that allows an application to apply a verification function to the
Matched: [4851]: - Issue #16034: Fix performance regressions in the new `bz2.BZ2File`
Matched: [4854]: - `pty.spawn()` now returns the child process status returned by `os.waitpid()`.
Matched: [4857]:   return a returncode of 0 when the child has already exited or cannot be waited
Matched: [4877]: - Issue #15970: `xml.etree.ElementTree` now serializes correctly the empty HTML
Matched: [4881]:   ValueError when the file-like object is closed.  Patch by Alessandro Moura.
Matched: [4883]: - Issue #15876: Fix a refleak in the `curses` module: window.encoding.
Matched: [4889]:   `io.BytesIO` and `io.StringIO` objects now raise ValueError when the object
Matched: [4899]:   add_argument) only once. Before, the type function was called twice in the
Matched: [4900]:   case where the default was specified and the argument was given as well.  This
Matched: [4901]:   was especially problematic for the FileType type, as a default file would
Matched: [4902]:   always be opened, even if a file argument was specified on the command line.
Matched: [4904]: - Issue #15906: Fix a regression in argparse caused by the preceding change,
Matched: [4907]: - Issue #16113: Added sha3 module based on the Keccak reference implementation
Matched: [4909]:   `sha3_256`, `sha3_384` and `sha3_512`. As part of the patch some common
Matched: [4912]: - ctypes.call_commethod was removed, since its only usage was in the defunct
Matched: [4915]: - Issue #16692: Added TLSv1.1 and TLSv1.2 support for the ssl modules.
Matched: [4924]:   are selected. As with text blocks, this works best when the selection
Matched: [4931]:   changed when it has not been changed. This fix followed the addition of a
Matched: [4932]:   test file originally written by Phil Webster (the issue's main goal).
Matched: [4934]: - Issue #7136: In the Idle File menu, "New Window" is renamed "New File".
Matched: [4956]: - Issue #13495: Avoid loading the color delegator twice in IDLE.
Matched: [4976]: - Issue #17625: In IDLE, close the replace dialog after it is used.
Matched: [4991]: - Issue #9290: In IDLE the sys.std* streams now implement io.TextIOBase
Matched: [4996]: - Issue #16829: IDLE printing no longer fails if there are spaces or other
Matched: [4997]:   special characters in the file path.
Matched: [5019]:   permissions.  Patch by Catherine Devlin.
Matched: [5021]: - Issue #18273: move the tests in Lib/test/json_tests to Lib/test/test_json
Matched: [5022]:   and make them discoverable by unittest.  Patch by Zachary Ware.
Matched: [5032]:   test.support, and refactor temp_cwd() to use them.  Patch by Chris Jerdonek.
Matched: [5034]: - Issue #15494: test.support is now a package rather than a module (Initial
Matched: [5047]: - Issue #18375: Assume --randomize when --randseed is used for running the
Matched: [5057]: - Issue #17992: Add timeouts to asyncore and asynchat tests so that they won't
Matched: [5071]: - Issue #17835: Fix test_io when the default OS pipe buffer size is larger
Matched: [5077]: - Issue #12820: add tests for the xml.dom.minicompat module.
Matched: [5103]: - Issue #17448: test_sax now skips if there are no xml parsers available
Matched: [5126]:   the new server-side SNI support in the ssl module.  Initial patch by
Matched: [5129]: - Issue #17041: Fix testing when Python is configured with the
Matched: [5212]: - Issue #16559: Add more tests for the json module, including some from the
Matched: [5215]: - Issue #16661: Fix the `os.getgrouplist()` test by not assuming that it gives
Matched: [5216]:   the same output as :command:`id -G`.
Matched: [5218]: - Issue #16115: Add some tests for the executable argument to
Matched: [5230]: - Issue #15557: Added a test suite for the webbrowser module, thanks to Anton
Matched: [5242]: - Issue #18257: Fix readlink usage in python-config.  Install the python
Matched: [5249]: - Issue #17845: Clarified the message printed when some module are not built.
Matched: [5254]: - Issue #17547: In configure, explicitly pass -Wformat for the benefit for GCC
Matched: [5263]: - Issue #17550: Fix the --enable-profiling configure switch.
Matched: [5267]: - Issue #16754: Fix the incorrect shared library extension on linux. Introduce
Matched: [5268]:   two makefile macros SHLIB_SUFFIX and EXT_SUFFIX. SO now has the value of
Matched: [5271]: - Issue #5033: Fix building of the sqlite3 extension module when the
Matched: [5291]: - Issue #17029: Let h2py search the multiarch system include directory.
Matched: [5304]: - Issue #16836: Enable IPv6 support even if IPv6 is disabled on the build host.
Matched: [5306]: - Issue #16593: Have BSD 'make -s' do the right thing, thanks to Daniel Shahaf
Matched: [5343]:   expand their arguments once instead of multiple times.  Patch written by Illia
Matched: [5346]: - Issue #17522: Add the PyGILState_Check() API.
Matched: [5367]: - Issue #18440: Clarify that `hash()` can truncate the value returned from an
Matched: [5372]: - Issue #14097: improve the "introduction" page of the tutorial.
Matched: [5374]: - Issue #17977: The documentation for the cadefault argument's default value
Matched: [5375]:   in urllib.request.urlopen() is fixed to match the code.
Matched: [5377]: - Issue #6696: add documentation for the Profile objects, and improve
Matched: [5388]:   reported by Serhiy Storchaka and Matthew Barnett.
Matched: [5390]: - Issue #15465: Document the versioning macros in the C API docs rather than
Matched: [5391]:   the standard library docs. Patch by Kushal Das.
Matched: [5393]: - Issue #16406: Combine the pages for uploading and registering to PyPI.
Matched: [5395]: - Issue #16403: Document how distutils uses the maintainer field in
Matched: [5402]:   of the /tmp directory with better alternatives in the documentation.
Matched: [5408]:   all return the same result?" programming FAQ.
Matched: [5410]: - Issue #14901: Update portions of the Windows FAQ.
Matched: [5413]: - Issue #16267: Better document the 3.3+ approach to combining
Matched: [5421]: - Issue #16209: Move the documentation for the str built-in function to a new
Matched: [5422]:   str class entry in the "Text Sequence Type" section.
Matched: [5429]: - Issue #16400: Update the description of which versions of a given package
Matched: [5438]: - Issue #8040: added a version switcher to the documentation.  Patch by
Matched: [5444]: - Additional comments and some style changes in the concurrent.futures URL
Matched: [5464]: - Issue #11964: Document a change in v3.2 to the behavior of the indent
Matched: [5491]: - Issue #17028: Allowed Python arguments to be supplied to the Windows
Matched: [5494]: - Issue #17156: pygettext.py now detects the encoding of source files and
Matched: [5500]:   "class" or "def" keywords and with continuations at the start of line.
Matched: [5504]: - Issue #10966: Remove the concept of unexpected skipped tests.
Matched: [5506]: - Issue #9893: Removed the Misc/Vim directory.
Matched: [5508]: - Removed the Misc/TextMate directory.
Matched: [5510]: - Issue #16245: Add the Tools/scripts/parse_html5_entities.py script to parse
Matched: [5511]:   the list of HTML5 entities and update the html.entities.html5 dictionary.
Matched: [5524]: - Issue #18569: The installer now adds .py to the PATHEXT variable when extensions
Matched: [5558]: - Issue #15926: Fix crash after multiple reinitializations of the interpreter.
Matched: [5572]:   with the specification).
Matched: [5574]: - Issue #15925: Fix a regression in `email.util` where the `parsedate()` and
Matched: [5575]:   `parsedate_tz()` functions did not return None anymore when the argument could
Matched: [5584]: - Issue #15977: Fix memory leak in Modules/_ssl.c when the function
Matched: [5622]: - Issue #15340: Fix importing the random module when ``/dev/urandom`` cannot be
Matched: [5623]:   opened.  This was a regression caused by the hash randomization patch.
Matched: [5625]: - Issue #10650: Deprecate the watchexp parameter of the `Decimal.quantize()`
Matched: [5628]: - Issue #15785: Modify `window.get_wch()` API of the curses module: return a
Matched: [5633]: - Issue #14223: Fix `window.addch()` of the curses module for special characters
Matched: [5634]:   like curses.ACS_HLINE: the Python function addch(int) and addch(bytes) is now
Matched: [5635]:   calling the C function waddch()/mvwaddch() (as it was done in Python 3.2),
Matched: [5637]:   calling the C function wadd_wch()/mvwadd_wch() if the Python curses is linked
Matched: [5649]: - Issue #15814: The memoryview enhancements in 3.3.0 accidentally permitted the
Matched: [5651]:   formats. The intended restrictions have now been documented - they will be
Matched: [5666]: - Issue #15316: When an item in the fromlist for `__import__()` doesn't exist,
Matched: [5674]:   the cached bytecode file. (The migration to importlib reintroduced this
Matched: [5675]:   problem because these was no regression test. A test has been added as part of
Matched: [5686]: - Issue #14846: `importlib.FileFinder` now handles the case where the directory
Matched: [5693]:   using the clang compiler.
Matched: [5703]:   requested) even if the body contains undecodable bytes.
Matched: [5716]: - Issue #13579: `string.Formatter` now understands the 'a' conversion specifier.
Matched: [5724]: - Issue #15715: `importlib.__import__()` will silence an ImportError when the
Matched: [5734]:   on Windows without the ``if __name__ == '__main__'`` idiom.
Matched: [5745]: - Touched up the Python 2 to 3 porting guide.
Matched: [5747]: - Issue #14674: Add a discussion of the `json` module's standard compliance.
Matched: [5750]: - Create a 'Concurrent Execution' section in the docs, and split up the
Matched: [5752]:   classification scheme (splitting them across the new CE section, IPC and text
Matched: [5753]:   processing). Operating system limitations can be reflected with the Sphinx
Matched: [5754]:   ``:platform:`` tag, it doesn't make sense as part of the Table of Contents.
Matched: [5756]: - Issue #4966: Bring the sequence docs up to date for the Py3k transition and
Matched: [5757]:   the many language enhancements since they were original written.
Matched: [5760]:   more-awkward-but-at-least-not-wrong suggestion of "path based finder" in the
Matched: [5765]: - Issue #15630: Add an example for "continue" stmt in the tutorial.  Patch by
Matched: [5771]: - Issue #15747: ZFS always returns EOPNOTSUPP when attempting to set the
Matched: [5772]:   UF_IMMUTABLE flag (via either chflags or lchflags); refactor affected tests in
Matched: [5775]: - Issue #15285: Refactor the approach for testing connect timeouts using two
Matched: [5778]: - Issue #15743: Remove the deprecated method usage in `urllib` tests. Patch by
Matched: [5781]: - Issue #15615: Add some tests for the `json` module's handling of invalid input
Matched: [5810]: - Issue #15568: Fix the return value of ``yield from`` when StopIteration is
Matched: [5816]: - Issue #15534: Fix the fast-search function for non-ASCII Unicode strings.
Matched: [5818]: - Issue #15508: Fix the docstring for `__import__()` to have the proper default
Matched: [5819]:   value of 0 for 'level' and to not mention negative levels since they are not
Matched: [5825]: - Issue #14578: Support modules registered in the Windows registry again.
Matched: [5827]: - Issue #15466: Stop using TYPE_INT64 in marshal, to make importlib.h (and other
Matched: [5846]: - Issue #15202: Consistently use the name "follow_symlinks" for new parameters
Matched: [5853]:   inside itself, don't mask that fact behind a generic ImportError for the
Matched: [5856]: - Issue #15293: Add GC support to the AST base node type.
Matched: [5861]: - Issue #15110: Fix the tracebacks generated by "import xxx" to not show the
Matched: [5872]: - Issue #15033: Fix the exit status bug when modules invoked using -m switch,
Matched: [5873]:   return the proper failure return value (1). Patch contributed by Jeff Knupp.
Matched: [5877]:   calling str() on them.
Matched: [5880]:   Mac OS X, like other POSIX builds.
Matched: [5901]: - Issue #15559: To avoid a problematic failure mode when passed to the bytes
Matched: [5902]:   constructor, objects in the ipaddress module no longer implement `__index__()`
Matched: [5903]:   (they still implement `__int__()` as appropriate).
Matched: [5905]: - Issue #15546: Fix handling of pathological input data in the peek() and
Matched: [5906]:   read1() methods of the BZ2File, GzipFile and LZMAFile classes.
Matched: [5909]:   `os.sched_setaffinity()` now use regular sets of integers to represent the
Matched: [5912]: - Issue #15538: Fix compilation of the `socket.getnameinfo()` /
Matched: [5915]: - Issue #15519: Properly expose WindowsRegistryFinder in importlib (and use the
Matched: [5918]: - Issue #15502: Bring the importlib ABCs into line with the current state of the
Matched: [5927]: - Issue #6056: Make `multiprocessing` use setblocking(True) on the sockets it
Matched: [5934]: - Issue #15402: An issue in the struct module that caused `sys.getsizeof()` to
Matched: [5946]:   the first one.
Matched: [5951]:   user-defined types as keys or other unorderable keys.
Matched: [5956]: - Issue #14635: `telnetlib` will use poll() rather than select() when possible to
Matched: [5957]:   avoid failing due to the select() file descriptor limit.
Matched: [5962]:   importlib.machinery.FileFinder (similar to the way it already handled
Matched: [5968]:   importlib internally rather than the emulation.
Matched: [5970]: - Issue #15233: Python now guarantees that callables registered with the atexit
Matched: [5976]:   the documentation.
Matched: [5992]:   BufferedRWPair, from the io module.
Matched: [6018]: - Issue #15030: `importlib.abc.PyPycLoader` now supports the new source size
Matched: [6024]: - Issue #10571: Fix the "--sign" option of distutils' upload command.  Patch by
Matched: [6028]:   renamed over the old file when flush() is called on an mbox, MMDF or Babyl
Matched: [6044]: - Issue #15169, issue #14599: Strip out the C implementation of
Matched: [6046]:   used the Python code instead. Leads to PyImport_ExecCodeModuleObject() to not
Matched: [6047]:   try to infer the source path from the bytecode path as
Matched: [6056]: - Issue #15194: Update libffi to the 3.0.11 release.
Matched: [6067]: - Issue #15458: python-config gets a new option --configdir to print the $LIBPL
Matched: [6073]:   enhanced to show information on more C frames relevant to CPython within the
Matched: [6076]:   * C frames that are waiting on the GIL
Matched: [6078]:   * C frames that are due to the invocation of a PyCFunction
Matched: [6088]: - Issue #15295: Reorganize and rewrite the documentation on the import system.
Matched: [6090]: - Issue #15230: Clearly document some of the limitations of the runpy module and
Matched: [6094]:   functions in imp instead of just at the top of the relevant section.
Matched: [6096]: - Issue #15288: Link to the term "loader" in notes in pkgutil about how things
Matched: [6097]:   won't work as expected in Python 3.3 and mark the requisite functions as
Matched: [6098]:   "changed" since they will no longer work with modules directly imported by
Grepping: C:/Python34/Tools/Scripts/README.txt
Matched: [6107]: - Issue #15442: Expose the default list of directories ignored by
Matched: [6108]:   `filecmp.dircmp()` as a module attribute, and expand the list to more modern
Matched: [5]: 2to3                      Main script for running the 2to3 conversion tool
Matched: [6117]: - Issue #15320: Make iterating the list of tests thread-safe when running tests
Matched: [6]: abitype.py                Converts a C file to use the PEP 384 type definition API
Matched: [7]: analyze_dxp.py            Analyzes the result of sys.getdxp()
Matched: [6125]: - Issue #15230: Adopted a more systematic approach in the runpy tests.
Matched: [6127]: - Issue #15300: Ensure the temporary test working directories are in the same
Matched: [13]: copytime.py               Copy one file's atime and mtime to another
Matched: [22]: find_recursionlimit.py    Find the maximum recursion limit on this machine
Matched: [23]: find-uname.py             Look for the given arguments in the sets of all Unicode names
Matched: [6149]:   by building a local copy of libsqlite3 rather than depending on the wide range
Matched: [27]: fixnotice.py              Fix the copyright notice in source files
Matched: [30]: get-remote-certificate.py Fetch the certificate that the server(s) are providing in PEM form
Matched: [6161]: - Issue #14197: For OS X framework builds, ensure links to the shared library
Matched: [6162]:   are created with the proper ABI suffix.
Matched: [6167]: - Issue #15235: Allow Berkley DB versions up to 5.3 to build the dbm module.
Matched: [37]: import_diagnostics.py     Miscellaneous diagnostics for the import system
Matched: [6183]: - Issue #14815: Use Py_ssize_t instead of long for the object hash, to
Matched: [6189]:   from within these methods.
Matched: [6197]:   the work by Hirokazu Yamamoto.
Matched: [6199]: - Issue #15096: Removed support for ur'' as the raw notation isn't
Matched: [61]: run_tests.py              Run the test suite with more sensible default options
Matched: [6202]: - Issue #13783: Generator objects now use the identifier APIs internally
Matched: [69]: win_add2path.py           Add Python to the search path on Windows
Matched: [6212]:   in text mode if the encoding is not specified. Don't change temporary the
Matched: [6213]:   locale encoding using locale.setlocale(), use the current locale encoding
Matched: [6214]:   instead of the user preferred encoding.
Matched: [6243]: - Issue #15061: Re-implemented hmac.compare_digest() in C to prevent further
Matched: [6250]: - Support Mageia Linux in the platform module.
Matched: [6252]: - Issue #11678: Support Arch linux in the platform module.
Matched: [6258]: - Speed up _decimal by another 10-15% by caching the thread local context
Matched: [6259]:   that was last accessed. In the pi benchmark (64-bit platform, prec=9),
Matched: [6262]: - Remove the packaging module, which is not ready for prime time.
Matched: [6268]:   It is used automatically on platforms supporting the necessary os.openat()
Matched: [6271]: - Issue #15156: HTMLParser now uses the new "html.entities.html5" dictionary.
Matched: [6273]: - Issue #11113: add a new "html5" dictionary containing the named character
Matched: [6274]:   references defined by the HTML5 standard and the equivalent Unicode
Matched: [6275]:   character(s) to the html.entities module.
Matched: [6277]: - Issue #15114: the strict mode of HTMLParser and the HTMLParseError exception
Matched: [6278]:   are deprecated now that the parser is able to parse invalid markup.
Matched: [6291]: - Issue #14626: Large refactoring of functions / parameters in the os module.
Matched: [6304]: - Issue #444582: Add shutil.which, for finding programs on the system path.
Matched: [6313]:   timezone instance corresponding to the system local timezone when
Matched: [6319]: - Issue #14684: zlib.compressobj() and zlib.decompressobj() now support the use
Matched: [6331]:   also the module imported as importlib._bootstrap.
Matched: [6383]: - LZMAFile now accepts the modes "rb"/"wb"/"ab" as synonyms of "r"/"w"/"a".
Matched: [6388]: - BZ2File.__init__() and LZMAFile.__init__() now accept a file object as their
Matched: [6389]:   first argument, rather than requiring a separate "fileobj" argument.
Matched: [6394]:   when the path existed and had the S_ISGID mode bit set when it was
Matched: [6396]:   cannot control if the OS sets that bit for it or not.
Matched: [6398]: - Issue #14989: Make the CGI enable option to http.server available via command
Matched: [6403]: - Issue #1079: email.header.decode_header now correctly parses all the examples
Matched: [6404]:   in RFC2047.  There is a necessary visible behavior change: the leading and/or
Matched: [6415]: - Issue #14443: Ensure that .py files are byte-compiled with the correct Python
Matched: [6426]: - Issue #13783: Inadvertent additions to the public C API in the PEP 380
Matched: [6427]:   implementation have either been removed or marked as private interfaces.
Matched: [6432]: - Issue #15000: Support the "unique" x32 architecture in _posixsubprocess.c.
Matched: [6449]: - Issue #14982: Document that pkgutil's iteration functions require the
Matched: [6451]:   the importlib importers do not define).
Matched: [6465]:   for "parity" between PyArg_ParseTuple() and the Python/getargs.c static
Matched: [6472]:   block loading of the gdb hooks
Matched: [6488]:       and libs if the SDK used to build the interpreter is not
Matched: [6491]:       in particular, --enable-universalsdk=yes uses the Xcode default
Matched: [6512]: - Issue #14744: Use the new _PyUnicodeWriter internal API to speed up
Matched: [6517]: - Issue #14775: Fix a potential quadratic dict build-up due to the garbage
Matched: [6528]:   absolute imports are the default behavior in 3.0 instead of 2.7.
Matched: [6531]: - Issue #9260: A finer-grained import lock.  Most of the import sequence
Matched: [6532]:   now uses per-module locks rather than the global import lock, eliminating
Matched: [6541]:   attribute on BaseException. This replaces the original mechanism of PEP 409.
Matched: [6543]: - Issue #14417: Mutating a dict during lookup now restarts the lookup instead
Matched: [6555]: - Issue #14690: Use monotonic clock instead of system clock in the sched,
Matched: [6558]: - Issue #14443: Tell rpmbuild to use the correct version of Python in
Matched: [6562]:   a MIME part without seeing the closing MIME boundary.
Matched: [6568]: - Issue #14925: email now registers a defect when the parser decides that there
Matched: [6569]:   is a missing header/body separator line.  MalformedHeaderDefect, which the
Matched: [6573]:   the parent window is closed before the dialog. Patch by Roger Serwy.
Matched: [6575]: - Issue #8739: Updated smtpd to support RFC 5321, and added support for the
Matched: [6585]:   compatibility with Python 3.2 by default yet allow for the introduction of
Matched: [6591]: - Issue #14920: Fix the help(urllib.parse) failure on locale C on terminals.
Matched: [6602]: - Issue #14875: Use float('inf') instead of float('1e66666') in the json module.
Matched: [6606]: - PEP 3144, Issue #14814: Added the ipaddress module
Matched: [6608]: - Issue #14426: Correct the Date format in Expires attribute of Set-Cookie
Matched: [6618]: - Issue #14721: Send the correct 'Content-length: 0' header when the body is an
Matched: [6621]: - Issue #14072: Fix parsing of 'tel' URIs in urlparse by making the check for
Matched: [6627]: - Issue #14798: Fix the functions in pyclbr to raise an ImportError
Matched: [6628]:   when the first part of a dotted name is not a package. Patch by
Matched: [6632]:   using the same sys.flags as the current process.  Initial patch by
Matched: [6639]:   to use the default certificate store.  Initial patch by James Oakley.
Matched: [6651]:   accessing the Tk clipboard.  Modify clipboad_get() to first request type
Matched: [6653]:   environment, falling back to the current default type STRING if that fails.
Matched: [6659]:   Authentation in urllib2.
Matched: [6666]: - Issue #14532: Add a secure_compare() helper to the hmac module, to mitigate
Matched: [6681]:   importlib.machinery.ExtensionFileLoader.load_module() have their single
Matched: [6682]:   argument be optional. Allows for the replacement (and thus deprecation) of
Matched: [6685]: - Issue #13959: imp.get_suffixes() has been deprecated in favour of the new
Matched: [6697]:   the same as it was in Python 3.2.
Matched: [6700]:   import one of its modules then raise an error.
Matched: [6709]: - Add support for timeouts to the acquire() methods of
Matched: [6735]:   Other tooltipss have been corrected or improved and the number of tests
Matched: [6742]:   the Python 3.3 Grammar.
Matched: [6759]: - Issue #14705: The PyArg_Parse() family of functions now support the 'p' format
Matched: [6761]:   value into an integer--0 if it is "false", and 1 otherwise.
Matched: [6766]: - Issue #14863: Update the documentation of os.fdopen() to reflect the
Matched: [6769]: - Issue #14588: The language reference now accurately documents the Python 3
Matched: [6773]:   and correctly list the argument names in the function's explanation.
Matched: [6784]: - Issue #14699: Fix calling the classmethod descriptor directly.
Matched: [6791]: - Issue #14646: __import__() sets __loader__ if the loader did not.
Matched: [6802]:   their keys with other dictionaries. Classes take advantage of this to share
Matched: [6803]:   their instance dictionary keys for improved memory and performance.
Matched: [6817]: - Issue #14385: It is now possible to use a custom type for the __builtins__
Matched: [6834]:   fails to import now uses the new path and name attributes from
Matched: [6838]:   any of the dtoa.c string <-> float conversion functions, on MSVC builds of
Matched: [6844]: - Issue #2377: Make importlib the implementation of __import__().
Matched: [6848]:   import as they are meant for use by importlib.
Matched: [6851]:   while writing error message if the thread leaves a unhandled exception.
Matched: [6869]:   the DST transition.  Patch by Joe Peterson.
Matched: [6873]: - Issue #6085: In http.server.py SimpleHTTPServer.address_string returns the
Matched: [6879]: - Issue #14428: Implement the PEP 418. Add time.get_clock_info(),
Matched: [6893]:   the links were not located in an archive subdirectory.
Matched: [6895]: - Issue #14638: pydoc now treats non-string __name__ values as if they
Matched: [6906]:   custom semantics of caring the right-most path separator forward in path
Matched: [6911]: - Issue #14629: tokenizer.detect_encoding will specify the filename in the
Matched: [6914]: - Issue #14629: Raise SyntaxError in tokenizer.detect_encoding if the
Matched: [6917]: - Issue #14308: Fix an exception when a "dummy" thread is in the threading
Matched: [6920]: - Issue #11750: The Windows API functions scattered in the _subprocess and
Matched: [6929]: - Issue #14452: SysLogHandler no longer inserts a UTF-8 BOM into the message.
Matched: [6931]: - Issue #14386: Expose the dict_proxy internal type as types.MappingProxyType.
Matched: [6934]:   the reload.
Matched: [6936]: - Issue #13959: Add imp.py and rename the built-in module to _imp, allowing for
Matched: [6937]:   re-implementing parts of the module in pure Python.
Matched: [6945]: - Issue #14399: zipfile now recognizes that the archive has been modified even
Matched: [6946]:   if only the comment is changed.  In addition, the TypeError that results from
Matched: [6947]:   trying to set a non-binary value as a comment is now raised at the time
Matched: [6948]:   the comment is set rather than at the time the zipfile is written.
Matched: [6955]:   implementation details of the email package Message object.
Matched: [6957]: - Issue #7978: socketserver now restarts the select() call when EINTR is
Matched: [6958]:   returned.  This avoids crashing the server loop when a signal is received.
Matched: [6984]:   after a "hg update" which failed to bring the timestamps into the right order.
Matched: [6990]:   correctly for the various invocation approaches (Patch by Jason Yeo)
Matched: [6998]: - Issue #14355: Regrtest now supports the standard unittest test loading, and
Grepping: C:/Python34/Lib/idlelib/extend.txt
Matched: [7014]:   placing the Python installation into the system "Path" environment variable.
Matched: [7016]: - Issue #13165: stringbench is now available in the Tools/stringbench folder.
Matched: [6]: starts up and to attach them to each edit window. (It is also possible
Matched: [7]: to make other changes to IDLE, but this must be done by editing the IDLE
Matched: [7034]: - Issue #1683368: object.__new__ and object.__init__ raise a TypeError if they
Matched: [7035]:   are passed arguments and their complementary method is not overridden.
Matched: [11]: the file config-extensions.def.  See below for details.
Matched: [7038]:   the module name that was not interned.
Matched: [13]: An IDLE extension is defined by a class.  Methods of the class define
Matched: [7041]:   allocating path buffers on the heap instead of the stack.
Matched: [15]: instance) variables define the bindings and menu additions; these are
Matched: [16]: automatically applied by IDLE when the extension is linked to an edit
Matched: [7049]: - Issue #14205: dict lookup raises a RuntimeError if the dict is modified
Matched: [21]: about this argument, but it is guaranteed to have the following instance
Matched: [7052]: - Issue #14220: When a generator is delegating to another iterator with the
Matched: [26]:     flist	the FileList instance (shared by all edit windows)
Matched: [7056]:   on the PyObject_Malloc() api like all other objects.
Matched: [28]: (There are a few more, but they are rarely useful.)
Matched: [7058]: - Issue #14471: Fix a possible buffer overrun in the winreg module.
Matched: [7060]: - Issue #14288: Allow the serialization of builtin iterators
Matched: [31]: Rather, it must define one or more virtual events, e.g. <<zoom-height>>, and
Matched: [33]: bound to the corresponding methods, and Window Manager events can then be bound
Matched: [7068]: - Issue #13872: socket.detach() now marks the socket closed (as mirrored
Matched: [34]: to the virtual events. (This indirection is done so that the key bindings can
Matched: [7069]:   in the socket repr()).  Patch by Matt Joiner.
Matched: [35]: easily be changed, and so that other sources of virtual events can exist, such
Matched: [7076]: - Issue #14416: syslog now defines the LOG_ODELAY and LOG_AUTHPRIV constants
Matched: [40]: menu name (lowercase) and a list of menu entries. Each menu entry is either
Matched: [7077]:   if they are defined in <syslog.h>.
Matched: [42]: virtual_event).  Here, menu_label is the label of the menu entry, and
Matched: [43]: virtual_event is the virtual event to be generated when the entry is selected.
Matched: [7082]:   the _decimal module against an installed libmpdec.
Matched: [44]: An underscore in the menu label is removed; the character following the
Matched: [45]: underscore is displayed underlined, to indicate the shortcut character (for
Matched: [48]: At the moment, extensions cannot define whole new menus; they must define
Grepping: C:/Python34/Lib/idlelib/CREDITS.txt
Matched: [50]: entry definitions are then ignored, but key bindings are still applied.  (This
Matched: [7091]: - Issue #14204: The ssl module now has support for the Next Protocol
Matched: [51]: should probably be refined in the future.)
Matched: [1]: Guido van Rossum, as well as being the creator of the Python language, is the
Matched: [7092]:   Negotiation extension, if available in the underlying OpenSSL library.
Matched: [53]: Extensions are not required to define menu entries for all the events they
Matched: [2]: original creator of IDLE.  Other contributors prior to Version 0.8 include
Matched: [7097]: - Issue #12757: Fix the skipping of doctests when python is run with -OO so
Matched: [5]: IDLE's recent development was carried out in the SF IDLEfork project. The
Matched: [55]: case there must be empty bindings in cofig-extensions.def)
Matched: [7100]: - Issue #7652: Integrate the decimal floating point libmpdec library to speed
Matched: [7101]:   up the decimal module. Performance gains of the new C implementation are
Matched: [10]: Schneider-Kamp and Nicholas Riley.  David wrote the first version of the RPC
Matched: [7102]:   between 10x and 100x, depending on the application.
Matched: [12]: the RPC code and Remote Debugger currently integrated in IDLE.  Bruce Sherwood
Matched: [7104]: - Issue #14269: SMTPD now conforms to the RFC and requires a HELO command
Matched: [74]: The final piece of the puzzle is the file "config-extensions.def", which is
Matched: [15]: Besides David and Guido, the main developers who were active on IDLEfork
Matched: [75]: used to configure the loading of extensions and to establish key (or, more
Matched: [76]: generally, event) bindings to the virtual events defined in the extensions.
Matched: [16]: are Stephen M. Gava, who implemented the configuration GUI, the new
Matched: [78]: See the comments at the top of config-extensions.def for information.  It's
Matched: [17]: configuration system, and the About dialog, and Kurt B. Kaiser, who completed
Matched: [18]: the integration of the RPC and remote debugger, implemented the threaded
Matched: [82]: For further information on binding refer to the Tkinter Resources web page at
Matched: [21]: Other contributors include Raymond Hettinger, Tony Lownds (Mac integration),
Matched: [83]: python.org and to the Tk Command "bind" man page.
Matched: [23]: Noam Raphael (Code Context, Call Tips, many other patches), and Chui Tey (RPC
Matched: [33]: Please contact the IDLE maintainer (kbk@shore.net) to have yourself included
Matched: [7110]: - Issue #14344: fixed the repr of email.policy objects.
Matched: [7113]:   (mostly the new Bytes classes).
Matched: [7116]:   the C-accelerated implementation.  Patch by sbt.
Matched: [7118]: - Issue #10484: Fix the CGIHTTPServer's PATH_INFO handling problem.
Matched: [7120]: - Issue #11199: Fix the with urllib which hangs on particular ftp urls.
Matched: [7122]: - Improve the memory utilization and speed of functools.lru_cache.
Matched: [7124]: - Issue #14222: Use the new time.steady() function instead of time.time() for
Matched: [7130]: - Issue #14234: CVE-2012-0876: Randomize hashes of xml attributes in the hash
Matched: [7131]:   table internal to the pyexpat module's copy of the expat library to avoid a
Matched: [7133]:   modifications by the expat project.
Matched: [7136]:   the name ends up being quoted.
Matched: [7141]: - Issue #13839: When invoked on the command-line, the pstats module now
Matched: [7142]:   accepts several filenames of profile stat files and merges them all.
Matched: [7154]: - Issue #14184: Increase the default stack size for secondary threads on
Matched: [7164]:   a ValueError, if the timestamp does not fit in time_t.
Matched: [7179]: - Issue #13394: the aifc module now uses warnings.warn() to signal warnings.
Matched: [7182]:   Windows when the child process has already exited.
Matched: [7184]: - Issue #14223: curses.addch() is no more limited to the range 0-255 when the
Matched: [7196]:   data or close method) for the Python implementation as well.
Matched: [7197]:   Drop the no-op TreeBuilder().xml() method from the C implementation.
Matched: [7200]:   also for their arguments, wherever possible.
Matched: [7202]: - Issue #14310: Sockets can now be with other processes on Windows using
Matched: [7203]:   the api socket.socket.share() and socket.fromshare().
Matched: [7218]: - Issue #14321: Do not run pgen during the build if files are up to date.
Matched: [7223]: - Issue #14034: added the argparse tutorial.
Matched: [7234]:   ctypes.c_float that caused an incorrect exception to be returned in the
Matched: [7241]:   keyword arguments, contrary to the documentation.
Matched: [7262]:   (other than a bytes object).
Matched: [7264]: - Issue #13521: dict.setdefault() now does only one lookup for the given key,
Matched: [7268]:   suppressing the display of the chained exception context. The chained
Matched: [7269]:   context still remains available as the __context__ attribute.
Matched: [7274]:   (See whatsnew/3.3), and the documentation has been updated extensively.
Matched: [7276]:   PEP-3118, so further development towards the complete implementation
Matched: [7277]:   of the PEP can proceed in a test-driven manner.
Matched: [7286]:   format and shape without making a copy of the underlying memory.
Matched: [7300]:   against denial of service attacks due to hash collisions within the dict and
Matched: [7314]: - Fix the builtin module initialization code to store the init function for
Matched: [7318]:   all possible file descriptors in the child process rather than just open
Matched: [7319]:   file descriptors.  It now closes only the open fds if possible for the
Matched: [7322]: - Issue #13629: Renumber the tokens in token.h so that they match the indexes
Matched: [7327]: - Issue #13761: Add a "flush" keyword argument to the print() function,
Matched: [7328]:   used to ensure flushing the output stream.
Matched: [7330]: - Issue #13645: pyc files now contain the size of the corresponding source
Matched: [7332]:   timestamp resolution) when checking for freshness of the bytecode.
Matched: [7338]: - Issue #13748: Raw bytes literals can now be written with the ``rb`` prefix
Matched: [7350]: - Issue #6695: Full garbage collection runs now clear the freelist of set
Matched: [7353]: - Fix OSError.__init__ and OSError.__new__ so that each of them can be
Matched: [7356]: - Fix the fix for issue #12149: it was incorrect, although it had the side
Matched: [7357]:   effect of appearing to resolve the issue.  Thanks to Mark Shannon for
Matched: [7371]:   stream.  It was already the case with Python 2.  However, the corresponding
Matched: [7383]: - Issue #13411: memoryview objects are now hashable when the underlying
Matched: [7393]: - Issue #13393: BufferedReader.read1() now asks the full requested size to
Matched: [7394]:   the raw stream instead of limiting itself to the buffer size.
Matched: [7398]: - Issue #13333: The UTF-7 decoder now accepts lone surrogates (the encoder
Matched: [7399]:   already accepts them).
Matched: [7401]: - Issue #13389: Full garbage collection passes now clear the freelists for
Matched: [7402]:   list and dict objects.  They already cleared other freelists in the
Matched: [7405]: - Issue #13327: Remove the need for an explicit None as the second argument
Matched: [7407]:   order to update to the current time. Also added keyword argument
Matched: [7408]:   handling to os.utimensat in order to remove the need for explicit None.
Matched: [7419]:   variable in the default value of a keyword-only argument: ``lambda *,
Matched: [7434]:   the sequence of values they define (instead of comparing based on
Matched: [7437]: - Issue #1294232: In a few cases involving metaclass inheritance, the
Matched: [7438]:   interpreter would sometimes invoke the wrong metaclass when building a new
Matched: [7447]:   as their first argument.  Patch by Petri Lehtinen.
Matched: [7452]: - Issue #12281: Rewrite the MBCS codec to handle correctly replace and ignore
Matched: [7457]:   generator.throw() now gets the traceback from the passed exception's
Matched: [7463]:   longer include a "manifest" to prevent them failing at import time in some
Matched: [7466]: - PEP 3151 / issue #12555: reworking the OS and IO exception hierarchy.
Matched: [7470]: - Issue #13063: the Windows error ERROR_NO_DATA (numbered 232 and described
Matched: [7474]: - Issue #12911: Fix memory consumption when calculating the repr() of huge
Matched: [7477]: - PEP 393: flexible string representation. Thanks to Torsten Becker for the
Matched: [7488]:   module. Ignore the direcotry if its name matchs the module name (e.g.
Matched: [7492]:   finding the bug and providing a patch.
Matched: [7501]: - Issue #12802: the Windows error ERROR_DIRECTORY (numbered 267) is now
Matched: [7519]:   outside the BMP.
Matched: [7524]:   return the respective singleton instances.
Matched: [7528]: - Verify the types of AST strings and identifiers provided by the user before
Matched: [7529]:   compiling them.
Matched: [7544]: - Issue #12149: Update the method cache after a type's dictionary gets
Matched: [7545]:   cleared by the garbage collector.  This fixes a segfault when an instance
Matched: [7546]:   and its type get caught in a reference cycle, and the instance's
Matched: [7547]:   deallocator calls one of the methods on the type (e.g. when subclassing
Matched: [7550]: - Issue #9611, Issue #9015: FileIO.read() clamps the length to INT_MAX on Windows.
Matched: [7552]: - Issue #9642: Uniformize the tests on the availability of the mbcs codec, add
Matched: [7555]: - Issue #9642: Fix filesystem encoding initialization: use the ANSI code page
Matched: [7556]:   on Windows if the mbcs codec is not available, and fail with a fatal error if
Matched: [7557]:   we cannot get the locale encoding (if nl_langinfo(CODESET) is not available)
Matched: [7560]: - When a generator yields, do not retain the caller's exception state on the
Matched: [7563]: - Issue #12475: Prevent generators from leaking their exception state into the
Matched: [7564]:   caller's frame as they return for the last time.
Matched: [7567]:   with other data interleaved between marshalled objects.
Matched: [7570]:   given, produce a informative error message which includes the name(s) of the
Matched: [7573]: - Issue #12370: Fix super with no arguments when __class__ is overriden in the
Matched: [7579]: - Loosen type restrictions on the __dir__ method. __dir__ can now return any
Matched: [7589]:   the following case: sys.stdin.read() stopped with CTRL+d (end of file),
Matched: [7592]: - Issue #12216: Allow unexpected EOF errors to happen on any line of the file.
Matched: [7597]: - Issue #9670: Increase the default stack size for secondary threads on
Matched: [7598]:   Mac OS X and FreeBSD to reduce the chances of a crash instead of a
Matched: [7602]: - Issue #12106: The use of the multiple-with shorthand syntax is now reflected
Matched: [7603]:   in the AST.
Matched: [7605]: - Issue #12190: Try to use the same filename object when compiling unmarshalling
Matched: [7606]:   a code objects in the same file.
Matched: [7609]:   the __dir__() methods of those types.
Matched: [7611]: - Issue #5715: In socketserver, close the server socket in the child process.
Matched: [7613]: - Correct lookup of __dir__ on objects. Among other things, this causes errors
Matched: [7616]: - Issue #12060: Use sig_atomic_t type and volatile keyword in the signal
Matched: [7619]: - Issue #1746656: Added the if_nameindex, if_indextoname, if_nametoindex
Matched: [7620]:   methods to the socket module.
Matched: [7623]:   wait for the process to end when exiting the context to avoid unintentionally
Matched: [7626]: - Issue #1195: Fix input() if it is interrupted by CTRL+d and then CTRL+c,
Matched: [7627]:   clear the end-of-file indicator after CTRL+d.
Matched: [7629]: - Issue #1856: Avoid crashes and lockups when daemon threads run while the
Matched: [7630]:   interpreter is shutting down; instead, these threads are now killed when
Matched: [7631]:   they try to take the GIL.
Matched: [7634]:   the check of the object type doesn't read the __class__ attribute anymore.
Matched: [7635]:   Fix a crash if a class override its __class__ attribute (e.g. a proxy of the
Matched: [7638]: - Issue #10517: After fork(), reinitialize the TLS used by the PyGILState_*
Matched: [7639]:   APIs, to avoid a crash with the pthread implementation in RHEL 5.  Patch
Matched: [7642]: - Issue #10914: Initialize correctly the filesystem codec when creating a new
Matched: [7644]:   the ISO-8859-15 codec.
Matched: [7646]: - Issue #11918: OS/2 and VMS are no more supported because of the lack of
Matched: [7652]: - Issue #5057: fix a bug in the peepholer that led to non-portable pyc files
Matched: [7661]:   subprocess.check_output.  If the blocking operation takes more than `timeout`
Matched: [7662]:   seconds, the `subprocess.TimeoutExpired` exception is raised.
Matched: [7665]:   (EINTR), for example if the program is stopped with CTRL+z on Mac OS X. Patch
Matched: [7668]: - Issue #9319: Include the filename in "Non-UTF8 code ..." syntax error.
Matched: [7670]: - Issue #10785: Store the filename as Unicode in the Python parser.
Matched: [7672]: - Issue #11619: _PyImport_LoadDynamicModule() doesn't encode the path to bytes
Grepping: C:/Python34/Lib/idlelib/NEWS.txt
Grepping: C:/Python34/Lib/idlelib/HISTORY.txt
Matched: [7681]: - Issue #11395: io.FileIO().write() clamps the data length to 32,767 bytes on
Matched: [7682]:   Windows if the file is a TTY to workaround a Windows bug. The Windows console
Matched: [7684]:   stdout mode is binary and the length is greater than 66,000 bytes (or less,
Matched: [4]: This file contains the release messages for previous IDLE releases.
Matched: [5]: As you read on you go back to the dark ages of IDLE's history.
Matched: [12]:   editor window with a filename.  When Class Browser is requested otherwise,
Matched: [7691]:   3.2.0 where the stdout or stderr file descriptor being the same as the stdin
Matched: [13]: - New tarball released as a result of the 'revitalisation' of the IDLEfork
Matched: [17]: - Issue #4832: Save As to type Python files automatically adds .py to the
Matched: [20]: - This release is based on a merging of the earlier IDLE fork work with current
Matched: [21]: - Issue #21986: Code objects are not normally pickled by the pickle module.
Matched: [7703]:   there are many tags (e.g. when using mq).  Patch by Nadeem Vawda.
Matched: [22]:   To match this, they are no longer pickled when running under Idle.
Matched: [25]:   particularly with running things from the shell window. Also the debugger is
Matched: [7705]: - Issue #11335: Fixed a memory leak in list.sort when the key function
Matched: [26]:   not working, but I believe this was the case with the previous IDLE fork
Matched: [7708]: - Issue #8923: When a string is encoded to UTF-8 in strict mode, the result is
Matched: [35]:   Currently, the entry is on the Help menu, but it may move to Run.
Matched: [7709]:   cached into the object. Examples: str.encode(), str.encode('utf-8'),
Matched: [29]: - This release is being made now to mark the point at which IDLEfork is 
Matched: [32]: - IDLEfork CVS will now be branched to enable further development and
Matched: [7713]: - Issue #10829: Refactor PyUnicode_FromFormat(), use the same function to parse
Matched: [33]:   exploration of the two "execution in a remote process" patches submitted by
Matched: [7714]:   the format string in the 3 steps, fix crashs on invalid format strings.
Matched: [51]:   bindings for Idle so Caps Lock does not disable them. Patch by Roger Serwy.
Matched: [36]:   can continue on the trunk.
Matched: [53]: - Issue #21695: Closing a Find-in-files output window while the search is
Matched: [46]: - This was the first release of IDLE fork, which at this stage was a
Matched: [7728]:   It encoded the Unicode filename to UTF-8, but the encoding fails on
Matched: [47]:   combination of IDLE 0.5 and the VPython idle fork, with additional changes
Matched: [63]:   consolidating and improving human-validated tests of Idle. Change other files
Matched: [7733]:   PyUnicode_AsEncodedString(), it was replaced by a better fallback (use the
Matched: [57]: - This is a modification of the CVS version of IDLE 0.5, updated as of
Matched: [64]:   as needed to work with htest.  Running the module as __main__ runs all tests.
Matched: [7740]: - Issue #11386: bytearray.pop() now throws IndexError when the bytearray is
Matched: [61]: - If you have problems or suggestions, you should either contact me or post to
Matched: [62]:   the list at http://www.python.org/mailman/listinfo/idle-dev (making it clear
Matched: [71]:   consolidating and improving human-validated tests of Idle. Change other files
Matched: [72]:   as needed to work with htest.  Running the module as __main__ runs all tests.
Matched: [74]: - Issue #21139: Change default paragraph width to 72, the PEP 8 recommendation.
Matched: [73]:     exclude system modules.  If, however, a system module calls back into the
Matched: [7760]: - Issue #13550: Remove the debug machinery from the threading module: remove
Matched: [74]:     user program, that part of the traceback will be shown.
Matched: [7763]: - Issue #14159: Fix the len() of weak containers (WeakSet, WeakKeyDictionary,
Matched: [90]: - Issue #17625: Close the replace dialog after it is used.
Matched: [78]:     scroll_clear() operation which is used to hide the output of a previous run
Matched: [7765]:   are dead or dying.  Moreover, the implementation is now O(1) rather than
Matched: [79]:     by scrolling it out of the window.
Matched: [102]: - Issue #17625: Close the replace dialog after it is used.
Matched: [82]:     blank editor window, rather than an interactive window.  Opening a file in
Matched: [83]:     such a blank window replaces the (nonexistent) contents of that window
Matched: [7777]: - HTMLParser is now able to handle slashes in the start tag.
Matched: [84]:     instead of creating another window.  Because of the need to have a
Matched: [7779]: - Issue #13641: Decoding functions in the base64 module now accept ASCII-only
Matched: [85]:     well-known port for the ExecBinding protocol, only one copy of IDLE can be
Matched: [86]:     running.  Additional invocations use the RPC mechanism to report their
Matched: [87]:     command line arguments to the copy already running.
Matched: [89]:   - The menus have been reorganized.  In particular, the excessively large
Matched: [92]:   - 'Python Documentation' now works on Windows, if the win32api module is
Matched: [129]: - Issue #14409: IDLE now properly executes commands in the Shell window
Matched: [96]:     instead of the IDLE help; shift-TAB is now a synonym for unindent.
Matched: [130]:   when it cannot read the normal config files on startup and
Matched: [7805]:   to their --libraries option.
Matched: [131]:   has to use the built-in default key bindings.
Matched: [7807]: - Issue #10287: nntplib now queries the server's CAPABILITIES first before
Matched: [132]:   There was previously a bug in one of the defaults.
Matched: [7814]: - Issue #13930: lib2to3 now supports writing converted output files to another
Matched: [146]: - Issue #6378: Further adjust idle.bat to start associated Python
Matched: [7815]:   directory tree as well as copying unchanged files and altering the file
Matched: [7822]: - Issue #10287: nntplib now queries the server's CAPABILITIES again after
Matched: [130]: (For a more detailed change log, see the file ChangeLog.)
Matched: [7823]:   authenticating (since the result may change, according to RFC 4643).
Matched: [134]: IDLE has the following features:
Matched: [136]: - coded in 100% pure Python, using the Tkinter GUI toolkit (i.e. Tcl/Tk)
Matched: [7828]:   Apple has removed gcc-4.2, the version used to build python.org
Matched: [138]: - cross-platform: works on Windows and Unix (on the Mac, there are
Matched: [179]:   the user (unless a different encoding is declared); remove
Matched: [7829]:   64-bit/32-bit Pythons.  If the user does not explicitly override
Matched: [142]: and many other features, e.g. smart indent and call tips
Matched: [7830]:   the default C compiler by setting the CC environment variable,
Matched: [184]:   would not start if a custom theme was defined.
Matched: [150]: The main program is in the file "idle.py"; on Unix, you should be able
Matched: [7833]:   the user does explicitly set CC, substitute its value as the default
Matched: [192]:   versions of IDLE which are not installed in the standard location.
Matched: [7834]:   compiler in the Distutils LDSHARED configuration variable for OS X.
Matched: [154]: use the batch file idle.bat.
Matched: [7835]:   (Note, the python.org 32-bit-only Pythons use gcc-4.0 and the 10.4u
Matched: [156]: Command line arguments: files passed on the command line are executed,
Matched: [7836]:   SDK, neither of which are available in Xcode 4.  This change does not
Matched: [197]: - Windows: Version string for the .chm help file changed, file not being
Matched: [7837]:   attempt to override settings to support their use with Xcode 4.)
Matched: [157]: not opened for editing, unless you give the -e command line option.
Matched: [201]:   David Scherer for suggesting the use of an ephemeral port for the GUI.
Matched: [158]: Try "./idle.py -h" to see other command line options.
Matched: [7842]: - When '' is a path (e.g. in sys.path), make sure __file__ uses the current
Matched: [7845]: - Issue #13609: Add two functions to query the terminal size:
Matched: [166]: IDLE is covered by the standard Python copyright notice
Matched: [210]: - Issue #3549: On MacOS the preferences menu was not present
Matched: [7850]:   instead of ftime() to have a resolution of 100 ns instead of 1 ms (the clock
Matched: [220]: - Issue #4455: IDLE failed to display the windows list when two windows have
Matched: [178]: Viewer menu, not by the debugger.)
Matched: [221]:   the same title.
Matched: [7857]:   make sure two listeners can't bind to the same socket/pipe (or any existing
Matched: [181]: them correctly (MH)
Matched: [223]: - Issue #4383: When IDLE cannot make the connection to its subprocess, it would
Matched: [184]: much more of Python's syntax; this is reflected in the class and path
Matched: [224]:   fail to properly display the error message.
Matched: [187]: - Much better auto-indent; knows how to indent the insides of
Matched: [7866]: - Issue #2945: Make the distutils upload command aware of bdist_rpm products.
Matched: [190]: - Call tip window pops up when you type the name of a known function
Matched: [232]: - help() was not paging to the shell.  Issue1650.
Matched: [191]: followed by an open parenthesis.  Hit ESC or click elsewhere in the
Matched: [192]: window to close the tip window (MH)
Matched: [7877]: - Issue #13848: open() and the FileIO constructor now check for NUL
Matched: [7878]:   characters in the file name.  Patch by Hynek Schlawack.
Matched: [200]: always goes to the *Python Shell* window, and raw_input() works
Matched: [201]: correctly.  You use F5 to import/reload a module: this adds the module
Matched: [7884]:   flush stderr after printing the exception traceback.
Matched: [202]: name to the __main__ namespace.  You use Control-F5 to run a script:
Matched: [262]: - CallTips module now uses the inspect module to produce the argspec.
Matched: [7886]: - Issue #13885: CVE-2011-3389: the _ssl module would always disable the CBC
Matched: [203]: this runs the script *in* the __main__ namespace.  The latter also
Matched: [204]: sets sys.argv[] to the script name
Matched: [7891]:   OSError if localtime() failed. time.clock() now raises a RuntimeError if the
Matched: [277]:   would not start if a custom theme was defined.
Matched: [7894]: - Issue #13772: In os.symlink() under Windows, do not try to guess the link
Matched: [212]: directories, modules, and classes.  Yes, it's a superset of the Class
Matched: [7895]:   target's type (file or directory).  The detection was buggy and made the
Matched: [284]: - Autocompletion of filenames now support alternate separators, e.g. the
Matched: [7896]:   call non-atomic (therefore prone to race conditions).
Matched: [214]: MultiScrolledLists.py, which provides the framework for this dialog.
Matched: [288]:   in the config dialog would cause non-Python files to be colored as if they
Matched: [7900]: - Issue #13722: Avoid silencing ImportErrors when initializing the codecs
Matched: [222]: - Enabled support for running a module, with or without the debugger.
Matched: [224]: reload of that module; Control-F5 loads it under the debugger.
Matched: [226]: - Re-enable tearing off the Windows menu, and make a torn-off Windows
Matched: [7907]:   in the directory name.
Matched: [229]: - Menu items can now be have a checkbox (when the menu label starts
Matched: [230]: with "!"); use this for the Debugger and "Auto-open stack viewer"
Matched: [7914]: - Issue #13589: Fix some serialization primitives in the aifc module.
Matched: [233]: - Added a Quit button to the Debugger API.
Matched: [7918]:   Authentication. Patch contributed by Joonas Kuorilehto.
Matched: [237]: - Fix the debugger (when using Python 1.5.2b2) to use canonical
Matched: [322]: - Bug in idlelib.MultiCall: Options dialog was crashing IDLE if there was an
Matched: [238]: filenames for breakpoints, so these actually work.  (There's still a
Matched: [7921]:   The hang would occur when retrieving the result of a scheduled future after
Matched: [239]: lot of work to be done to the management of breakpoints in the
Matched: [7922]:   the executor had been shut down.
Matched: [244]: - Allow dragging of the separator between the two list boxes in the
Matched: [7925]:   return False when the event was set and cleared right after.
Matched: [247]: - Bind ESC to "close window" of the debugger, stack viewer and class
Matched: [330]: - AutoCompleteWindow moved below input line, will move above if there
Matched: [7927]: - Issue #9993: When the source and destination are on different filesystems,
Matched: [248]: browser.  It removes the selection highlighting in regular text
Matched: [333]: - Calltips now 'handle' tuples in the argument list (display '<tuple>' :)
Matched: [7928]:   and the source is a symlink, shutil.move() now recreates a symlink on the
Matched: [255]: Lots of changes; here are the highlights:
Matched: [7929]:   destination instead of copying the file contents.  Patch by Jonathan Niehof
Matched: [343]: - Bug #813342: Start the IDLE subprocess with -Qnew if the parent
Matched: [265]: The command to open the Python shell window is now in the File menu.
Matched: [7934]: - Issue #13696: Fix the 302 Relative URL Redirection problem.
Matched: [346]: - Honor the "Cancel" action in the save dialog (Debian bug #299092)
Matched: [7936]: - Issue #13636: Weak ciphers are now disabled by default in the ssl module
Matched: [279]: JIT (Just-In-Time) stack viewer toggle -- if set, the stack viewer
Matched: [348]: - Some syntax errors were being caught by tokenize during the tabnanny
Matched: [284]: Zoom height -- make the window full height.
Matched: [7941]:   true, symlinks aren't dereferenced and the operation instead acts on the
Matched: [349]:   check, resulting in obscure error messages.  Do the syntax check
Matched: [294]: IDLE 0.1 was distributed with the Python 1.5.2b1 release on 12/22/98.
Matched: [7946]: - Issue #13626: Add support for SSL Diffie-Hellman key exchange, through the
Matched: [352]: - IDLE's version number takes a big jump to match the version number of
Matched: [7947]:   SSLContext.load_dh_params() method and the ssl.OP_SINGLE_DH_USE option.
Matched: [353]:   the Python release of which it's a part.
Matched: [367]: - File menu hotkeys: there were three 'p' assignments.  Reassign the
Matched: [368]:   'Save Copy As' and 'Print' hotkeys to 'y' and 't'.  Change the
Matched: [7962]: - Issue #13637: "a2b" functions in the binascii module now accept ASCII-only
Matched: [7968]:   key exchange, through the SSLContext.set_ecdh_curve() method and the
Matched: [7972]:   choose the cipher based on their own preferences, rather than on the
Matched: [385]:   message claiming they were IDLE internal errors (since 1.2a1).
Matched: [396]: - Bug #1517996: IDLE now longer shows the default Tk menu when a
Matched: [7984]: - Issue #8035: urllib: Fix a bug where the client could remain stuck after a
Matched: [397]:   path browser, class browser or debugger is the frontmost window on MacOS X
Matched: [7987]: - Issue #13560: os.strerror() now uses the current locale encoding instead of
Matched: [7990]: - Issue #8373: The filesystem path of AF_UNIX sockets now uses the filesystem
Matched: [7991]:   encoding and the surrogateescape error handler, rather than UTF-8.  Patch
Matched: [8003]:   when set to False makes run() execute the scheduled events due to expire
Matched: [8004]:   soonest (if any) and then return.  Patch by Giampaolo Rodolà.
Matched: [8011]: - Issue #5689: Add support for lzma compression to the tarfile module.
Matched: [455]:   when using X11 and the Fink distribution.  Python Bug 1263656.
Matched: [8018]: - Issue #5905, Issue #13560: time.strftime() is now using the current locale
Matched: [458]:   of replacing the input line, the previous command is now appended to the
Matched: [8019]:   encoding, instead of UTF-8, if the wcsftime() function is not available.
Matched: [463]:   the Untabify command.
Matched: [8025]:   other than 900k.
Matched: [8029]: - Issue #6715: Add a module 'lzma' for compression using the LZMA algorithm.
Matched: [8030]:   Thanks to Per Øyvind Karlsen for the initial implementation.
Matched: [474]: - run.py: use Queue's blocking feature instead of sleeping in the main
Matched: [8036]:   compiled files in the current directory.  Initial patch by Sjoerd de Vries.
Matched: [477]: - Add config-main option to make the 'history' feature non-cyclic.
Matched: [8042]:   when it is linked to the ncurses library. It encodes also Unicode strings to
Matched: [483]:   tabs for the current EditorWindow via the Format menu) but IDLE will
Matched: [8043]:   the locale encoding instead of UTF-8.
Matched: [486]: - Enable setting the indentation width using the Options dialog.
Matched: [8045]: - Issue #12856: Ensure child processes do not inherit the parent's random
Matched: [8046]:   seed for filename generation in the tempfile module.  Patch by Brian
Matched: [491]: - Discourage using an indent width other than 8 when using tabs to indent
Matched: [8050]:   parameter, as other file-like objects.  Patch by Ryan Kelly.
Matched: [495]:   Autoindent was merged into EditorWindow.  This allows IDLE to conform to the
Matched: [8052]: - Issue #13458: Fix a memory leak in the ssl module when decoding a
Matched: [497]:   even if the file uses tabs.)  Any change in indent width is local to that
Matched: [507]: - The GUI was hanging if the shell window was closed while a raw_input()
Matched: [8064]:   the wait_flag parameter is false.  Patch by sbt.
Matched: [508]:   was pending.  Restored the quit() of the readline() mainloop().
Matched: [8067]:   raised when the wrapped raw file is non-blocking and the write would block.
Matched: [8068]:   Previous code assumed that the raw write() would raise BlockingIOError, but
Matched: [512]:   remote registered objects.  Changes to these attributes are local, however.
Matched: [8069]:   RawIOBase.write() is defined to returned None when the call would block.
Matched: [519]: - On OpenBSD, terminating IDLE with ctrl-c from the command line caused a
Matched: [8075]:   node when it is the only child of an element.  Initial patch by Dan
Matched: [520]:   stuck subprocess MainThread because only the SocketThread was exiting.
Matched: [8078]: - Issue #13374: The Windows bytes API has been deprecated in the os module. Use
Matched: [527]: - Saving a Keyset w/o making changes (by using the "Save as New Custom Key Set"
Matched: [8079]:   Unicode filenames instead of bytes filenames to not depend on the ANSI code
Matched: [531]: - A change to the linecache.py API caused IDLE to exit when an exception was
Matched: [532]:   raised while running without the subprocess (-n switch).  Python Bug 1063840.
Matched: [541]:   far the block was indented, effectively adding the indentation width
Matched: [542]:   to the reformat width.  This has been repaired, and the reformat
Matched: [543]:   width is again a bound on the total width of reformatted lines.
Matched: [8103]: - Issue #3067: locale.setlocale() now raises TypeError if the second
Matched: [557]:   window raising, especially in the Windows menu and in the debugger.
Matched: [8107]: - Issue #13140: Fix the daemon_threads attribute of ThreadingMixIn.
Matched: [560]: - If user passes a non-existent filename on the commandline, just
Matched: [8112]: - Byte compilation in packaging is now isolated from the calling Python -B or
Matched: [569]: - EditorWindow.py was not finding the .chm help file on Windows.  Typo
Matched: [581]: - Redirect the warning stream to the shell during the ScriptBinding check of
Matched: [8126]: - Issue #670664: Fix HTMLParser to correctly handle the content of
Matched: [582]:   user code and format the warning similarly to an exception for both that
Matched: [8132]: - Fix the xmlrpc.client user agent to return something similar to
Matched: [583]:   check and for runtime warnings raised in the subprocess.
Matched: [8140]: - Issue #13258: Use callable() built-in in the standard library.
Matched: [586]:   The pane no longer appears in the shell window.  Added capability to limit
Matched: [8145]: - Issue #11183: Add finer-grained exceptions to the ssl module, so that
Matched: [590]: - Paragraph reformat width is now a configurable parameter in the
Matched: [8146]:   you don't have to inspect the exception's attributes in the common case.
Matched: [8148]: - Issue #13216: Add cp65001 codec, the Windows UTF-8 (CP_UTF8).
Matched: [596]: - If nulls somehow got into the strings in recent-files.lst
Matched: [8150]: - Issue #13226: Add RTLD_xxx constants to the os module. These constants can be
Matched: [599]: - If the normal background is changed via Configure/Highlighting, it will
Matched: [8154]:   the time module. time.clock_gettime(time.CLOCK_MONOTONIC) provides a
Matched: [600]:   update immediately, thanks to the previously mentioned patch by Nigel Rowe.
Matched: [602]: - Add a highlight theme for builtin keywords.  Python Patch 805830 Nigel Rowe
Matched: [607]:   to the execution server.  The return of the OK response from the subprocess
Matched: [8169]:   semicolons together. Patch by Ben Darnell and Petri Lehtinen.
Matched: [608]:   initialization was interfering and causing the sending socket to be not
Matched: [609]:   ready.  Add an IO ready test to fix this.  Moved the polling IO ready test
Matched: [8177]: - Issue #13150: sysconfig no longer parses the Makefile and config.h files
Matched: [614]: - Added a Tk error dialog to run.py inform the user if the subprocess can't
Matched: [615]:   connect to the user GUI process.  Added a timeout to the GUI's listening
Matched: [8182]:   in order to display the prompt correctly.
Matched: [617]:   the port or connect to the subprocess.  Clean up error handling during
Matched: [8184]: - Issue #12454: The mailbox module is now using ASCII, instead of the locale
Matched: [623]: - Keybindings with the Shift modifier now work correctly.  So do bindings which
Matched: [624]:   use the Space key.  Limit unmodified user keybindings to the function keys.
Matched: [8193]: - Issue #12386: packaging does not fail anymore when writing the RESOURCES
Matched: [627]: - After an exception, run.py was not setting the exception vector. Noam
Grepping: C:/Python34/Lib/idlelib/README.txt
Matched: [631]: - IDLE now does not fail to save the file anymore if the Tk buffer is not a
Matched: [8199]: - Issue #13025: mimetypes is now reading MIME types using the UTF-8 encoding,
Matched: [8200]:   instead of the locale encoding.
Matched: [5]: IDLE has everything they really need to develop pure Python code.
Matched: [646]: - Added a banner to the shell discussing warnings possibly raised by personal
Matched: [8]: and many other capabilities, e.g. smart indent, call tips, and autocompletion.
Matched: [8224]:   if the underlying raw stream is unseekable, even if the seek could be
Matched: [664]:   reflect the current status of the configuration system.  Python Bug 768469
Matched: [18]: restarted from the Shell window without restarting IDLE.
Matched: [8225]:   satisfied using the internal buffer.  Patch by John O'Connor.
Matched: [8227]: - Issue #7689: Allow pickling of dynamically created classes when their
Matched: [22]: testing a module two or three steps down the import chain.
Matched: [675]:   sys.std{in|out|err}.encoding, for both the local and the subprocess case.
Matched: [8231]: - Issue #13034: When decoding some SSL certificates, the subjectAltName
Matched: [24]: (Personal firewall software may warn about the connection IDLE makes to its
Matched: [8234]: - Issue #12306: Expose the runtime version of the zlib C library as a constant,
Matched: [684]: - Extend AboutDialog.ViewFile() to support file encodings.  Make the CREDITS
Matched: [8235]:   ZLIB_RUNTIME_VERSION, in the zlib module. Patch by Torsten Landschoff.
Matched: [27]: from the Internet.)
Matched: [687]: - Updated the About dialog to reflect re-integration into Python.  Provide
Matched: [8243]: - Issue #12567: Add curses.unget_wch() function. Push a character so the next
Matched: [691]: - TextViewer() now has a third parameter which allows inserting text into the
Matched: [39]: which allows the user to specify additional help sources, either locally or on
Matched: [694]: - (Created the .../Lib/idlelib directory in the Python CVS, which is a clone of
Matched: [40]: the web.
Matched: [695]:   IDLEfork modified to install in the Python environment.  The code in the
Matched: [8247]:   instead of the locale encoding.
Matched: [42]: IDLE is coded in 100% pure Python, using the Tkinter GUI toolkit (Tk/Tcl)
Matched: [698]: - Printing the Shell window was failing if it was not saved first SF 748975
Matched: [45]: IDLE accepts command line arguments.  Try idle -h to see the options.
Matched: [700]: - When using the Search in Files dialog, if the user had a selection
Matched: [8250]:   of crashing when an invalid path is given in the manifest template.
Matched: [49]: them by using the Python issue tracker:
Matched: [701]:   highlighted in his Editor window, insert it into the dialog search field.
Matched: [8252]: - Issue #12841: tarfile unnecessarily checked the existence of numerical user
Matched: [53]: For further details and links, read the Help files and check the IDLE home
Matched: [703]: - The Python Shell entry was disappearing from the Windows menu.
Matched: [8253]:   and group ids on extraction. If one of them did not exist the respective id
Matched: [705]: - Update the Windows file list when a file name change occurs
Matched: [8254]:   of the current user (i.e. root) was used for the file and ownership
Matched: [707]: - Change to File / Open Module: always pop up the dialog, using the current
Matched: [708]:   selection as the default value.  This is easier to use habitually.
Matched: [710]: - Avoided a problem with starting the subprocess when 'localhost' doesn't
Matched: [711]:   resolve to the user's loopback interface.  SF 747772
Matched: [8263]:   getstatusoutput() functions of the subprocess module now kill the process,
Matched: [716]: - File / New will by default save in the directory of the Edit window from
Matched: [725]: - The current working directory of the execution environment (and shell
Matched: [8273]:   the C pickle implementation.
Matched: [726]:   following completion of execution) is now that of the module being run.
Matched: [728]: - Added the delete-exitfunc option to config-main.def.  (This option is not
Matched: [8278]: - Issue #12287: Fix a stack corruption in ossaudiodev module when the FD is
Matched: [729]:   included in the Options dialog.)  Setting this to True (the default) will
Matched: [730]:   cause IDLE to not run sys.exitfunc/atexit when the subprocess exits.
Matched: [8284]: - Issue #9923: The mailcap module now correctly uses the platform path
Matched: [732]: - IDLE now preserves the line ending codes when editing a file produced on
Matched: [8285]:   separator for the MAILCAP environment variable on non-POSIX platforms.
Matched: [8287]: - Issue #12835: Follow up to #6560 that unconditionally prevents use of the
Matched: [739]:   the default font when first installed on Windows.  SF 661676
Matched: [741]: - Added Autosave feature: when user runs code from edit window, if the file
Matched: [8292]:   to be used if the private key is encrypted.  Patch by Adam Simpkins.
Matched: [743]:   option is set in the Options dialog, and the default is to prompt the
Matched: [744]:   user to save the file.   SF 661318 Bruce Sherwood patch.
Matched: [8300]: - Issue #6560: The sendmsg/recvmsg API is now exposed by the socket module
Matched: [746]: - Improved the RESTART annotation in the shell window when the user restarts
Matched: [8301]:   when provided by the underlying platform, supporting processing of
Matched: [747]:   the shell while it is generating output.  Also improved annotation when user
Matched: [748]:   repeatedly hammers the Ctrl-F6 restart.
Matched: [8304]: - Issue #12326: On Linux, sys.platform doesn't contain the major version
Matched: [750]: - Allow IDLE to run when not installed and cwd is not the IDLE directory
Matched: [8306]:   on the Linux version used to build Python.
Matched: [754]:   sys.path, prepend it.  This allows the module to import other modules in
Matched: [755]:   the same directory.  Do the same for a script run from the command line.
Matched: [8315]:   resources (FD/zombie) when killed at the wrong time.
Matched: [757]: - Correctly restart the subprocess if it is running user code and the user
Matched: [758]:   attempts to run some other module or restarts the shell.  Do the same if
Matched: [759]:   the link is broken and it is possible to restart the subprocess and re-
Matched: [760]:   connect to the GUI.   SF RFE 661321.
Matched: [8324]:   the file cannot be opened.
Matched: [762]: - Improved exception reporting when running commands or scripts from the
Matched: [8329]: - Issue #10087: Fix the html output format of the calendar module.
Matched: [765]: - Added a -n command line switch to start IDLE without the subprocess.
Matched: [766]:   Removed the Shell menu when running in that mode.  Updated help messages.
Matched: [768]: - Added a comment to the shell startup header to indicate when IDLE is not
Matched: [8338]: - Issue #12655: Expose functions from sched.h in the os module: sched_yield(),
Matched: [769]:   using the subprocess.
Matched: [771]: - Restore the ability to run without the subprocess.  This can be important for
Matched: [772]:   some platforms or configurations.  (Running without the subprocess allows the
Matched: [8345]: - Issues #11104, #8688: Fix the behavior of distutils' sdist command with
Matched: [8348]: - Issue #11281: smtplib.STMP gets source_address parameter, which adds the
Matched: [774]:   desirable, depending on your point of view.  In addition, the traditional
Matched: [777]:   edit the code and a separate instance run to test changes.  (Multiple
Matched: [8356]:   in Python code) now finds the doc of the method.
Matched: [780]: - Improve the error message a user gets when saving a file with non-ASCII
Matched: [782]:   'EncodingMessage', which contains the line to add in a fixed-font entry
Matched: [8361]:   code pre-dates the ability to subclass extension types.  It is now possible
Matched: [783]:   widget, and which has a button to add that line to the file automatically.
Matched: [8362]:   to inherit from these classes, without having to import the private
Matched: [785]:   possible values: none, utf-8, and locale. None is the default: IDLE will show
Matched: [8370]: - Issue #12514: Use try/finally to assure the timeit module restores garbage
Matched: [788]:   files are saved in the locale's encoding; the dialog is only displayed if the
Matched: [789]:   source contains characters outside the locale's charset.  SF 710733 - Loewis
Matched: [791]: - Improved I/O response by tweaking the wait parameter in various
Matched: [8383]: - Issue #12591: Improve support of "universal newlines" in the subprocess
Matched: [795]:   loop in user code using the 'interrupt' extension.  User code runs
Matched: [8384]:   module: the piped streams can now be properly read from or written to.
Matched: [796]:   in MainThread, while the RPCServer is handled by SockThread.  This is
Matched: [799]: - Implemented the 'interrupt' extension module, which allows a subthread
Matched: [800]:   to raise a KeyboardInterrupt in the main thread.
Matched: [802]: - Attempting to save the shell raised an error related to saving
Matched: [8394]: - Issue #12372: POSIX semaphores are broken on AIX: don't use them.
Matched: [803]:   breakpoints, which are not implemented in the shell
Matched: [8397]:   to get channel binding data for the current SSL session (only the
Matched: [805]: - Provide a correct message when 'exit' or 'quit' are entered at the
Matched: [8398]:   "tls-unique" channel binding is implemented).  This allows the implementation
Matched: [8399]:   of certain authentication mechanisms such as SCRAM-SHA-1-PLUS.  Patch by
Matched: [812]:   calls) out of rpc.py into the client and server.
Matched: [8405]: - Issue #12571: Add a plat-linux3 directory mirroring the plat-linux2
Matched: [8406]:   directory, so that "import DLFCN" and other similar imports work on
Grepping: C:/Python34/Lib/idlelib/help.txt
Matched: [8410]:   commands; they aren't required and in fact postfix doesn't support that form.
Matched: [818]: - Restart the subprocess if it terminates itself. (VPython programs do that)
Matched: [820]: - Support subclassing of exceptions, including in the shell, by moving the
Matched: [821]:   exception formatting to the subprocess.
Matched: [8424]: - Issue #11321: Fix a crash with multiple imports of the _pickle module when
Matched: [830]: - Updated INSTALL.txt to claify use of the python2 rpm.
Matched: [8430]: - Add cgi.closelog() function to close the log file.
Matched: [836]: - Code encountering an unhandled exception under the debugger now shows
Matched: [837]:   the correct traceback, with IDLE internal levels pruned out.
Matched: [8435]:   the parent structure. Patch by Vlad Riscutia.
Matched: [839]: - If an exception occurs entirely in IDLE, don't prune the IDLE internal
Matched: [8437]: - Raise ValueError when attempting to set the _CHUNK_SIZE attribute of a
Matched: [840]:   modules from the traceback displayed.
Matched: [8441]:   This fixes a bug with the remove (uninstall) feature on Windows.
Matched: [844]: - IDLE icons will now install correctly even when setup.py is run from the
Matched: [8447]:   ignore the first byte of an invalid byte sequence. For example,
Matched: [850]:   of the selection.
Matched: [8450]: - Issue #12459: time.sleep() now raises a ValueError if the sleep length is
Matched: [8452]:   Linux for example, to have the same behaviour on all platforms.
Matched: [857]: - Removed the File Path from the Additional Help Sources scrolled list.
Matched: [8455]:   Python scripts using a encoding different than UTF-8 (read the coding cookie
Matched: [859]: - Add capability to access Additional Help Sources on the web if the
Matched: [8456]:   of the script).
Matched: [860]:   Help File Path begins with //http or www.  (Otherwise local path is
Matched: [8459]:   if the process has only one pipe.
Matched: [863]: - Additional Help Sources were not being posted on the Help menu in the
Matched: [864]:   order entered.  Implement sorting the list by [HelpFiles] 'option'
Matched: [8464]: - Issue #12451: pydoc: importfile() now opens the Python script in binary mode,
Matched: [8465]:   instead of text mode using the locale encoding, to avoid encoding issues.
Matched: [868]:   Python/Doc if platform is Windows, otherwise start in current directory.
Matched: [8467]: - Issue #12451: runpy: run_path() now opens the Python script in binary mode,
Matched: [870]: - Put the Additional Help Sources directly on the Help menu instead of in
Matched: [8468]:   instead of text mode using the locale encoding, to support other encodings
Matched: [8469]:   than UTF-8 (scripts using the coding cookie).
Matched: [871]:   an Extra Help cascade menu.  Rearrange the Help menu so the Additional
Matched: [8472]:   of the text mode (using the locale encoding) to avoid encoding issues.
Matched: [8474]: - Issue #12147: Adjust the new-in-3.2 smtplib.send_message method for better
Matched: [876]: - Uniform capitalization in General tab of ConfigDialog, update the doc string.
Matched: [8475]:   conformance to the RFCs:  correctly handle Sender and Resent- headers.
Matched: [879]:   deleting Additional Help Sources from the user's config file.
Matched: [8478]:   the garbage collector while the Heap lock is held.
Matched: [881]: - Make configHelpSourceEdit OK button the default and bind <Return>
Matched: [8480]: - Issue #12462: time.sleep() now immediately calls the (Python) signal handler
Matched: [8481]:   if it is interrupted by a signal, instead of having to wait until the next
Matched: [886]: - Use os.startfile() to open both Additional Help and Python Help on the
Matched: [887]:   Windows platform.  The application associated with the file type will act as
Matched: [8488]:   UTF-8 instead of the locale encoding if the encoding is not specified. It now
Matched: [888]:   the viewer.  Windows help files (.chm) are now supported via the
Matched: [8489]:   also opens XML files for the parser in binary mode instead of the text mode
Matched: [891]: - If Python Help files are installed locally on Linux, use them instead of
Matched: [8495]: - Issue #12451: pydoc.synopsis() now reads the encoding cookie if available,
Matched: [894]: - Make the methods for finding the Python help docs more robust, and make
Matched: [8496]:   to read the Python script from the right encoding.
Matched: [895]:   them work in the installed configuration, also.
Matched: [8498]: - Issue #12451: distutils now opens the setup script in binary mode to read the
Matched: [897]: - On the Save Before Run dialog, make the OK button the default.  One
Matched: [8502]:   check or set the MACOSX_DEPLOYMENT_TARGET environment variable for the
Matched: [903]: - Removed the "Help/Advice" menu entry.  Thanks, David!  We'll remember!
Matched: [8504]:   and was unreliable since tests or user programs could modify the interpreter
Matched: [905]: - Change the "Classic Windows" theme's paste key to be <ctrl-v>.
Matched: [8505]:   environment after Distutils set it.  Instead, have Distutils set the
Matched: [907]: - Rearrange the Shell menu to put Stack Viewer entries adjacent.
Matched: [8506]:   deployment target only in the environment of each build subprocess.  It is
Matched: [909]: - Add the ability to restart the subprocess interpreter from the shell window;
Matched: [8507]:   still possible to globally override the default by setting
Matched: [1]: [See the end of this file for ** TIPS ** on using IDLE !!]
Matched: [8508]:   MACOSX_DEPLOYMENT_TARGET before launching the interpreter; its value must be
Matched: [913]: - Upon a restart, annotate the shell window with a "restart boundary".  Add a
Matched: [8509]:   greater or equal to the default value, the value with which the interpreter
Matched: [3]: IDLE is the Python IDE built with the tkinter GUI toolkit.
Matched: [914]:   shell window menu "Shell/View Restart" with binding F6 to jump to the most
Matched: [8510]:   was built.  Also, implement the same handling in packaging.
Matched: [5]: IDLE has the following features:
Matched: [8512]: - Issue #12422: In the copy module, don't store objects that are their own copy
Matched: [6]: -coded in 100% pure Python, using the tkinter GUI toolkit
Matched: [8513]:   in the memo dict.
Matched: [8515]: - Issue #12303: Add sigwaitinfo() and sigtimedwait() to the signal module.
Matched: [9]: call tips, and many other features
Matched: [934]: - First release of major new functionality.  For further details refer to
Matched: [8520]: - Issue #1874: email now detects and reports as a defect the presence of
Matched: [935]:   Idle-dev and/or the Sourceforge CVS.
Matched: [8521]:   any CTE other than 7bit, 8bit, or binary on a multipart.
Matched: [937]: - Adapted to the Mac platform.
Matched: [15]: IDLE has two window types the Shell window and the Editor window. It is
Matched: [8523]: - Issue #12383: Fix subprocess module with env={}: don't copy the environment
Matched: [939]: - Overhauled the IDLE startup options and revised the idle -h help message,
Matched: [19]: the dotted line at the top of a menu to "tear it off": a separate window
Matched: [8526]: - Issue #11637: Fix support for importing packaging setup hooks from the
Matched: [20]: containing the menu is created (for Unix and Windows only).
Matched: [944]: - Introduced the new RPC implementation, which includes a debugger.  The output
Matched: [8529]: - Issue #6771: Moved the curses.wrapper function from the single-function
Matched: [945]:   of user code is to the shell, and the shell may be used to inspect the
Matched: [8530]:   wrapper module into __init__, eliminating the module.  Since __init__ was
Matched: [946]:   environment after the run has finished.  (In version 0.8.1 the shell
Matched: [8531]:   already importing the function to curses.wrapper, there is no API change.
Matched: [32]:         Save             -- Save current window to the associated file (unsaved
Matched: [947]:   environment was separate from the environment of the user code.)
Matched: [8533]: - Issue #11584: email.header.decode_header no longer fails if the header
Matched: [33]:                             windows have a * before and after the window title)
Matched: [949]: - Introduced the configuration GUI and a new About dialog.
Matched: [36]:                             the associated file
Matched: [952]:   van Rossum's.  GvR code has support for the IDLE debugger and uses the shell
Matched: [8542]: - Issue #12133: AbstractHTTPHandler.do_open() of urllib.request closes the HTTP
Matched: [38]:                             without changing the associated file
Matched: [953]:   to inspect the environment of code Run from an Edit window.  Files removed:
Matched: [40]:         Print Window     -- Print the current window
Matched: [8549]: - Issue #9284: Allow inspect.findsource() to find the source of doctest
Matched: [8553]:   compatibility helper for the distutils-packaging transition.  Original patch
Matched: [8556]: - Issue #12287: In ossaudiodev, check that the device isn't closed in several
Matched: [52]:                             then delete the selection
Matched: [55]:         Select All       -- Select the entire contents of the edit buffer
Matched: [8565]: - Issue #10694: zipfile now ignores garbage at the end of a zipfile.
Matched: [59]:         Find Selection   -- Search for the string in the selection
Matched: [8569]: - Issue #10424: Argparse now includes the names of the missing required
Matched: [63]:         Expand Word      -- Expand the word you have typed to match another
Matched: [8570]:   arguments in the missing arguments error message.
Matched: [64]:                             word in the same buffer; repeat to get a
Matched: [8573]:   a new 'append_nul' attribute on the handler.
Matched: [66]:         Show Calltip     -- After an unclosed parenthesis for a function, open
Matched: [68]:         Show Parens      -- Highlight the surrounding parenthesis
Matched: [74]:         Indent Region       -- Shift selected lines right by the indent width
Matched: [8589]: - Issue #11893: Remove obsolete internal wrapper class ``SSLFakeFile`` in the
Matched: [76]:         Dedent Region       -- Shift selected lines left by the indent width
Matched: [8597]:   left over from the Mercurial transition
Matched: [82]:         Untabify Region     -- Turn *all* tabs into the corrent number of spaces
Matched: [8601]: - Issue #12085: Fix an attribute error in subprocess.Popen destructor if the
Matched: [86]:                                accepted default by the Python community is 4
Matched: [88]:         Format Paragraph    -- Reformat the current blank-line-separated
Matched: [89]:                                paragraph. All lines in the paragraph will be
Matched: [8614]: - Issue #12196: Add pipe2() to the os module.
Matched: [92]:         Strip trailing whitespace -- Removed any space characters after the end
Matched: [93]:                                      of the last non-space character
Matched: [8624]: - Issue #12175: FileIO.readall() now only reads the file position and size
Matched: [97]:         Python Shell -- Open or wake up the Python shell window
Matched: [99]:         Check Module -- Check the syntax of the module currently open in the
Matched: [8630]:   if the file is closed.
Matched: [100]:                         Editor window.  If the module has not been saved IDLE
Matched: [101]:                         will prompt the user to save the code.
Matched: [102]:         Run Module   -- Restart the shell to clean the environment, then
Matched: [8638]: - Issue #10818: Remove the Tk GUI and the serve() function of the pydoc module,
Matched: [103]:                         execute the currently open module. If the module has
Matched: [104]:                         not been saved IDLE will prompt the user to save the
Matched: [8642]: - Issue #1441530: In imaplib, read the data in one chunk to speed up large
Matched: [109]:         View Last Restart -- Scroll the shell window to the last Shell restart
Matched: [8645]: - Issue #12070: Fix the Makefile parser of the sysconfig module to handle
Matched: [110]:         Restart Shell     -- Restart the shell to clean the environment
Grepping: C:/Python34/Lib/lib2to3/PatternGrammar.txt
Matched: [8649]:   their encode() method anymore, but continue to call the reset() method if the
Matched: [114]:         Go to File/Line   -- Look around the insert point for a filename
Matched: [8652]: - Issue #12049: Add RAND_bytes() and RAND_pseudo_bytes() functions to the ssl
Grepping: C:/Python34/Lib/lib2to3/Grammar.txt
Matched: [115]:                              and line number, open the file, and show the line.
Matched: [8655]: - Issue #6501: os.device_encoding() returns None on Windows if the application
Matched: [8]: # With 'any' we can still specify the sub-structure.
Matched: [8658]: - Issue #12105: Add O_CLOEXEC to the os module.
Matched: [116]:                              Useful to view the source lines referenced in an
Matched: [8661]:   now raises TypeError (reflecting the invalid type of the 3rd argument) rather
Matched: [117]:                              exception traceback.  Available in the context
Matched: [3]: # Note:  Changing the grammar specified in this file will most likely
Matched: [8665]:   to be able to unload the module.
Matched: [4]: #        require corresponding changes in the parser module
Matched: [8667]: - Add the packaging module, an improved fork of distutils (also known as
Matched: [118]:                              menu of the Shell window.
Matched: [5]: #        (../Modules/parsermodule.c).  If you can't make the changes to
Matched: [8670]: - Issue #12065: connect_ex() on an SSL socket now returns the original errno
Matched: [120]:                              experimental. Run commands in the shell under the
Matched: [6]: #        that module yourself, please co-ordinate the required changes
Matched: [122]:         Stack Viewer      -- Show the stack traceback of the last exception
Matched: [8671]:   when the socket's timeout expires (it used to return None).
Matched: [8]: #        Drake <fdrake@acm.org> will probably be listening there.
Matched: [123]:         Auto-open Stack Viewer (toggle) -- Toggle automatically opening the
Matched: [10]: # NOTE WELL: You should also follow all the steps listed in PEP 306,
Matched: [130]:                           keybindings, and color themes may be altered.
Matched: [8681]:   their incremental counterparts now raise OverflowError if given an input
Matched: [8682]:   larger than 4GB, instead of silently truncating the input and returning
Matched: [135]:         Code Context (toggle) -- Open a pane at the top of the edit window
Matched: [25]: # Start symbols for the grammar:
Matched: [8685]: - Issue #12050: zlib.decompressobj().decompress() now clears the unconsumed_tail
Matched: [136]:                                  which shows the block context of the section
Matched: [28]: #	eval_input is the input for the eval() and input() functions.
Matched: [137]:                                  of code which is scrolling off the top or the
Matched: [8690]:   writing, then seeking before the previous write but still within buffered
Matched: [138]:                                  window. This is not present in the Shell
Matched: [139]:                                  window only the Editor window.
Matched: [8696]: - Issue #11799: urllib.request Authentication Handlers will raise a ValueError
Matched: [143]:         Zoom Height -- Toggles the window between normal size (40x80 initial
Matched: [8697]:   when presented with an unsupported Authentication Scheme. Patch contributed
Matched: [144]:         setting) and maximum height.  The initial size is in the Configure
Matched: [145]:         IDLE dialog under the general tab.
Matched: [8701]:   non-ASCII path (path to the Python executable). Open and write the script in
Matched: [147]:         The rest of this menu lists the names of all open windows;
Matched: [8702]:   binary mode, but ensure that the shebang is decodable from UTF-8 and from the
Matched: [148]:         select one to bring it to the foreground (deiconifying it if
Matched: [8703]:   encoding of the script.
Matched: [156]:                        detailing the menu options, basic editing and navigation,
Matched: [157]:                        and other tips.
Matched: [8712]:   manages the sending of headers to output stream and flushing the internal
Matched: [160]:                        docs.python.org showing the latest Python documentation.
Matched: [8717]: - Issue #11164: Stop trying to use _xmlplus in the xml module.
Matched: [162]:         Additional help sources may be added here with the Configure IDLE
Matched: [61]: # For normal assignments, additional restrictions enforced by the interpreter
Matched: [163]:         dialog under the General tab.
Matched: [8724]: - Issue #8407: The signal handler writes the signal number as a single byte
Matched: [8725]:   instead of a nul byte into the wakeup file descriptor. So it is possible to
Matched: [168]:                             then delete the selection
Matched: [8728]: - Issue #8407: Add pthread_kill(), sigpending() and sigwait() functions to the
Matched: [172]:                             when the debugger is open.
Matched: [173]:         Clear Breakpoint -- Clears the breakpoint on that line
Matched: [8736]: - Issue #11916: Add a number of MacOSX specific definitions to the errno module.
Matched: [178]:                             then delete the selection
Matched: [8740]:   detect mtime changes by comparing to the system clock instead of to the
Matched: [8741]:   previous value of the mtime.
Matched: [8746]:   parameter to control parameters of the secure channel.  Patch by Sijin
Matched: [191]:         the Windows help format.  The Additional Help Sources feature of the
Matched: [192]:         configuration GUI supports .chm, along with any other filetypes
Matched: [8749]: - ntpath.samefile failed to notice that "a.txt" and "A.TXT" refer to the same
Matched: [193]:         supported by your browser.  Supply a Menu Item title, and enter the
Matched: [194]:         location in the Help File Path slot of the New Help Source dialog.  Use
Matched: [8753]:   dNSName entry, ssl.match_hostname() should use the subject's commonName.
Matched: [195]:         http:// and/or www. to identify external URLs, or download the file and
Matched: [196]:         browse for its path on your machine using the Browse button.
Matched: [97]: # NB compile.c makes sure that the default except clause is last
Matched: [198]:         All users can access the extensive sources of help, including
Matched: [8761]:   filesystems when the source and destination name where the same except
Matched: [8762]:   for the case.
Matched: [200]:         or removed from the Help menu at any time using Configure IDLE.
Matched: [105]: # (But not a mix of the two)
Matched: [8765]:   more than one call to the function when used as a decorator. Initial patch
Matched: [204]:         Backspace deletes char to the left; DEL deletes char to the right.
Matched: [214]:                 Control-l     center window around the insertion point
Matched: [8778]: - Issue #8407: Add signal.pthread_sigmask() function to fetch and/or change the
Matched: [8779]:   signal mask of the calling thread.
Matched: [216]:         paste) may work.  Keybindings are selected in the Configure IDLE
Matched: [221]:         After a block-opening statement, the next line is indented by 4 spaces
Matched: [222]:         (in the Python Shell window by one tab).  After certain keywords
Matched: [8789]: - Issue #11763: don't use difflib in TestCase.assertMultiLineEqual if the
Matched: [223]:         (break, return etc.) the next line is dedented.  In leading
Matched: [224]:         indentation, Backspace deletes up to 4 spaces if they are there.  Tab
Matched: [8796]: - Issue #11005: threading.RLock()._release_save() raises a RuntimeError if the
Matched: [225]:         inserts spaces (in the Python Shell window one tab), number depends on
Matched: [8803]:   release the GIL.  Patch by Charles-François Natali.
Matched: [229]:         See also the indent/dedent region commands in the edit menu.
Matched: [8806]:   the thread implementation.
Matched: [8811]: - Issue #11768: The signal handler of the signal module only calls
Matched: [8812]:   Py_AddPendingCall() for the first signal to fix a deadlock on reentrant or
Matched: [239]:         typed.  If after one of those characters (plus zero or more other
Matched: [8813]:   parallel calls. PyErr_SetInterrupt() writes also into the wake up file.
Matched: [240]:         characters) a tab is typed the ACW will open immediately if a possible
Matched: [8815]: - Issue #11492: fix several issues with header folding in the email package.
Matched: [243]:         If there is only one possible completion for the characters entered, a
Matched: [8820]:   mutating the object instead of just working on a copy.
Matched: [244]:         tab will supply that completion without opening the ACW.
Matched: [246]:         'Show Completions' will force open a completions window, by default the
Matched: [8827]: - Issue #11474: Fix the bug with url2pathname() handling of '/C|/' on Windows.
Matched: [248]:         string, this will contain the files in the current directory.  On a
Matched: [249]:         blank line, it will contain the built-in and user-defined functions and
Matched: [250]:         classes in the current name spaces, plus any modules imported.  If some
Matched: [8837]: - Issue #11830: Remove unnecessary introspection code in the decimal module.
Matched: [251]:         characters have been entered, the ACW will attempt to be more specific.
Matched: [8839]: - Issue #11703: urllib2.geturl() does not return correct url when the original
Matched: [253]:         If string of characters is typed, the ACW selection will jump to the
Matched: [255]:         the longest non-ambiguous match to be entered in the Edit window or
Matched: [8846]:   character in the index of modules.
Matched: [256]:         Shell.  Two tabs in a row will supply the current ACW selection, as
Matched: [8848]: - Issue #11815: Use a light-weight SimpleQueue for the result queue in
Matched: [258]:         selection, and the scroll wheel all operate on the ACW.
Matched: [260]:         "Hidden" attributes can be accessed by typing the beginning of hidden
Matched: [8855]:   iterable of handlers to be added to the root logger. Additional parameter
Matched: [264]:         Completions and the 'Expand Word' facility can save a lot of typing!
Matched: [266]:         Completions are currently limited to those in the namespaces.  Names in
Matched: [8864]:   worker processes: new processes would be spawned while the pool is being
Matched: [268]:         found.  Run the module once with your imports to correct this
Matched: [8867]: - Issue #2650: re.escape() no longer escapes the '_'.
Matched: [270]:         sys.modules, so much can be found by default, e.g. the re module.
Matched: [272]:         If you don't like the ACW popping up unbidden, simply make the delay
Matched: [273]:         longer or disable the extension.  Or another option is the delay could
Matched: [274]:         be set to zero. Another alternative to preventing ACW popups is to
Matched: [8876]:   multipart subparts with an 8-bit CTE into unicode instead of preserving the
Matched: [275]:         disable the call tips extension.
Matched: [8880]:   charset parameter that defaults to utf-8 and is used as the charset for RFC
Matched: [8881]:   2047 encoding when the realname contains non-ASCII characters.
Matched: [293]:         occasionally see uncolorized text.  To change the color
Matched: [294]:         scheme, use the Configure IDLE / Highlighting dialog.
Matched: [8906]: - Issue #11393: Add the new faulthandler module.
Matched: [311]: Other preferences:
Matched: [8908]: - Issue #11618: Fix the timeout logic in threading.Lock.acquire() under Windows.
Matched: [8910]: - Removed the 'strict' argument to email.parser.Parser, which has been
Matched: [314]:         be changed via the Configure IDLE menu option.  Be sure to note that
Matched: [316]:         addition a user can create a custom key set in the Configure IDLE
Matched: [317]:         dialog under the keys tab.
Matched: [321]:         Enter idle -h at the command prompt to get a usage message.
Matched: [8927]:   are now zeroed on creation.  This matches the behaviour specified by the
Matched: [331]:         If there are arguments:
Matched: [333]:            reflects the arguments passed to IDLE itself.
Matched: [8939]:   to match the path to where the source code currently is, not where the code
Matched: [334]:         2. Otherwise, if -c is used, all arguments are placed in
Matched: [8942]: - Issue #8754: Have importlib use the repr of a module name in error messages.
Matched: [336]:         3. Otherwise, if neither -e nor -c is used, the first argument is a
Matched: [8947]: - collections.namedtuple() now adds a _source attribute to the generated
Matched: [337]:            script which is executed with the remaining arguments in
Matched: [8948]:   class.  This make the source more accessible than the outdated
Matched: [338]:            sys.argv[1:...]  and sys.argv[0] set to the script name.  If the
Matched: [8949]:   "verbose" option which prints to stdout but doesn't make the source
Matched: [340]:            session is started; the arguments are still available in sys.argv.
Matched: [344]:         If IDLE is started with the -n command line switch it will run in a
Matched: [345]:         single process and will not create the subprocess which runs the RPC
Matched: [8962]: - Issue #11662: Make urllib and urllib2 ignore redirections if the
Matched: [347]:         the subprocess or the RPC socket interface on your platform.  However,
Matched: [348]:         in this mode user code is not isolated from IDLE itself.  Also, the
Matched: [350]:         your code has been modified, you must reload() the affected modules and
Matched: [351]:         re-import any specific items (e.g. from foo import baz) if the changes
Matched: [352]:         are to take effect.  For these reasons, it is preferable to run IDLE
Matched: [8977]:   unbuffered pipes, such that select() works properly on them.
Matched: [353]:         with the default subprocess if at all possible.
Matched: [8980]:   arguments has the wrong type.  Patch by Nikita Vetoshkin.
Matched: [357]:         IDLE contains an extension facility.  See the beginning of
Matched: [8982]: - Issue #10812: Add some extra posix functions to the os module.
Matched: [358]:         config-extensions.def in the idlelib directory for further information.
Matched: [8987]: - Issue #11243: fix the parameter querying methods of Message to work if
Matched: [8988]:   the headers contain un-encoded non-ASCII data.
Matched: [8991]:   relative to Python2 and the result is now the same as it was in Python2.
Matched: [8994]:   which was a regression relative to Python2.  Unlike Python2, the last line
Matched: [8995]:   of the folded body now ends with a carriage return.
Matched: [8997]: - Issue #11560: shutil.unpack_archive now correctly handles the format
Matched: [9005]: - Issue #11569: use absolute path to the sysctl command in multiprocessing to
Matched: [9006]:   ensure that it will be found regardless of the shell PATH. This ensures
Matched: [9010]:   not installed. Instead, the zipfile.ZIP_STORED compression is used to create
Matched: [9011]:   the ZipFile. Patch by Natalia B. Bidart.
Matched: [9016]: - Issue #11554: Fixed support for Japanese codecs; previously the body output
Matched: [9017]:   encoding was not done if euc-jp or shift-jis was specified as the charset.
Matched: [9019]: - Issue #11407: `TestCase.run` returns the result object used or created.
Matched: [9022]: - Issue #11500: Fixed a bug in the OS X proxy bypass code for fully qualified
Matched: [9023]:   IP addresses in the proxy exception list.
Matched: [9026]:   the "n" as the flag argument and the file exists. The behavior matches
Matched: [9027]:   the documentation and general logic.
Matched: [9029]: - Issue #1162477: Postel Principle adjustment to email date parsing: handle the
Matched: [9033]:   operations when the rounding mode is ROUND_FLOOR.
Matched: [9063]:   to release an unacquired lock, as claimed in the threading documentation.
Matched: [9070]: - Issue #11326: Add the missing connect_ex() implementation for SSL sockets,
Matched: [9075]: - Issue #10755: Add the posix.flistdir() function.  Patch by Ross Lagerwall.
Matched: [9077]: - Issue #4761: Add the ``*at()`` family of functions (openat(), etc.) to the
Grepping: C:/Python34/Lib/idlelib/TODO.txt
Matched: [9087]: - Issue #6064: Add a ``daemon`` keyword argument to the threading.Thread
Matched: [9088]:   and multiprocessing.Process constructors in order to override the
Matched: [9089]:   default behaviour of inheriting the daemonic property from the current
Matched: [9093]:   has arrived and the handler returned successfully.
Matched: [12]:     - fix the stupid bug where you need to step twice
Matched: [9103]: - Issue #10868: Allow usage of the register method of an ABC as a class
Matched: [17]: - insert the initial current directory into sys.path DONE
Matched: [9106]: - Issue #11224: Fixed a regression in tarfile that affected the file-like
Matched: [9108]:   consumption and failures with the stream interface.
Matched: [20]: - command expansion from keywords, module contents, other buffers, etc.
Matched: [9117]:   module called collections.abc, following the pattern used by importlib.abc.
Matched: [29]: - restructure state sensitive code to avoid testing flags all the time
Matched: [9118]:   For backwards compatibility, the names are imported into the collections
Matched: [9128]: - Issue #11089: Fix performance issue limiting the use of ConfigParser()
Matched: [9131]: - Issue #10276: Fix the results of zlib.crc32() and zlib.adler32() on buffers
Matched: [42]:   In other words, select "UserDict.UserDict", hit some magic key and
Matched: [43]:   it loads up UserDict.py and finds the first def or class for UserDict.
Matched: [9137]:   for the names of optional and positional arguments in help messages.
Matched: [53]: - new autoindent after colon even indents when the colon is in a comment!
Matched: [9146]:   given path also specifying their names.
Matched: [57]: - Sometimes for no apparent reason a selection from the cursor to the
Matched: [58]:   end of the command buffer appears, which is hard to get rid of
Matched: [9160]: - PEP 393: the configure option --with-wide-unicode is removed.
Matched: [60]: - The Line/Col in the status bar can be wrong initially in PyShell DONE
Matched: [65]: - should add some primitives for accessing the selection etc.
Matched: [9170]:   os.lchflags() are once again built on systems that support these
Matched: [75]:   either command line style, or Microsoft recent-file
Matched: [9175]:   Python-X.Y.Z-pyX.Y.egg-info file in the lib-dynload directory.
Matched: [9177]: - Do not accidentally include the directory containing sqlite.h twice when
Matched: [82]: appears to be in the contributed section, and the source
Matched: [9181]:   ensure "make install" creates symlinks in --prefix bin for the "-32"
Matched: [85]: In any case, the code is useful for visually navigating
Matched: [9182]:   files in the framework bin directory like the installer does.
Matched: [9196]: - Issue #14409: IDLE now properly executes commands in the Shell window
Matched: [9197]:   when it cannot read the normal config files on startup and
Matched: [9198]:   has to use the built-in default key bindings.
Matched: [9199]:   There was previously a bug in one of the defaults.
Matched: [114]: sys.argv[0] to something decent first (it is normally set to the path of
Matched: [115]: the idle script).
Matched: [118]: other parts of Grail.
Matched: [9220]:   display a message popup and continue rather than crash.  Original patch by
Matched: [127]:     - I'd like support for shift-click extending the selection. There's a
Matched: [128]:       bug now that it doesn't work the first time you try it.
Matched: [9233]: - Issue #12636: IDLE reads the coding cookie when executing a Python script.
Matched: [140]:     - Please use another icon for the tree browser leaf. The small snake
Matched: [9238]: - Issue #12590: IDLE editor window now always displays the first line
Matched: [9239]:   when opening a long file.  With Tk 8.5, the first line was hidden.
Matched: [148]: object in the editor which shows the source of the object, if
Matched: [151]: - Hooks into the guts, like in Emacs.  (Mike Romberg)
Matched: [9248]: - Issue #11718: IDLE's open module dialog couldn't find the __init__.py
Matched: [153]: - Sharing the editor with a remote tutor.  (Martijn Faassen)
Matched: [155]: - Multiple views on the same file.  (Tony J Ibbs)
Matched: [9257]: - Issue #13930: 2to3 is now able to write its converted output files to another
Matched: [9258]:   directory tree as well as copying unchanged files and altering the file
Matched: [161]: - Capture menu events in extensions without changing the IDLE source.
Matched: [9262]: - Issue #13628: python-gdb.py is now able to retrieve more frames in the Python
Matched: [167]: shown together (e.g. class browser and source).  (Albert Brandl)
Matched: [178]: it -- i.e. you can only edit the current command, and the cursor can't
Matched: [179]: escape from the command area.  (Albert Brandl)
Matched: [186]: - Config files still editable outside the preferences dialog.
Matched: [189]: - When you're editing a command in PyShell, and there are only blank
Matched: [9296]:   would be finalized after the reference to its underlying BufferedRWPair's
Matched: [190]: lines below the cursor, hitting Return should ignore or delete those
Matched: [9297]:   writer got cleared by the GC.
Matched: [191]: blank lines rather than deciding you're not on the last line.  (me)
Matched: [194]: dialog with options to give command line arguments, run the debugger,
Matched: [9305]:   Thanks to Suman Saha for finding the bug and providing a patch.
Matched: [197]: - Shouldn't be able to delete part of the prompt (or any text before
Matched: [198]: it) in the PyShell.  (Martijn Faassen)   DONE
Matched: [9310]: - Issue #1172711: Add 'long long' support to the array module.
Matched: [9313]: - Issue #12483: ctypes: Fix a crash when the destruction of a callback
Matched: [9314]:   object triggers the garbage collector.
Matched: [204]: the shell window.  Output of separate runs should all go to the same
Matched: [9319]: - Issue #12764: Fix a crash in ctypes when the name of a Structure field is not
Matched: [209]: - Printing!  Possibly via generation of PDF files which the user must
Matched: [210]: then send to the printer separately.  (Dinu Gherman)  FIRST CUT
Matched: [9327]: - Issue #10309: Define _GNU_SOURCE so that mremap() gets the proper
Matched: [9332]:   objects using the C accelerations.
Matched: [9335]:   objects using the C accelerations.
Matched: [9338]:   to an instance of the class.
Matched: [9346]: - Issue #13447: Add a test file to host regression tests for bugs in the
Matched: [9347]:   scripts found in the Tools directory.
Matched: [9359]: - Issue #13726: Fix the ambiguous -S flag in regrtest. It is -o/--slow for slow
Matched: [9374]: - Issue #13725: Fix regrtest to recognize the documented -d flag.
Matched: [9392]: - Issue #11651: Improve the Makefile test targets to run more of the test suite
Matched: [9394]:   the amount of time needed to run the tests. "make test" and "make quicktest"
Matched: [9395]:   now include some resource-intensive tests, but no longer run the test suite
Matched: [9399]: - Issue #12331: The test suite for the packaging module can now run from an
Matched: [9406]:   with the ``-m`` (or ``--match``) option.  This works with all test cases
Matched: [9407]:   using the unittest module.  This is useful with long test suites
Matched: [9410]: - Issue #12624: It is now possible to fail after the first failure when
Matched: [9411]:   running in verbose mode (``-v`` or ``-W``), by using the ``--failfast``
Matched: [9421]:   as the processor type on some Mac systems.
Matched: [9439]: - Issue #12440: When testing whether some bits in SSLContext.options can be
Matched: [9440]:   reset, check the version of the OpenSSL headers Python was compiled against,
Matched: [9441]:   rather than the runtime version of the OpenSSL library.
Matched: [9443]: - Issue #11512: Add a test suite for the cgitb module. Patch by Robbie Clemons.
Matched: [9445]: - Issue #12497: Install test/data to prevent failures of the various codecmaps
Matched: [9451]: - Issue #12469: Run wakeup and pending signal tests in a subprocess to run the
Matched: [9453]:   handling of the parent process.
Matched: [9457]:   in to the console windowserver (as may be the case under buildbot or ssh).
Matched: [9461]: - Issue #12400: regrtest -W doesn't rerun the tests twice anymore, but captures
Matched: [9462]:   the output and displays it on failure instead. regrtest -v doesn't print the
Matched: [9463]:   error twice anymore if there is only one error.
Matched: [9490]:   when the randomly generated temporary path happened to match the regex.
Matched: [9496]:   pthread_sigmask() to ensure that the SIGALRM signal is received by the main
Matched: [9499]: - Issue #11811: Factor out detection of IPv6 support on the current host
Matched: [9508]:   condition variable cannot be interrupted by a signal (e.g. on Linux, the
Matched: [9513]: - Fix possible "file already exists" error when running the tests in parallel.
Matched: [9519]:   TIMEOUT seconds, dumps the traceback of all threads and exits.
Matched: [9523]: - The email test suite now lives in the Lib/test/test_email package.  The test
Grepping: C:/Python34/Lib/site-packages/README.txt
Matched: [9530]: - New test_crashers added to exercise the scripts in the Lib/test/crashers
Matched: [9531]:   directory and confirm they fail as expected
Matched: [2]: here.  Read the source for site.py for more details.
Grepping: C:/Python34/Tools/pynche/X/xlicense.txt
Matched: [9533]: - Issue #11578: added test for the timeit module.  Patch by Michael Henry.
Matched: [6]: a copy of this software and associated documentation files (the
Matched: [9540]: - Issue #11548: Improve test coverage of the shutil module. Patch by
Matched: [7]: "Software"), to deal in the Software without restriction, including
Grepping: C:/Python34/Tools/pynche/X/rgb.txt
Matched: [8]: without limitation the rights to use, copy, modify, merge, publish,
Matched: [9549]:   false positive if the last directory in the path is inaccessible.
Matched: [9]: distribute, sublicense, and/or sell copies of the Software, and to
Matched: [9551]: - Issue #11223: Fix test_threadsignals to fail, not hang, when the
Matched: [10]: permit persons to whom the Software is furnished to do so, subject to
Matched: [11]: the following conditions:
Matched: [14]: included in all copies or substantial portions of the Software.
Matched: [24]: Except as contained in this notice, the name of The Open Group shall
Matched: [25]: not be used in advertising or otherwise to promote the sale, use or
Matched: [9573]:   different than "strict" anymore. The caller was unable to compute the
Matched: [26]: other dealings in this Software without prior written authorization
Matched: [9574]:   size of the output buffer: it depends on the error handler.
Matched: [9577]:   and PyUnicode_EncodeLocale() functions to the C API to decode/encode from/to
Matched: [9578]:   the current locale encoding.
Matched: [9582]: - Issue #11246: Fix PyUnicode_FromFormat("%V") to decode the byte string from
Matched: [9590]:   implementations for the getter and setter of a ``__dict__`` descriptor of C
Matched: [9609]: - Issue #12380: PyArg_ParseTuple now accepts a bytearray for the 'c' format.
Matched: [9614]: - Issue #23006: Improve the documentation and indexing of dict.__missing__.
Matched: [9615]:   Add an entry in the language datamodel special methods section.
Matched: [9616]:   Revise and index its discussion in the stdtypes mapping/dict section.
Matched: [9628]: - Issue #8982: Improve the documentation for the argparse Namespace object.
Matched: [9631]:   their children.
Matched: [9643]: - Issue #9021: Add an introduction to the copy module documentation.
Matched: [9645]: - Issue #6005: Examples in the socket library documentation use sendall, where
Matched: [9648]: - Issue #12798: Updated the mimetypes documentation.
Matched: [9650]: - Issue #12949: Document the kwonlyargcount argument for the PyCode_New
Matched: [9653]: - Issue #13513: Fix io.IOBase documentation to correctly link to the
Matched: [9654]:   io.IOBase.readline method instead of the readline module.
Matched: [9657]:   functions and the most commonly needed arguments to Popen.
Matched: [9664]: **(For information about older versions, consult the HISTORY file.)**
Grepping: C:/Python34/tcl/tix8.4.3/pref/WmDefault.txt
Matched: [1]: One of the bad things about Tk/Tkinter is that it does not pick up
Matched: [2]: the current color and font scheme from the prevailing CDE/KDE/GNOME/Windows 
Matched: [5]: One of the good things about Tk/Tkinter is that it is not tied to one
Matched: [6]: particular widget set so it could pick up the current color and font scheme 
Matched: [7]: from the prevailing CDE/KDE/GNOME/Windows window manager scheme.
Matched: [9]: The WmDefault package is for making Tk/Tkinter applications use the 
Matched: [10]: prevailing CDE/KDE/GNOME/Windows scheme. It tries to find the files
Matched: [11]: and/or settings that the current window manager is using, and then
Matched: [12]: sets the Tk options database accordingly (plus a few other things as well). 
Matched: [18]: Download the latest version of wm_default from http://tix.sourceforge.net
Matched: [19]: either as a part of the standard Tix distribution, or as a part of the
Matched: [28]: WmDefault is the default Tix scheme, so there is nothing else to do.
Matched: [30]: For Tk applications, it should be sufficent at the beginning of a wish
Matched: [39]: 1) find the files and/or settings (::wm_default::setup).
Matched: [41]:  still barely supported for GNOME because of the difficulty
Matched: [43]:  setup takes one optional argument: wm, the name of the window manager
Matched: [46]: 2) Setting the Tk options database (::wm_default::addoptions).
Matched: [47]: You can override the settings in 1) by adding your values to the call
Matched: [51]: You can examine the settings with
Matched: [53]: which returns a Tcl array of the current settings, and
Matched: [55]: which returns a string of the current settings, one value-pair per line.
Matched: [57]: There are a number of assumptions built into the heuristics of addoptions,
Matched: [65]: with Python 2.1  and above, WmDefault is the default Tix scheme, 
Matched: [66]: so there is nothing else you need to do.
Matched: [68]: The easiest way to install WmDefault for Tkinter is to copy the WmDefault.*
Matched: [70]: PYTHONPATH. Then the following should work:
Matched: [83]: Here is a list of all the settings controlled by WmDefault:
Matched: [125]: or change the defines in generic/tixInit.c 
Matched: [130]: 2) Edit the installed lib/8.1/Tix.tcl and change the -configspec 
Matched: [131]: in tixClass tixAppContext with the following
Matched: [135]: 3) Copy the files WmDefault.* AND pkgIndex.tcl to the installed
Matched: [138]: 4) Make or edit the file lib/tix8.1/pkgIndex.tcl and add the lines
Grepping: C:/Python34/Lib/test/exception_hierarchy.txt
Grepping: C:/Python34/Lib/test/floating_points.txt
Matched: [2]: # They are based on the TCL test suite (tests/expr.test), which is based on
Matched: [6]: # ACM Transactions on Mathematical Software 27:2 (March 2001), pp. 119-140.
Grepping: C:/Python34/Lib/test/cmath_testcases.txt
Matched: [3]: -- Each line takes the form:
Matched: [9]: --   <testid> is a short name identifying the test,
Matched: [11]: --   <function> is the function to be tested (exp, cos, asinh, ...),
Matched: [16]: --   <output_value> is the expected (ideal) output value, again
Matched: [19]: --   <flags> is a list of the floating-point flags required by C99
Matched: [24]: --     mathematically infinite result.
Matched: [27]: --     real or imaginary part is too large to fit in the usual range
Matched: [32]: --   ignore-real-sign : indicates that the sign of the real part of
Matched: [33]: --     the result is unspecified; if the real part of the result is
Matched: [34]: --     given as inf, then both -inf and inf should be accepted as
Matched: [37]: --   ignore-imag-sign : indicates that the sign of the imaginary part
Matched: [38]: --     of the result is unspecified.
Matched: [46]: -- The majority of the values below were computed with the help of
Matched: [47]: -- version 2.3 of the MPFR library for multiple-precision
Matched: [52]: -- the corresponding nearest IEEE 754 double-precision value.  See the
Matched: [53]: -- MPFR homepage at http://www.mpfr.org for more information about the
Matched: [1027]: # Another value designed to test a corner case of Python's strtod code.
Grepping: C:/Python34/Lib/test/ieee754.txt
Matched: [11]: what you expect. We treat two floats as equal if the difference between them
Matched: [23]: from the strings 'inf' and 'nan'.
Matched: [67]: NaNs are never equal to another number, even itself
Grepping: C:/Python34/Lib/test/mailcap.txt
Matched: [160]: Neither pi nor tan are exact, but you can assume that tan(pi/2) is a large value
Grepping: C:/Python34/Lib/test/math_testcases.txt
Matched: [3]: -- Each line takes the form:
Matched: [9]: --   <testid> is a short name identifying the test,
Matched: [11]: --   <function> is the function to be tested (exp, cos, asinh, ...),
Matched: [15]: --   <output_value> is the expected (ideal) output value, again
Matched: [18]: --   <flags> is a list of the floating-point flags required by C99
Matched: [23]: --     mathematically infinite result.
Matched: [26]: --     is too large to fit in the usual range of an IEEE 754 double.
Matched: [30]: --   ignore-sign : indicates that the sign of the result is
Matched: [31]: --     unspecified; e.g., if the result is given as inf,
Matched: [32]: --     then both -inf and inf should be accepted as correct.
Matched: [40]: -- Many of the values below were computed with the help of
Matched: [41]: -- version 2.4 of the MPFR library for multiple-precision
Matched: [46]: -- the corresponding nearest IEEE 754 double-precision value.  See the
Matched: [47]: -- MPFR homepage at http://www.mpfr.org for more information about the
Matched: [87]: -- Issue 8986: inputs x with exp(-x*x) near the underflow threshold
Matched: [149]: -- Issue 8986: inputs x with exp(-x*x) near the underflow threshold
Matched: [170]: -- lgamma: log of absolute value of the gamma function --
Matched: [1197]: -- values near the unit circle
Grepping: C:/Python34/Lib/test/formatfloat_testcases.txt
Matched: [2]: -- has the given number of places after the point;  zeros are added if
Matched: [61]: -- makes a difference when the precision is 0.
Grepping: C:/Python34/Lib/idlelib/idle_test/README.txt
Matched: [85]: -- always have exactly the number of places after the point that were
Matched: [8]: 'xyz' lower case, and possibly shorten it.) Each file should start with the
Matched: [9]: something like the following template, with the blanks after after '.' and 'as',
Matched: [95]: -- precision 0.  no decimal point in the output
Matched: [25]: Once test_xyy is written, the following should go at the end of xyy.py,
Matched: [1365]: -- values near the unit circle
Matched: [37]: test is a gui test if it creates a Tk root or master object either directly
Matched: [38]: or indirectly by instantiating a tkinter or idle class. For the benefit of
Matched: [39]: test processes that either have no graphical environment available or are not
Matched: [43]: To avoid interfering with other gui tests, all gui objects must be destroyed
Matched: [44]: and deleted by the end of the test.  If a widget, such as a Tk root, is created
Matched: [45]: in a setUpX function, destroy it in the corresponding tearDownX.  For module
Matched: [46]: and class attributes, also delete the widget.
Matched: [59]: Support.requires('gui') causes the test(s) it guards to be skipped if any of
Matched: [62]:    enabling the "gui" resource with the "-u" command line option.
Matched: [64]:    interact with the graphical environment.
Matched: [217]: -- precision 0 doesn't make a lot of sense for the 'g' code (what does
Matched: [68]:  - test.support.use_resources has been set by something other than
Matched: [73]: tkinter (tk) variables and messageboxes can do this by using the mock classes in
Matched: [74]: idle_test/mock_tk.py. There is also a mock text that will handle some uses of the
Matched: [80]: Assume that xyz.py and test_xyz.py end with the "if __name__" statements given
Matched: [367]: -- inputs that cause problems for the standard reflection formula,
Matched: [81]: above. In Idle, pressing F5 in an editor window with either loaded will run all
Matched: [82]: tests in the test_xyz file with the version of Python running Idle.  The test
Matched: [83]: report and any tracebacks will appear in the Shell window. The options in these
Matched: [85]: importing) either of the files during development: verbosity=2 lists all test
Matched: [86]: methods in the file; exit=False avoids a spurious sys.exit traceback that would
Matched: [87]: otherwise occur when running in Idle. The following command lines also run
Matched: [91]: python -m idlelib.xyz  # With the capitalization of the xyz module
Matched: [94]: To run all idle_test/test_*.py tests, either interactively
Matched: [95]: ('>>>', with unittest imported) or from a command line, use one of the
Matched: [96]: following. (Notes: in 2.7, 'test ' (with the space) is 'test.regrtest ';
Matched: [323]: -- least one digit after the point, or an exponent.
Matched: [105]: which is also imported into test.test_idle. Normally, neither file should be
Matched: [107]: unittest indirectly through regrtest. The same happens when the entire test
Matched: [109]: to stay green. Idle tests must not disturb the environment in a way that
Matched: [110]: makes other tests fail (issue 18081).
Matched: [112]: To run an individual Testcase or test method, extend the dotted name given to
Matched: [113]: unittest on the command line.
Matched: [438]: -- other values transferred from testLog1p in test_math
Matched: [1560]: -- large arguments, and the accuracy of these complex functions
Matched: [497]: -- the formula expm1(x) = 2 * sinh(x/2) * exp(x/2) doesn't work so
Matched: [509]: -- the next test (expm10302) is disabled because it causes failure on
Grepping: C:/Python34/Lib/test/test_doctest.txt
Matched: [9]: We can make this fail by disabling the blank-line feature.
Grepping: C:/Python34/Lib/test/test_doctest3.txt
Matched: [2224]: -- For cmath.rect, we can use the same testcase syntax as for the
Matched: [2225]: -- complex -> complex functions above, but here the input arguments
Matched: [2226]: -- should be interpreted as a pair of floating-point numbers rather
Matched: [2227]: -- than the real and imaginary parts of a complex number.
Matched: [2229]: -- Here are the 'spirit of C99' rules for rect.  First, the short
Matched: [2234]: --    rect(nan, t) = exp(nan + it), except that in rect(nan, +-0) the
Matched: [2235]: --      sign of the imaginary part is unspecified.
Matched: [2237]: -- and now the long version:
Matched: [2242]: --   rect(+0, inf) returns +- 0 +- i0, where the signs of the real and
Matched: [2244]: --   rect(x, inf) returns NaN + i NaN and raises the "invalid"
Matched: [2246]: --   rect(inf, inf) returns +-inf + i NaN and raises the "invalid"
Matched: [2247]: --     floating-point exception (where the sign of the real part of the
Matched: [2251]: --   rect(inf, NaN) returns +-inf+i NaN, where the sign of the real part
Matched: [2252]: --     of the result is unspecified.
Matched: [2255]: --   rect(NaN, 0) returns NaN +- i0, where the sign of the imaginary
Matched: [2259]: --   rect(+0, NaN) return +-0 +- i0, where the signs of the real and
Grepping: C:/Python34/Lib/test/test_doctest4.txt
Matched: [4]: In order to get this test to pass, we have to manually specify the
Matched: [2321]: -- For cmath.polar, we can use the same testcase syntax as for the
Matched: [2322]: -- complex -> complex functions above, but here the output arguments
Matched: [2323]: -- should be interpreted as a pair of floating-point numbers rather
Matched: [2324]: -- than the real and imaginary parts of a complex number.
Matched: [2326]: -- Annex G of the C99 standard describes fully both the real and
Matched: [2328]: -- are defined in terms of the functions hypot and atan2).
Grepping: C:/Python34/Lib/test/test_doctest2.txt
Grepping: C:/Python34/Lib/site-packages/pip-6.0.8.dist-info/top_level.txt
Matched: [13]: This doesn't cause a problem in the tect surrounding the examples, but
Grepping: C:/Python34/Lib/site-packages/pip-6.0.8.dist-info/entry_points.txt
Grepping: C:/Python34/Lib/site-packages/setuptools-12.0.5.dist-info/dependency_links.txt
Grepping: C:/Python34/Lib/tkinter/test/README.txt
Matched: [7]:     New tests should always use only one Tk window at once, like all the
Matched: [8]:     current tests do. This means that you have to destroy the current window
Matched: [9]:     before creating another one, and clean up after the test. The motivation
Grepping: C:/Python34/Lib/test/cjkencodings/big5-utf8.txt
Grepping: C:/Python34/Lib/site-packages/setuptools-12.0.5.dist-info/top_level.txt
Grepping: C:/Python34/Lib/site-packages/setuptools-12.0.5.dist-info/entry_points.txt
Grepping: C:/Python34/Lib/test/cjkencodings/big5.txt
Grepping: C:/Python34/Lib/test/cjkencodings/cp949-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/big5hkscs-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/euc_jisx0213-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/cp949.txt
Grepping: C:/Python34/Lib/test/data/README.txt
Matched: [2]: created by some tests, in particular, the test_codecmaps_* tests.
Grepping: C:/Python34/Lib/test/cjkencodings/euc_jp-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/euc_jisx0213.txt
Grepping: C:/Python34/Lib/test/cjkencodings/euc_kr-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/gb18030-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/euc_kr.txt
Grepping: C:/Python34/Lib/test/cjkencodings/big5hkscs.txt
Grepping: C:/Python34/Lib/test/cjkencodings/gb2312-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/euc_jp.txt
Grepping: C:/Python34/Lib/test/cjkencodings/gb18030.txt
Grepping: C:/Python34/Lib/test/cjkencodings/gbk.txt
Grepping: C:/Python34/Lib/test/cjkencodings/gbk-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/gb2312.txt
Grepping: C:/Python34/Lib/test/cjkencodings/iso2022_jp-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/johab-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/hz-utf8.txt
Grepping: C:/Python34/Lib/test/crashers/README.txt
Matched: [1]: This directory only contains tests for outstanding bugs that cause the
Matched: [3]: sometimes it may not be easy to fix the underlying cause and the bug is deemed
Matched: [4]: too obscure to invest the effort.
Matched: [6]: Each test should fail when run from the command line:
Matched: [10]: Put as much info into a docstring or comments to help determine the cause of the
Matched: [12]: note if the cause is system or environment dependent and what the variables are.
Grepping: C:/Python34/Lib/test/cjkencodings/shift_jis-utf8.txt
Matched: [14]: Once the crash is fixed, the test case should be moved into an appropriate test
Matched: [15]: (even if it was originally from the test suite).  This ensures the regression
Matched: [18]: Also see Lib/test_crashers.py which exercises the crashers in this directory.
Matched: [19]: In particular, make sure to add any new infinite loop crashers to the black
Matched: [20]: list so it doesn't try to run them.
Grepping: C:/Python34/Lib/test/cjkencodings/hz.txt
Grepping: C:/Python34/Lib/test/cjkencodings/iso2022_kr-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/shift_jisx0213-utf8.txt
Grepping: C:/Python34/Lib/test/cjkencodings/johab.txt
Grepping: C:/Python34/Lib/test/cjkencodings/iso2022_jp.txt
Grepping: C:/Python34/Lib/test/cjkencodings/iso2022_kr.txt
Grepping: C:/Python34/Lib/test/cjkencodings/shift_jis.txt
Grepping: C:/Python34/Lib/test/cjkencodings/shift_jisx0213.txt
Grepping: C:/Python34/Lib/test/leakers/README.txt
Grepping: C:/Python34/Lib/test/sndhdrdata/README.txt
Matched: [2]: The idea is that you can import these modules while in the interpreter
Matched: [1]: Sound file samples used by Lib/test/test_sndhdr.py and generated using the
Matched: [3]: and call the leak function repeatedly.  This will only be helpful if
Matched: [4]: the interpreter was built in debug mode.  If the total ref count
Matched: [7]: Sound file samples used by Lib/test/test_sndhdr.py and generated using the
Matched: [5]: doesn't increase, the bug has been fixed and the file should be removed
Matched: [6]: from the repository.
Matched: [9]: to define the leak function like:
Matched: [13]:         # this is the function that leaks, but also creates cycles
Matched: [29]: Once the leak is fixed, the test case should be moved into an appropriate
Matched: [30]: test (even if it was originally from the test suite).  This ensures the
Grepping: C:/Python34/Lib/lib2to3/tests/data/README.txt
Grepping: C:/Python34/Lib/test/tokenize_tests-utf8-coding-cookie-and-no-utf8-bom-sig.txt
Matched: [2]: # IMPORTANT: unlike the other test_tokenize-*.txt files, this file
Matched: [3]: # does NOT have the utf-8 BOM signature '\xef\xbb\xbf' at the start
Grepping: C:/Python34/Lib/test/tokenize_tests-no-coding-cookie-and-utf8-bom-sig-only.txt
Matched: [1]: ﻿# IMPORTANT: this file has the utf-8 BOM signature '\xef\xbb\xbf' 
Matched: [2]: # at the start of it.  Make sure this is preserved if any changes
Grepping: C:/Python34/Lib/test/tokenize_tests-utf8-coding-cookie-and-utf8-bom-sig.txt
Matched: [2]: # IMPORTANT: this file has the utf-8 BOM signature '\xef\xbb\xbf' 
Matched: [3]: # at the start of it.  Make sure this is preserved if any changes
Grepping: C:/Python34/Lib/test/tokenize_tests-latin1-coding-cookie-and-utf8-bom-sig.txt
Matched: [2]: # IMPORTANT: this file has the utf-8 BOM signature '\xef\xbb\xbf' 
Matched: [3]: # at the start of it.  Make sure this is preserved if any changes
Matched: [4]: # are made!  Also note that the coding cookie above conflicts with
Matched: [5]: # the presense of a utf-8 BOM signature -- this is intended.
Grepping: C:/Python34/Lib/test/tokenize_tests.txt
Matched: [1]: # Tests for the 'tokenize' module.
Grepping: C:/Python34/Lib/test/test_email/data/msg_01.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_03.txt
Matched: [82]: the 'lazy' dog.
Matched: [84]: y = '\nThe "quick"\nbrown fox\njumps over\nthe \'lazy\' dog.\n'
Matched: [89]: the 'lazy' dog.
Matched: [95]: the 'lazy' dog.\n\
Matched: [101]: the \'lazy\' dog.\n\
Grepping: C:/Python34/Lib/test/test_email/data/msg_04.txt
Matched: [8]: Message-ID: <15261.36209.358846.118674@anthem.python.org>
Grepping: C:/Python34/Lib/test/test_email/data/msg_05.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_06.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_02.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_07.txt
Matched: [13]: Content-description: Masthead (Ppp digest, Vol 1 #2)
Matched: [18]: To subscribe or unsubscribe via the World Wide Web, visit
Matched: [23]: You can reach the person managing the list at
Matched: [11]: Hi there,
Matched: [13]: This is the dingus fish.
Grepping: C:/Python34/Lib/test/test_email/data/msg_08.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_10.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_12.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_09.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_11.txt
Matched: [7]: Here is the body of the message.
Grepping: C:/Python34/Lib/test/test_email/data/msg_12a.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_14.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_17.txt
Matched: [8]: Hi there,
Matched: [10]: This is the dingus fish.
Grepping: C:/Python34/Lib/test/test_email/data/msg_16.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_15.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_13.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_18.txt
Matched: [38]: This report relates to a message you sent with the following header fields:
Matched: [20]: Hi there,
Matched: [22]: This is the dingus fish.
Matched: [46]: Your message cannot be delivered to the following recipients:
Matched: [70]: Received: from panther.noc.ucla.edu by cougar.noc.ucla.edu
Matched: [76]:  by panther.noc.ucla.edu (8.9.1a/8.9.1) with ESMTP id UAA09793 for
Grepping: C:/Python34/Lib/test/test_email/data/msg_20.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_19.txt
Matched: [4]: To subscribe or unsubscribe via the World Wide Web, visit
Matched: [9]: You can reach the person managing the list at
Grepping: C:/Python34/Lib/test/test_email/data/msg_23.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_24.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_21.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_26.txt
Matched: [4]: From: Father Time <father.time@xcar.wooster.local>
Grepping: C:/Python34/Lib/test/test_email/data/msg_22.txt
Matched: [7]: Message-ID: <6df65d354b.father.time@rpc.wooster.local>
Grepping: C:/Python34/Lib/test/test_email/data/msg_25.txt
Matched: [16]: You either require a newer version of your software which supports MIME, or
Matched: [17]: a separate MIME decoding utility.  Alternatively, ask the sender of this
Matched: [76]: Received: from www.linux.org.uk (parcelfarce.linux.theplanet.co.uk [195.92.249.252])
Grepping: C:/Python34/Lib/test/test_email/data/msg_29.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_30.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_27.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_31.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_28.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_33.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_34.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_32.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_35.txt
Matched: [4]: counter to RFC 2822, there's no separating newline here
Grepping: C:/Python34/Lib/test/test_email/data/msg_37.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_39.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_40.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_36.txt
Matched: [13]: Content-Type: Multipart/Alternative; Boundary="OtherAccess"
Matched: [15]: --OtherAccess
Matched: [26]: --OtherAccess
Matched: [37]: --OtherAccess--
Grepping: C:/Python34/Lib/test/test_email/data/msg_38.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_42.txt
Grepping: C:/Python34/Lib/test/test_email/data/msg_41.txt
Matched: [19]: Unlike the test test_nested-multiples-with-internal-boundary, this
Matched: [20]: piece of text not only contains the outer boundary tags 
Matched: [24]: but puts them at the start of a line! And, to be even nastier, it
Matched: [35]: a case of this in the wild, but I've seen *similar* things.
Grepping: C:/Python34/Lib/test/test_email/data/msg_43.txt
Matched: [27]: was blocked by our Spam Firewall. The email you sent with the following subject has NOT BEEN DELIVERED:
Matched: [31]: An attachment in that mail was of a file type that the Spam Firewall is set to block.
Grepping: C:/Python34/Lib/test/test_email/data/msg_45.txt
Matched: [14]: X-Long-Line: Another really long line contains a lot of text and thus has to be rewrapped because it is another
Matched: [18]: This is the signed contents.
Grepping: C:/Python34/Lib/test/test_email/data/msg_44.txt
Matched: [8]: Message-ID: <15261.36209.358846.118674@anthem.python.org>
Grepping: C:/Python34/Lib/test/test_email/data/msg_46.txt
Grep Results: 
C:/Python34/LICENSE.txt
***********************
[4] Python was created in the early 1990s by Guido van Rossum at Stichting
[5] Mathematisch Centrum (CWI, see http://www.cwi.nl) in the Netherlands
[7] principal author, although it includes many contributions from others.
[9] In 1995, Guido continued his work on Python at the Corporation for
[11] in Reston, Virginia where he released several versions of the
[14] In May 2000, Guido and the Python core development team moved to
[15] BeOpen.com to form the BeOpen PythonLabs team.  In October of the same
[16] year, the PythonLabs team moved to Digital Creations (now Zope
[17] Corporation, see http://www.zope.com).  In 2001, the Python Software
[21] the PSF.
[24] the Open Source Definition).  Historically, most, but not all, Python
[25] releases have also been GPL-compatible; the table below summarizes
[26] the various releases.
[46]     the GPL.  All Python licenses, unlike the GPL, let you distribute
[49]     other software that is released under the GPL; the others don't.
[54]     is "not incompatible" with the GPL.
[56] Thanks to the many outside volunteers who have worked under Guido's
[57] direction to make these releases possible.
[66] 1. This LICENSE AGREEMENT is between the Python Software Foundation
[67] ("PSF"), and the Individual or Organization ("Licensee") accessing and
[68] otherwise using this software ("Python") in source or binary form and
[71] 2. Subject to the terms and conditions of this License Agreement, PSF hereby
[74] distribute, and otherwise use Python alone or in any derivative version,
[80] 3. In the event Licensee prepares a derivative work that is based on
[81] or incorporates Python or any part thereof, and wants to make
[82] the derivative work available to others as provided herein, then
[84] the changes made to Python.
[107] 8. By copying, installing or otherwise using Python, Licensee
[108] agrees to be bound by the terms and conditions of this License
[118] office at 160 Saratoga Avenue, Santa Clara, CA 95051, and the
[119] Individual or Organization ("Licensee") accessing and otherwise using
[121] documentation ("the Software").
[123] 2. Subject to the terms and conditions of this BeOpen Python License
[127] otherwise use the Software alone or in any derivative version,
[128] provided, however, that the BeOpen Python License is retained in the
[131] 3. BeOpen is making the Software available to Licensee on an "AS IS"
[147] respects by the law of the State of California, excluding conflict of
[153] third party.  As an exception, the "BeOpen Python" logos available at
[154] http://www.pythonlabs.com/logos.html may be used according to the
[157] 7. By copying, installing or otherwise using the software, Licensee
[158] agrees to be bound by the terms and conditions of this License
[165] 1. This LICENSE AGREEMENT is between the Corporation for National
[167] Reston, VA 20191 ("CNRI"), and the Individual or Organization
[168] ("Licensee") accessing and otherwise using Python 1.6.1 software in
[171] 2. Subject to the terms and conditions of this License Agreement, CNRI
[174] prepare derivative works, distribute, and otherwise use Python 1.6.1
[180] Agreement, Licensee may substitute the following text (omitting the
[181] quotes): "Python 1.6.1 is made available subject to the terms and
[182] conditions in CNRI's License Agreement.  This Agreement together with
[183] Python 1.6.1 may be located on the Internet using the following
[185] Agreement may also be obtained from a proxy server on the Internet
[186] using the following URL: http://hdl.handle.net/1895.22/1013".
[188] 3. In the event Licensee prepares a derivative work that is based on
[189] or incorporates Python 1.6.1 or any part thereof, and wants to make
[190] the derivative work available to others as provided herein, then
[192] the changes made to Python 1.6.1.
[209] 7. This License Agreement shall be governed by the federal
[210] intellectual property law of the United States, including without
[211] limitation the federal copyright law, and, to the extent such
[212] U.S. federal law does not apply, by the law of the Commonwealth of
[214] Notwithstanding the foregoing, with regard to derivative works based
[216] previously distributed under the GNU General Public License (GPL), the
[217] law of the Commonwealth of Virginia shall govern this License
[226] 8. By clicking on the "ACCEPT" button where indicated, or by copying,
[227] installing or otherwise using Python 1.6.1, Licensee agrees to be
[228] bound by the terms and conditions of this License Agreement.
[236] Copyright (c) 1991 - 1995, Stichting Mathematisch Centrum Amsterdam,
[237] The Netherlands.  All rights reserved.
[241] provided that the above copyright notice appear in all copies and that
[243] supporting documentation, and that the name of Stichting Mathematisch
[245] distribution of the software without specific, written prior
[262] includes the following files:
[268] If you further distribute programs that include the Microsoft
[269] Distributable Code, you must comply with the restrictions on
[271] distributors and external end users to agree to terms that protect the
[273] requirements for the Distributable Code. See Microsoft's documentation
[277] Redistribution of the Windows binary build of the Python interpreter
[286] - distribute Microsoft's Distributable Code to run on a platform other
[293] These restrictions apply only to the Microsoft Distributable Code as
[294] defined above, not to Python itself or any programs running on the
[295] Python interpreter. The redistribution of the Python interpreter and
[296] libraries is governed by the Python Software License included with this
[297] file, or by other licenses as marked.
[300] This copy of Python includes a copy of bzip2, which is licensed under the following terms:
[305] This program, "bzip2", the associated library "libbzip2", and all
[310] modification, are permitted provided that the following conditions
[313] 1. Redistributions of source code must retain the above copyright
[314]    notice, this list of conditions and the following disclaimer.
[317]    not claim that you wrote the original software.  If you use this 
[318]    software in a product, an acknowledgment in the product 
[322]    not be misrepresented as being the original software.
[324] 4. The name of the author may not be used to endorse or promote 
[345] This copy of Python includes a copy of openssl, which is licensed under the following terms:
[351]   The OpenSSL toolkit stays under a dual license, i.e. both the conditions of
[352]   the OpenSSL License and the original SSLeay license apply to the toolkit.
[353]   See below for the actual license texts. Actually both licenses are BSD-style
[364]  * modification, are permitted provided that the following conditions
[367]  * 1. Redistributions of source code must retain the above copyright
[368]  *    notice, this list of conditions and the following disclaimer. 
[370]  * 2. Redistributions in binary form must reproduce the above copyright
[371]  *    notice, this list of conditions and the following disclaimer in
[372]  *    the documentation and/or other materials provided with the
[376]  *    software must display the following acknowledgment:
[377]  *    "This product includes software developed by the OpenSSL Project
[378]  *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
[386]  *    nor may "OpenSSL" appear in their names without prior written
[387]  *    permission of the OpenSSL Project.
[389]  * 6. Redistributions of any form whatsoever must retain the following
[391]  *    "This product includes software developed by the OpenSSL Project
[392]  *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
[425]  * the following conditions are aheared to.  The following conditions
[426]  * apply to all code found in this distribution, be it the RC4, RSA,
[427]  * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
[428]  * included with this distribution is covered by the same copyright terms
[429]  * except that the holder is Tim Hudson (tjh@cryptsoft.com).
[432]  * the code are not to be removed.
[434]  * as the author of the parts of the library used.
[435]  * This can be in the form of a textual message at program startup or
[436]  * in documentation (online or textual) provided with the package.
[439]  * modification, are permitted provided that the following conditions
[441]  * 1. Redistributions of source code must retain the copyright
[442]  *    notice, this list of conditions and the following disclaimer.
[443]  * 2. Redistributions in binary form must reproduce the above copyright
[444]  *    notice, this list of conditions and the following disclaimer in the
[445]  *    documentation and/or other materials provided with the distribution.
[447]  *    must display the following acknowledgement:
[450]  *    The word 'cryptographic' can be left out if the rouines from the library
[452]  * 4. If you include any Windows specific code (or a derivative thereof) from 
[453]  *    the apps directory (application code) you must include an acknowledgement:
[470]  * copied and put under another distribution licence
[471]  * [including the GNU Public Licence.]
[475] This copy of Python includes a copy of Tcl, which is licensed under the following terms:
[477] This software is copyrighted by the Regents of the University of
[479] Corporation and other parties.  The following terms apply to all files
[480] associated with the software unless explicitly disclaimed in
[487] license, or royalty fee is required for any of the authorized uses.
[488] Modifications to this software may be copyrighted by their authors
[489] and need not follow the licensing terms described here, provided that
[490] the new terms are clearly indicated on the first page of each file where
[491] they apply.
[506] GOVERNMENT USE: If you are acquiring this software on behalf of the
[507] U.S. government, the Government shall have only "Restricted Rights"
[508] in the software and related documentation as defined in the Federal 
[510] are acquiring the software on behalf of the Department of Defense, the
[511] software shall be classified as "Commercial Computer Software" and the
[513] 252.227-7014 (b) (3) of DFARs.  Notwithstanding the foregoing, the
[514] authors grant the U.S. Government and others acting in its behalf
[515] permission to use and distribute the software in accordance with the
[518] This copy of Python includes a copy of Tk, which is licensed under the following terms:
[520] This software is copyrighted by the Regents of the University of
[522] Corporation, Apple Inc. and other parties.  The following terms apply to
[523] all files associated with the software unless explicitly disclaimed in
[530] license, or royalty fee is required for any of the authorized uses.
[531] Modifications to this software may be copyrighted by their authors
[532] and need not follow the licensing terms described here, provided that
[533] the new terms are clearly indicated on the first page of each file where
[534] they apply.
[549] GOVERNMENT USE: If you are acquiring this software on behalf of the
[550] U.S. government, the Government shall have only "Restricted Rights"
[551] in the software and related documentation as defined in the Federal
[553] are acquiring the software on behalf of the Department of Defense, the
[554] software shall be classified as "Commercial Computer Software" and the
[556] 252.227-7013 (b) (3) of DFARs.  Notwithstanding the foregoing, the
[557] authors grant the U.S. Government and others acting in its behalf
[558] permission to use and distribute the software in accordance with the
[561] This copy of Python includes a copy of Tix, which is licensed under the following terms:
[567] This software is copyrighted by the above entities
[568] and other parties.  The following terms apply to all files associated
[569] with the software unless explicitly disclaimed in individual files.
[575] license, or royalty fee is required for any of the authorized uses.
[576] Modifications to this software may be copyrighted by their authors
[577] and need not follow the licensing terms described here, provided that
[578] the new terms are clearly indicated on the first page of each file where
[579] they apply.
[594] GOVERNMENT USE: If you are acquiring this software on behalf of the
[595] U.S. government, the Government shall have only "Restricted Rights"
[596] in the software and related documentation as defined in the Federal 
[598] are acquiring the software on behalf of the Department of Defense, the
[599] software shall be classified as "Commercial Computer Software" and the
[601] 252.227-7013 (c) (1) of DFARs.  Notwithstanding the foregoing, the
[602] authors grant the U.S. Government and others acting in its behalf
[603] permission to use and distribute the software in accordance with the
[608] Parts of this software are based on the Tcl/Tk software copyrighted by
[609] the Regents of the University of California, Sun Microsystems, Inc.,
[610] and other parties. The original license terms of the Tcl/Tk software
[611] distribution is included in the file docs/license.tcltk.
[613] Parts of this software are based on the HTML Library software
[615] the HTML Library software distribution is included in the file

C:/Python34/Lib/distutils/README.txt
************************************
[1] This directory contains the Distutils package.

C:/Python34/Lib/idlelib/CREDITS.txt
***********************************
[1] Guido van Rossum, as well as being the creator of the Python language, is the
[2] original creator of IDLE.  Other contributors prior to Version 0.8 include
[5] IDLE's recent development was carried out in the SF IDLEfork project. The
[10] Schneider-Kamp and Nicholas Riley.  David wrote the first version of the RPC
[12] the RPC code and Remote Debugger currently integrated in IDLE.  Bruce Sherwood
[15] Besides David and Guido, the main developers who were active on IDLEfork
[16] are Stephen M. Gava, who implemented the configuration GUI, the new
[17] configuration system, and the About dialog, and Kurt B. Kaiser, who completed
[18] the integration of the RPC and remote debugger, implemented the threaded
[21] Other contributors include Raymond Hettinger, Tony Lownds (Mac integration),
[23] Noam Raphael (Code Context, Call Tips, many other patches), and Chui Tey (RPC
[33] Please contact the IDLE maintainer (kbk@shore.net) to have yourself included

C:/Python34/Lib/idlelib/HISTORY.txt
***********************************
[4] This file contains the release messages for previous IDLE releases.
[5] As you read on you go back to the dark ages of IDLE's history.
[13] - New tarball released as a result of the 'revitalisation' of the IDLEfork
[20] - This release is based on a merging of the earlier IDLE fork work with current
[25]   particularly with running things from the shell window. Also the debugger is
[26]   not working, but I believe this was the case with the previous IDLE fork
[29] - This release is being made now to mark the point at which IDLEfork is 
[32] - IDLEfork CVS will now be branched to enable further development and
[33]   exploration of the two "execution in a remote process" patches submitted by
[36]   can continue on the trunk.
[46] - This was the first release of IDLE fork, which at this stage was a
[47]   combination of IDLE 0.5 and the VPython idle fork, with additional changes
[57] - This is a modification of the CVS version of IDLE 0.5, updated as of
[61] - If you have problems or suggestions, you should either contact me or post to
[62]   the list at http://www.python.org/mailman/listinfo/idle-dev (making it clear
[73]     exclude system modules.  If, however, a system module calls back into the
[74]     user program, that part of the traceback will be shown.
[78]     scroll_clear() operation which is used to hide the output of a previous run
[79]     by scrolling it out of the window.
[82]     blank editor window, rather than an interactive window.  Opening a file in
[83]     such a blank window replaces the (nonexistent) contents of that window
[84]     instead of creating another window.  Because of the need to have a
[85]     well-known port for the ExecBinding protocol, only one copy of IDLE can be
[86]     running.  Additional invocations use the RPC mechanism to report their
[87]     command line arguments to the copy already running.
[89]   - The menus have been reorganized.  In particular, the excessively large
[92]   - 'Python Documentation' now works on Windows, if the win32api module is
[96]     instead of the IDLE help; shift-TAB is now a synonym for unindent.
[130] (For a more detailed change log, see the file ChangeLog.)
[134] IDLE has the following features:
[136] - coded in 100% pure Python, using the Tkinter GUI toolkit (i.e. Tcl/Tk)
[138] - cross-platform: works on Windows and Unix (on the Mac, there are
[142] and many other features, e.g. smart indent and call tips
[150] The main program is in the file "idle.py"; on Unix, you should be able
[154] use the batch file idle.bat.
[156] Command line arguments: files passed on the command line are executed,
[157] not opened for editing, unless you give the -e command line option.
[158] Try "./idle.py -h" to see other command line options.
[166] IDLE is covered by the standard Python copyright notice
[178] Viewer menu, not by the debugger.)
[181] them correctly (MH)
[184] much more of Python's syntax; this is reflected in the class and path
[187] - Much better auto-indent; knows how to indent the insides of
[190] - Call tip window pops up when you type the name of a known function
[191] followed by an open parenthesis.  Hit ESC or click elsewhere in the
[192] window to close the tip window (MH)
[200] always goes to the *Python Shell* window, and raw_input() works
[201] correctly.  You use F5 to import/reload a module: this adds the module
[202] name to the __main__ namespace.  You use Control-F5 to run a script:
[203] this runs the script *in* the __main__ namespace.  The latter also
[204] sets sys.argv[] to the script name
[212] directories, modules, and classes.  Yes, it's a superset of the Class
[214] MultiScrolledLists.py, which provides the framework for this dialog.
[222] - Enabled support for running a module, with or without the debugger.
[224] reload of that module; Control-F5 loads it under the debugger.
[226] - Re-enable tearing off the Windows menu, and make a torn-off Windows
[229] - Menu items can now be have a checkbox (when the menu label starts
[230] with "!"); use this for the Debugger and "Auto-open stack viewer"
[233] - Added a Quit button to the Debugger API.
[237] - Fix the debugger (when using Python 1.5.2b2) to use canonical
[238] filenames for breakpoints, so these actually work.  (There's still a
[239] lot of work to be done to the management of breakpoints in the
[244] - Allow dragging of the separator between the two list boxes in the
[247] - Bind ESC to "close window" of the debugger, stack viewer and class
[248] browser.  It removes the selection highlighting in regular text
[255] Lots of changes; here are the highlights:
[265] The command to open the Python shell window is now in the File menu.
[279] JIT (Just-In-Time) stack viewer toggle -- if set, the stack viewer
[284] Zoom height -- make the window full height.
[294] IDLE 0.1 was distributed with the Python 1.5.2b1 release on 12/22/98.

C:/Python34/Lib/idlelib/NEWS.txt
********************************
[12]   editor window with a filename.  When Class Browser is requested otherwise,
[17] - Issue #4832: Save As to type Python files automatically adds .py to the
[21] - Issue #21986: Code objects are not normally pickled by the pickle module.
[22]   To match this, they are no longer pickled when running under Idle.
[35]   Currently, the entry is on the Help menu, but it may move to Run.
[51]   bindings for Idle so Caps Lock does not disable them. Patch by Roger Serwy.
[53] - Issue #21695: Closing a Find-in-files output window while the search is
[63]   consolidating and improving human-validated tests of Idle. Change other files
[64]   as needed to work with htest.  Running the module as __main__ runs all tests.
[71]   consolidating and improving human-validated tests of Idle. Change other files
[72]   as needed to work with htest.  Running the module as __main__ runs all tests.
[74] - Issue #21139: Change default paragraph width to 72, the PEP 8 recommendation.
[90] - Issue #17625: Close the replace dialog after it is used.
[102] - Issue #17625: Close the replace dialog after it is used.
[129] - Issue #14409: IDLE now properly executes commands in the Shell window
[130]   when it cannot read the normal config files on startup and
[131]   has to use the built-in default key bindings.
[132]   There was previously a bug in one of the defaults.
[146] - Issue #6378: Further adjust idle.bat to start associated Python
[179]   the user (unless a different encoding is declared); remove
[184]   would not start if a custom theme was defined.
[192]   versions of IDLE which are not installed in the standard location.
[197] - Windows: Version string for the .chm help file changed, file not being
[201]   David Scherer for suggesting the use of an ephemeral port for the GUI.
[210] - Issue #3549: On MacOS the preferences menu was not present
[220] - Issue #4455: IDLE failed to display the windows list when two windows have
[221]   the same title.
[223] - Issue #4383: When IDLE cannot make the connection to its subprocess, it would
[224]   fail to properly display the error message.
[232] - help() was not paging to the shell.  Issue1650.
[262] - CallTips module now uses the inspect module to produce the argspec.
[277]   would not start if a custom theme was defined.
[284] - Autocompletion of filenames now support alternate separators, e.g. the
[288]   in the config dialog would cause non-Python files to be colored as if they
[322] - Bug in idlelib.MultiCall: Options dialog was crashing IDLE if there was an
[330] - AutoCompleteWindow moved below input line, will move above if there
[333] - Calltips now 'handle' tuples in the argument list (display '<tuple>' :)
[343] - Bug #813342: Start the IDLE subprocess with -Qnew if the parent
[346] - Honor the "Cancel" action in the save dialog (Debian bug #299092)
[348] - Some syntax errors were being caught by tokenize during the tabnanny
[349]   check, resulting in obscure error messages.  Do the syntax check
[352] - IDLE's version number takes a big jump to match the version number of
[353]   the Python release of which it's a part.
[367] - File menu hotkeys: there were three 'p' assignments.  Reassign the
[368]   'Save Copy As' and 'Print' hotkeys to 'y' and 't'.  Change the
[385]   message claiming they were IDLE internal errors (since 1.2a1).
[396] - Bug #1517996: IDLE now longer shows the default Tk menu when a
[397]   path browser, class browser or debugger is the frontmost window on MacOS X
[455]   when using X11 and the Fink distribution.  Python Bug 1263656.
[458]   of replacing the input line, the previous command is now appended to the
[463]   the Untabify command.
[474] - run.py: use Queue's blocking feature instead of sleeping in the main
[477] - Add config-main option to make the 'history' feature non-cyclic.
[483]   tabs for the current EditorWindow via the Format menu) but IDLE will
[486] - Enable setting the indentation width using the Options dialog.
[491] - Discourage using an indent width other than 8 when using tabs to indent
[495]   Autoindent was merged into EditorWindow.  This allows IDLE to conform to the
[497]   even if the file uses tabs.)  Any change in indent width is local to that
[507] - The GUI was hanging if the shell window was closed while a raw_input()
[508]   was pending.  Restored the quit() of the readline() mainloop().
[512]   remote registered objects.  Changes to these attributes are local, however.
[519] - On OpenBSD, terminating IDLE with ctrl-c from the command line caused a
[520]   stuck subprocess MainThread because only the SocketThread was exiting.
[527] - Saving a Keyset w/o making changes (by using the "Save as New Custom Key Set"
[531] - A change to the linecache.py API caused IDLE to exit when an exception was
[532]   raised while running without the subprocess (-n switch).  Python Bug 1063840.
[541]   far the block was indented, effectively adding the indentation width
[542]   to the reformat width.  This has been repaired, and the reformat
[543]   width is again a bound on the total width of reformatted lines.
[557]   window raising, especially in the Windows menu and in the debugger.
[560] - If user passes a non-existent filename on the commandline, just
[569] - EditorWindow.py was not finding the .chm help file on Windows.  Typo
[581] - Redirect the warning stream to the shell during the ScriptBinding check of
[582]   user code and format the warning similarly to an exception for both that
[583]   check and for runtime warnings raised in the subprocess.
[586]   The pane no longer appears in the shell window.  Added capability to limit
[590] - Paragraph reformat width is now a configurable parameter in the
[596] - If nulls somehow got into the strings in recent-files.lst
[599] - If the normal background is changed via Configure/Highlighting, it will
[600]   update immediately, thanks to the previously mentioned patch by Nigel Rowe.
[602] - Add a highlight theme for builtin keywords.  Python Patch 805830 Nigel Rowe
[607]   to the execution server.  The return of the OK response from the subprocess
[608]   initialization was interfering and causing the sending socket to be not
[609]   ready.  Add an IO ready test to fix this.  Moved the polling IO ready test
[614] - Added a Tk error dialog to run.py inform the user if the subprocess can't
[615]   connect to the user GUI process.  Added a timeout to the GUI's listening
[617]   the port or connect to the subprocess.  Clean up error handling during
[623] - Keybindings with the Shift modifier now work correctly.  So do bindings which
[624]   use the Space key.  Limit unmodified user keybindings to the function keys.
[627] - After an exception, run.py was not setting the exception vector. Noam
[631] - IDLE now does not fail to save the file anymore if the Tk buffer is not a
[646] - Added a banner to the shell discussing warnings possibly raised by personal
[664]   reflect the current status of the configuration system.  Python Bug 768469
[675]   sys.std{in|out|err}.encoding, for both the local and the subprocess case.
[684] - Extend AboutDialog.ViewFile() to support file encodings.  Make the CREDITS
[687] - Updated the About dialog to reflect re-integration into Python.  Provide
[691] - TextViewer() now has a third parameter which allows inserting text into the
[694] - (Created the .../Lib/idlelib directory in the Python CVS, which is a clone of
[695]   IDLEfork modified to install in the Python environment.  The code in the
[698] - Printing the Shell window was failing if it was not saved first SF 748975
[700] - When using the Search in Files dialog, if the user had a selection
[701]   highlighted in his Editor window, insert it into the dialog search field.
[703] - The Python Shell entry was disappearing from the Windows menu.
[705] - Update the Windows file list when a file name change occurs
[707] - Change to File / Open Module: always pop up the dialog, using the current
[708]   selection as the default value.  This is easier to use habitually.
[710] - Avoided a problem with starting the subprocess when 'localhost' doesn't
[711]   resolve to the user's loopback interface.  SF 747772
[716] - File / New will by default save in the directory of the Edit window from
[725] - The current working directory of the execution environment (and shell
[726]   following completion of execution) is now that of the module being run.
[728] - Added the delete-exitfunc option to config-main.def.  (This option is not
[729]   included in the Options dialog.)  Setting this to True (the default) will
[730]   cause IDLE to not run sys.exitfunc/atexit when the subprocess exits.
[732] - IDLE now preserves the line ending codes when editing a file produced on
[739]   the default font when first installed on Windows.  SF 661676
[741] - Added Autosave feature: when user runs code from edit window, if the file
[743]   option is set in the Options dialog, and the default is to prompt the
[744]   user to save the file.   SF 661318 Bruce Sherwood patch.
[746] - Improved the RESTART annotation in the shell window when the user restarts
[747]   the shell while it is generating output.  Also improved annotation when user
[748]   repeatedly hammers the Ctrl-F6 restart.
[750] - Allow IDLE to run when not installed and cwd is not the IDLE directory
[754]   sys.path, prepend it.  This allows the module to import other modules in
[755]   the same directory.  Do the same for a script run from the command line.
[757] - Correctly restart the subprocess if it is running user code and the user
[758]   attempts to run some other module or restarts the shell.  Do the same if
[759]   the link is broken and it is possible to restart the subprocess and re-
[760]   connect to the GUI.   SF RFE 661321.
[762] - Improved exception reporting when running commands or scripts from the
[765] - Added a -n command line switch to start IDLE without the subprocess.
[766]   Removed the Shell menu when running in that mode.  Updated help messages.
[768] - Added a comment to the shell startup header to indicate when IDLE is not
[769]   using the subprocess.
[771] - Restore the ability to run without the subprocess.  This can be important for
[772]   some platforms or configurations.  (Running without the subprocess allows the
[774]   desirable, depending on your point of view.  In addition, the traditional
[777]   edit the code and a separate instance run to test changes.  (Multiple
[780] - Improve the error message a user gets when saving a file with non-ASCII
[782]   'EncodingMessage', which contains the line to add in a fixed-font entry
[783]   widget, and which has a button to add that line to the file automatically.
[785]   possible values: none, utf-8, and locale. None is the default: IDLE will show
[788]   files are saved in the locale's encoding; the dialog is only displayed if the
[789]   source contains characters outside the locale's charset.  SF 710733 - Loewis
[791] - Improved I/O response by tweaking the wait parameter in various
[795]   loop in user code using the 'interrupt' extension.  User code runs
[796]   in MainThread, while the RPCServer is handled by SockThread.  This is
[799] - Implemented the 'interrupt' extension module, which allows a subthread
[800]   to raise a KeyboardInterrupt in the main thread.
[802] - Attempting to save the shell raised an error related to saving
[803]   breakpoints, which are not implemented in the shell
[805] - Provide a correct message when 'exit' or 'quit' are entered at the
[812]   calls) out of rpc.py into the client and server.
[818] - Restart the subprocess if it terminates itself. (VPython programs do that)
[820] - Support subclassing of exceptions, including in the shell, by moving the
[821]   exception formatting to the subprocess.
[830] - Updated INSTALL.txt to claify use of the python2 rpm.
[836] - Code encountering an unhandled exception under the debugger now shows
[837]   the correct traceback, with IDLE internal levels pruned out.
[839] - If an exception occurs entirely in IDLE, don't prune the IDLE internal
[840]   modules from the traceback displayed.
[844] - IDLE icons will now install correctly even when setup.py is run from the
[850]   of the selection.
[857] - Removed the File Path from the Additional Help Sources scrolled list.
[859] - Add capability to access Additional Help Sources on the web if the
[860]   Help File Path begins with //http or www.  (Otherwise local path is
[863] - Additional Help Sources were not being posted on the Help menu in the
[864]   order entered.  Implement sorting the list by [HelpFiles] 'option'
[868]   Python/Doc if platform is Windows, otherwise start in current directory.
[870] - Put the Additional Help Sources directly on the Help menu instead of in
[871]   an Extra Help cascade menu.  Rearrange the Help menu so the Additional
[876] - Uniform capitalization in General tab of ConfigDialog, update the doc string.
[879]   deleting Additional Help Sources from the user's config file.
[881] - Make configHelpSourceEdit OK button the default and bind <Return>
[886] - Use os.startfile() to open both Additional Help and Python Help on the
[887]   Windows platform.  The application associated with the file type will act as
[888]   the viewer.  Windows help files (.chm) are now supported via the
[891] - If Python Help files are installed locally on Linux, use them instead of
[894] - Make the methods for finding the Python help docs more robust, and make
[895]   them work in the installed configuration, also.
[897] - On the Save Before Run dialog, make the OK button the default.  One
[903] - Removed the "Help/Advice" menu entry.  Thanks, David!  We'll remember!
[905] - Change the "Classic Windows" theme's paste key to be <ctrl-v>.
[907] - Rearrange the Shell menu to put Stack Viewer entries adjacent.
[909] - Add the ability to restart the subprocess interpreter from the shell window;
[913] - Upon a restart, annotate the shell window with a "restart boundary".  Add a
[914]   shell window menu "Shell/View Restart" with binding F6 to jump to the most
[934] - First release of major new functionality.  For further details refer to
[935]   Idle-dev and/or the Sourceforge CVS.
[937] - Adapted to the Mac platform.
[939] - Overhauled the IDLE startup options and revised the idle -h help message,
[944] - Introduced the new RPC implementation, which includes a debugger.  The output
[945]   of user code is to the shell, and the shell may be used to inspect the
[946]   environment after the run has finished.  (In version 0.8.1 the shell
[947]   environment was separate from the environment of the user code.)
[949] - Introduced the configuration GUI and a new About dialog.
[952]   van Rossum's.  GvR code has support for the IDLE debugger and uses the shell
[953]   to inspect the environment of code Run from an Edit window.  Files removed:

C:/Python34/Lib/idlelib/README.txt
**********************************
[5] IDLE has everything they really need to develop pure Python code.
[8] and many other capabilities, e.g. smart indent, call tips, and autocompletion.
[18] restarted from the Shell window without restarting IDLE.
[22] testing a module two or three steps down the import chain.
[24] (Personal firewall software may warn about the connection IDLE makes to its
[27] from the Internet.)
[39] which allows the user to specify additional help sources, either locally or on
[40] the web.
[42] IDLE is coded in 100% pure Python, using the Tkinter GUI toolkit (Tk/Tcl)
[45] IDLE accepts command line arguments.  Try idle -h to see the options.
[49] them by using the Python issue tracker:
[53] For further details and links, read the Help files and check the IDLE home

C:/Python34/Lib/idlelib/TODO.txt
********************************
[12]     - fix the stupid bug where you need to step twice
[17] - insert the initial current directory into sys.path DONE
[20] - command expansion from keywords, module contents, other buffers, etc.
[29] - restructure state sensitive code to avoid testing flags all the time
[42]   In other words, select "UserDict.UserDict", hit some magic key and
[43]   it loads up UserDict.py and finds the first def or class for UserDict.
[53] - new autoindent after colon even indents when the colon is in a comment!
[57] - Sometimes for no apparent reason a selection from the cursor to the
[58]   end of the command buffer appears, which is hard to get rid of
[60] - The Line/Col in the status bar can be wrong initially in PyShell DONE
[65] - should add some primitives for accessing the selection etc.
[75]   either command line style, or Microsoft recent-file
[82] appears to be in the contributed section, and the source
[85] In any case, the code is useful for visually navigating
[114] sys.argv[0] to something decent first (it is normally set to the path of
[115] the idle script).
[118] other parts of Grail.
[127]     - I'd like support for shift-click extending the selection. There's a
[128]       bug now that it doesn't work the first time you try it.
[140]     - Please use another icon for the tree browser leaf. The small snake
[148] object in the editor which shows the source of the object, if
[151] - Hooks into the guts, like in Emacs.  (Mike Romberg)
[153] - Sharing the editor with a remote tutor.  (Martijn Faassen)
[155] - Multiple views on the same file.  (Tony J Ibbs)
[161] - Capture menu events in extensions without changing the IDLE source.
[167] shown together (e.g. class browser and source).  (Albert Brandl)
[178] it -- i.e. you can only edit the current command, and the cursor can't
[179] escape from the command area.  (Albert Brandl)
[186] - Config files still editable outside the preferences dialog.
[189] - When you're editing a command in PyShell, and there are only blank
[190] lines below the cursor, hitting Return should ignore or delete those
[191] blank lines rather than deciding you're not on the last line.  (me)
[194] dialog with options to give command line arguments, run the debugger,
[197] - Shouldn't be able to delete part of the prompt (or any text before
[198] it) in the PyShell.  (Martijn Faassen)   DONE
[204] the shell window.  Output of separate runs should all go to the same
[209] - Printing!  Possibly via generation of PDF files which the user must
[210] then send to the printer separately.  (Dinu Gherman)  FIRST CUT

C:/Python34/Lib/idlelib/extend.txt
**********************************
[6] starts up and to attach them to each edit window. (It is also possible
[7] to make other changes to IDLE, but this must be done by editing the IDLE
[11] the file config-extensions.def.  See below for details.
[13] An IDLE extension is defined by a class.  Methods of the class define
[15] instance) variables define the bindings and menu additions; these are
[16] automatically applied by IDLE when the extension is linked to an edit
[21] about this argument, but it is guaranteed to have the following instance
[26]     flist	the FileList instance (shared by all edit windows)
[28] (There are a few more, but they are rarely useful.)
[31] Rather, it must define one or more virtual events, e.g. <<zoom-height>>, and
[33] bound to the corresponding methods, and Window Manager events can then be bound
[34] to the virtual events. (This indirection is done so that the key bindings can
[35] easily be changed, and so that other sources of virtual events can exist, such
[40] menu name (lowercase) and a list of menu entries. Each menu entry is either
[42] virtual_event).  Here, menu_label is the label of the menu entry, and
[43] virtual_event is the virtual event to be generated when the entry is selected.
[44] An underscore in the menu label is removed; the character following the
[45] underscore is displayed underlined, to indicate the shortcut character (for
[48] At the moment, extensions cannot define whole new menus; they must define
[50] entry definitions are then ignored, but key bindings are still applied.  (This
[51] should probably be refined in the future.)
[53] Extensions are not required to define menu entries for all the events they
[55] case there must be empty bindings in cofig-extensions.def)
[74] The final piece of the puzzle is the file "config-extensions.def", which is
[75] used to configure the loading of extensions and to establish key (or, more
[76] generally, event) bindings to the virtual events defined in the extensions.
[78] See the comments at the top of config-extensions.def for information.  It's
[82] For further information on binding refer to the Tkinter Resources web page at
[83] python.org and to the Tk Command "bind" man page.

C:/Python34/Lib/idlelib/help.txt
********************************
[1] [See the end of this file for ** TIPS ** on using IDLE !!]
[3] IDLE is the Python IDE built with the tkinter GUI toolkit.
[5] IDLE has the following features:
[6] -coded in 100% pure Python, using the tkinter GUI toolkit
[9] call tips, and many other features
[15] IDLE has two window types the Shell window and the Editor window. It is
[19] the dotted line at the top of a menu to "tear it off": a separate window
[20] containing the menu is created (for Unix and Windows only).
[32]         Save             -- Save current window to the associated file (unsaved
[33]                             windows have a * before and after the window title)
[36]                             the associated file
[38]                             without changing the associated file
[40]         Print Window     -- Print the current window
[52]                             then delete the selection
[55]         Select All       -- Select the entire contents of the edit buffer
[59]         Find Selection   -- Search for the string in the selection
[63]         Expand Word      -- Expand the word you have typed to match another
[64]                             word in the same buffer; repeat to get a
[66]         Show Calltip     -- After an unclosed parenthesis for a function, open
[68]         Show Parens      -- Highlight the surrounding parenthesis
[74]         Indent Region       -- Shift selected lines right by the indent width
[76]         Dedent Region       -- Shift selected lines left by the indent width
[82]         Untabify Region     -- Turn *all* tabs into the corrent number of spaces
[86]                                accepted default by the Python community is 4
[88]         Format Paragraph    -- Reformat the current blank-line-separated
[89]                                paragraph. All lines in the paragraph will be
[92]         Strip trailing whitespace -- Removed any space characters after the end
[93]                                      of the last non-space character
[97]         Python Shell -- Open or wake up the Python shell window
[99]         Check Module -- Check the syntax of the module currently open in the
[100]                         Editor window.  If the module has not been saved IDLE
[101]                         will prompt the user to save the code.
[102]         Run Module   -- Restart the shell to clean the environment, then
[103]                         execute the currently open module. If the module has
[104]                         not been saved IDLE will prompt the user to save the
[109]         View Last Restart -- Scroll the shell window to the last Shell restart
[110]         Restart Shell     -- Restart the shell to clean the environment
[114]         Go to File/Line   -- Look around the insert point for a filename
[115]                              and line number, open the file, and show the line.
[116]                              Useful to view the source lines referenced in an
[117]                              exception traceback.  Available in the context
[118]                              menu of the Shell window.
[120]                              experimental. Run commands in the shell under the
[122]         Stack Viewer      -- Show the stack traceback of the last exception
[123]         Auto-open Stack Viewer (toggle) -- Toggle automatically opening the
[130]                           keybindings, and color themes may be altered.
[135]         Code Context (toggle) -- Open a pane at the top of the edit window
[136]                                  which shows the block context of the section
[137]                                  of code which is scrolling off the top or the
[138]                                  window. This is not present in the Shell
[139]                                  window only the Editor window.
[143]         Zoom Height -- Toggles the window between normal size (40x80 initial
[144]         setting) and maximum height.  The initial size is in the Configure
[145]         IDLE dialog under the general tab.
[147]         The rest of this menu lists the names of all open windows;
[148]         select one to bring it to the foreground (deiconifying it if
[156]                        detailing the menu options, basic editing and navigation,
[157]                        and other tips.
[160]                        docs.python.org showing the latest Python documentation.
[162]         Additional help sources may be added here with the Configure IDLE
[163]         dialog under the General tab.
[168]                             then delete the selection
[172]                             when the debugger is open.
[173]         Clear Breakpoint -- Clears the breakpoint on that line
[178]                             then delete the selection
[191]         the Windows help format.  The Additional Help Sources feature of the
[192]         configuration GUI supports .chm, along with any other filetypes
[193]         supported by your browser.  Supply a Menu Item title, and enter the
[194]         location in the Help File Path slot of the New Help Source dialog.  Use
[195]         http:// and/or www. to identify external URLs, or download the file and
[196]         browse for its path on your machine using the Browse button.
[198]         All users can access the extensive sources of help, including
[200]         or removed from the Help menu at any time using Configure IDLE.
[204]         Backspace deletes char to the left; DEL deletes char to the right.
[214]                 Control-l     center window around the insertion point
[216]         paste) may work.  Keybindings are selected in the Configure IDLE
[221]         After a block-opening statement, the next line is indented by 4 spaces
[222]         (in the Python Shell window by one tab).  After certain keywords
[223]         (break, return etc.) the next line is dedented.  In leading
[224]         indentation, Backspace deletes up to 4 spaces if they are there.  Tab
[225]         inserts spaces (in the Python Shell window one tab), number depends on
[229]         See also the indent/dedent region commands in the edit menu.
[239]         typed.  If after one of those characters (plus zero or more other
[240]         characters) a tab is typed the ACW will open immediately if a possible
[243]         If there is only one possible completion for the characters entered, a
[244]         tab will supply that completion without opening the ACW.
[246]         'Show Completions' will force open a completions window, by default the
[248]         string, this will contain the files in the current directory.  On a
[249]         blank line, it will contain the built-in and user-defined functions and
[250]         classes in the current name spaces, plus any modules imported.  If some
[251]         characters have been entered, the ACW will attempt to be more specific.
[253]         If string of characters is typed, the ACW selection will jump to the
[255]         the longest non-ambiguous match to be entered in the Edit window or
[256]         Shell.  Two tabs in a row will supply the current ACW selection, as
[258]         selection, and the scroll wheel all operate on the ACW.
[260]         "Hidden" attributes can be accessed by typing the beginning of hidden
[264]         Completions and the 'Expand Word' facility can save a lot of typing!
[266]         Completions are currently limited to those in the namespaces.  Names in
[268]         found.  Run the module once with your imports to correct this
[270]         sys.modules, so much can be found by default, e.g. the re module.
[272]         If you don't like the ACW popping up unbidden, simply make the delay
[273]         longer or disable the extension.  Or another option is the delay could
[274]         be set to zero. Another alternative to preventing ACW popups is to
[275]         disable the call tips extension.
[293]         occasionally see uncolorized text.  To change the color
[294]         scheme, use the Configure IDLE / Highlighting dialog.
[311] Other preferences:
[314]         be changed via the Configure IDLE menu option.  Be sure to note that
[316]         addition a user can create a custom key set in the Configure IDLE
[317]         dialog under the keys tab.
[321]         Enter idle -h at the command prompt to get a usage message.
[331]         If there are arguments:
[333]            reflects the arguments passed to IDLE itself.
[334]         2. Otherwise, if -c is used, all arguments are placed in
[336]         3. Otherwise, if neither -e nor -c is used, the first argument is a
[337]            script which is executed with the remaining arguments in
[338]            sys.argv[1:...]  and sys.argv[0] set to the script name.  If the
[340]            session is started; the arguments are still available in sys.argv.
[344]         If IDLE is started with the -n command line switch it will run in a
[345]         single process and will not create the subprocess which runs the RPC
[347]         the subprocess or the RPC socket interface on your platform.  However,
[348]         in this mode user code is not isolated from IDLE itself.  Also, the
[350]         your code has been modified, you must reload() the affected modules and
[351]         re-import any specific items (e.g. from foo import baz) if the changes
[352]         are to take effect.  For these reasons, it is preferable to run IDLE
[353]         with the default subprocess if at all possible.
[357]         IDLE contains an extension facility.  See the beginning of
[358]         config-extensions.def in the idlelib directory for further information.

C:/Python34/Lib/idlelib/idle_test/README.txt
********************************************
[8] 'xyz' lower case, and possibly shorten it.) Each file should start with the
[9] something like the following template, with the blanks after after '.' and 'as',
[25] Once test_xyy is written, the following should go at the end of xyy.py,
[37] test is a gui test if it creates a Tk root or master object either directly
[38] or indirectly by instantiating a tkinter or idle class. For the benefit of
[39] test processes that either have no graphical environment available or are not
[43] To avoid interfering with other gui tests, all gui objects must be destroyed
[44] and deleted by the end of the test.  If a widget, such as a Tk root, is created
[45] in a setUpX function, destroy it in the corresponding tearDownX.  For module
[46] and class attributes, also delete the widget.
[59] Support.requires('gui') causes the test(s) it guards to be skipped if any of
[62]    enabling the "gui" resource with the "-u" command line option.
[64]    interact with the graphical environment.
[68]  - test.support.use_resources has been set by something other than
[73] tkinter (tk) variables and messageboxes can do this by using the mock classes in
[74] idle_test/mock_tk.py. There is also a mock text that will handle some uses of the
[80] Assume that xyz.py and test_xyz.py end with the "if __name__" statements given
[81] above. In Idle, pressing F5 in an editor window with either loaded will run all
[82] tests in the test_xyz file with the version of Python running Idle.  The test
[83] report and any tracebacks will appear in the Shell window. The options in these
[85] importing) either of the files during development: verbosity=2 lists all test
[86] methods in the file; exit=False avoids a spurious sys.exit traceback that would
[87] otherwise occur when running in Idle. The following command lines also run
[91] python -m idlelib.xyz  # With the capitalization of the xyz module
[94] To run all idle_test/test_*.py tests, either interactively
[95] ('>>>', with unittest imported) or from a command line, use one of the
[96] following. (Notes: in 2.7, 'test ' (with the space) is 'test.regrtest ';
[105] which is also imported into test.test_idle. Normally, neither file should be
[107] unittest indirectly through regrtest. The same happens when the entire test
[109] to stay green. Idle tests must not disturb the environment in a way that
[110] makes other tests fail (issue 18081).
[112] To run an individual Testcase or test method, extend the dotted name given to
[113] unittest on the command line.

C:/Python34/Lib/lib2to3/Grammar.txt
***********************************
[3] # Note:  Changing the grammar specified in this file will most likely
[4] #        require corresponding changes in the parser module
[5] #        (../Modules/parsermodule.c).  If you can't make the changes to
[6] #        that module yourself, please co-ordinate the required changes
[8] #        Drake <fdrake@acm.org> will probably be listening there.
[10] # NOTE WELL: You should also follow all the steps listed in PEP 306,
[25] # Start symbols for the grammar:
[28] #	eval_input is the input for the eval() and input() functions.
[61] # For normal assignments, additional restrictions enforced by the interpreter
[97] # NB compile.c makes sure that the default except clause is last
[105] # (But not a mix of the two)

C:/Python34/Lib/lib2to3/PatternGrammar.txt
******************************************
[8] # With 'any' we can still specify the sub-structure.

C:/Python34/Lib/site-packages/README.txt
****************************************
[2] here.  Read the source for site.py for more details.

C:/Python34/Lib/test/cmath_testcases.txt
****************************************
[3] -- Each line takes the form:
[9] --   <testid> is a short name identifying the test,
[11] --   <function> is the function to be tested (exp, cos, asinh, ...),
[16] --   <output_value> is the expected (ideal) output value, again
[19] --   <flags> is a list of the floating-point flags required by C99
[24] --     mathematically infinite result.
[27] --     real or imaginary part is too large to fit in the usual range
[32] --   ignore-real-sign : indicates that the sign of the real part of
[33] --     the result is unspecified; if the real part of the result is
[34] --     given as inf, then both -inf and inf should be accepted as
[37] --   ignore-imag-sign : indicates that the sign of the imaginary part
[38] --     of the result is unspecified.
[46] -- The majority of the values below were computed with the help of
[47] -- version 2.3 of the MPFR library for multiple-precision
[52] -- the corresponding nearest IEEE 754 double-precision value.  See the
[53] -- MPFR homepage at http://www.mpfr.org for more information about the
[1,197] -- values near the unit circle
[1,365] -- values near the unit circle
[1,560] -- large arguments, and the accuracy of these complex functions
[2,224] -- For cmath.rect, we can use the same testcase syntax as for the
[2,225] -- complex -> complex functions above, but here the input arguments
[2,226] -- should be interpreted as a pair of floating-point numbers rather
[2,227] -- than the real and imaginary parts of a complex number.
[2,229] -- Here are the 'spirit of C99' rules for rect.  First, the short
[2,234] --    rect(nan, t) = exp(nan + it), except that in rect(nan, +-0) the
[2,235] --      sign of the imaginary part is unspecified.
[2,237] -- and now the long version:
[2,242] --   rect(+0, inf) returns +- 0 +- i0, where the signs of the real and
[2,244] --   rect(x, inf) returns NaN + i NaN and raises the "invalid"
[2,246] --   rect(inf, inf) returns +-inf + i NaN and raises the "invalid"
[2,247] --     floating-point exception (where the sign of the real part of the
[2,251] --   rect(inf, NaN) returns +-inf+i NaN, where the sign of the real part
[2,252] --     of the result is unspecified.
[2,255] --   rect(NaN, 0) returns NaN +- i0, where the sign of the imaginary
[2,259] --   rect(+0, NaN) return +-0 +- i0, where the signs of the real and
[2,321] -- For cmath.polar, we can use the same testcase syntax as for the
[2,322] -- complex -> complex functions above, but here the output arguments
[2,323] -- should be interpreted as a pair of floating-point numbers rather
[2,324] -- than the real and imaginary parts of a complex number.
[2,326] -- Annex G of the C99 standard describes fully both the real and
[2,328] -- are defined in terms of the functions hypot and atan2).

C:/Python34/Lib/test/crashers/README.txt
****************************************
[1] This directory only contains tests for outstanding bugs that cause the
[3] sometimes it may not be easy to fix the underlying cause and the bug is deemed
[4] too obscure to invest the effort.
[6] Each test should fail when run from the command line:
[10] Put as much info into a docstring or comments to help determine the cause of the
[12] note if the cause is system or environment dependent and what the variables are.
[14] Once the crash is fixed, the test case should be moved into an appropriate test
[15] (even if it was originally from the test suite).  This ensures the regression
[18] Also see Lib/test_crashers.py which exercises the crashers in this directory.
[19] In particular, make sure to add any new infinite loop crashers to the black
[20] list so it doesn't try to run them.

C:/Python34/Lib/test/data/README.txt
************************************
[2] created by some tests, in particular, the test_codecmaps_* tests.

C:/Python34/Lib/test/floating_points.txt
****************************************
[2] # They are based on the TCL test suite (tests/expr.test), which is based on
[6] # ACM Transactions on Mathematical Software 27:2 (March 2001), pp. 119-140.
[1,027] # Another value designed to test a corner case of Python's strtod code.

C:/Python34/Lib/test/formatfloat_testcases.txt
**********************************************
[2] -- has the given number of places after the point;  zeros are added if
[61] -- makes a difference when the precision is 0.
[85] -- always have exactly the number of places after the point that were
[95] -- precision 0.  no decimal point in the output
[217] -- precision 0 doesn't make a lot of sense for the 'g' code (what does
[323] -- least one digit after the point, or an exponent.

C:/Python34/Lib/test/ieee754.txt
********************************
[11] what you expect. We treat two floats as equal if the difference between them
[23] from the strings 'inf' and 'nan'.
[67] NaNs are never equal to another number, even itself
[160] Neither pi nor tan are exact, but you can assume that tan(pi/2) is a large value

C:/Python34/Lib/test/leakers/README.txt
***************************************
[2] The idea is that you can import these modules while in the interpreter
[3] and call the leak function repeatedly.  This will only be helpful if
[4] the interpreter was built in debug mode.  If the total ref count
[5] doesn't increase, the bug has been fixed and the file should be removed
[6] from the repository.
[9] to define the leak function like:
[13]         # this is the function that leaks, but also creates cycles
[29] Once the leak is fixed, the test case should be moved into an appropriate
[30] test (even if it was originally from the test suite).  This ensures the

C:/Python34/Lib/test/math_testcases.txt
***************************************
[3] -- Each line takes the form:
[9] --   <testid> is a short name identifying the test,
[11] --   <function> is the function to be tested (exp, cos, asinh, ...),
[15] --   <output_value> is the expected (ideal) output value, again
[18] --   <flags> is a list of the floating-point flags required by C99
[23] --     mathematically infinite result.
[26] --     is too large to fit in the usual range of an IEEE 754 double.
[30] --   ignore-sign : indicates that the sign of the result is
[31] --     unspecified; e.g., if the result is given as inf,
[32] --     then both -inf and inf should be accepted as correct.
[40] -- Many of the values below were computed with the help of
[41] -- version 2.4 of the MPFR library for multiple-precision
[46] -- the corresponding nearest IEEE 754 double-precision value.  See the
[47] -- MPFR homepage at http://www.mpfr.org for more information about the
[87] -- Issue 8986: inputs x with exp(-x*x) near the underflow threshold
[149] -- Issue 8986: inputs x with exp(-x*x) near the underflow threshold
[170] -- lgamma: log of absolute value of the gamma function --
[367] -- inputs that cause problems for the standard reflection formula,
[438] -- other values transferred from testLog1p in test_math
[497] -- the formula expm1(x) = 2 * sinh(x/2) * exp(x/2) doesn't work so
[509] -- the next test (expm10302) is disabled because it causes failure on

C:/Python34/Lib/test/sndhdrdata/README.txt
******************************************
[1] Sound file samples used by Lib/test/test_sndhdr.py and generated using the
[7] Sound file samples used by Lib/test/test_sndhdr.py and generated using the

C:/Python34/Lib/test/test_doctest.txt
*************************************
[9] We can make this fail by disabling the blank-line feature.

C:/Python34/Lib/test/test_doctest2.txt
**************************************
[13] This doesn't cause a problem in the tect surrounding the examples, but

C:/Python34/Lib/test/test_doctest4.txt
**************************************
[4] In order to get this test to pass, we have to manually specify the

C:/Python34/Lib/test/test_email/data/msg_02.txt
***********************************************
[13] Content-description: Masthead (Ppp digest, Vol 1 #2)
[18] To subscribe or unsubscribe via the World Wide Web, visit
[23] You can reach the person managing the list at

C:/Python34/Lib/test/test_email/data/msg_04.txt
***********************************************
[8] Message-ID: <15261.36209.358846.118674@anthem.python.org>

C:/Python34/Lib/test/test_email/data/msg_07.txt
***********************************************
[11] Hi there,
[13] This is the dingus fish.

C:/Python34/Lib/test/test_email/data/msg_11.txt
***********************************************
[7] Here is the body of the message.

C:/Python34/Lib/test/test_email/data/msg_13.txt
***********************************************
[20] Hi there,
[22] This is the dingus fish.

C:/Python34/Lib/test/test_email/data/msg_16.txt
***********************************************
[38] This report relates to a message you sent with the following header fields:
[46] Your message cannot be delivered to the following recipients:
[70] Received: from panther.noc.ucla.edu by cougar.noc.ucla.edu
[76]  by panther.noc.ucla.edu (8.9.1a/8.9.1) with ESMTP id UAA09793 for

C:/Python34/Lib/test/test_email/data/msg_17.txt
***********************************************
[8] Hi there,
[10] This is the dingus fish.

C:/Python34/Lib/test/test_email/data/msg_19.txt
***********************************************
[4] To subscribe or unsubscribe via the World Wide Web, visit
[9] You can reach the person managing the list at

C:/Python34/Lib/test/test_email/data/msg_25.txt
***********************************************
[76] Received: from www.linux.org.uk (parcelfarce.linux.theplanet.co.uk [195.92.249.252])

C:/Python34/Lib/test/test_email/data/msg_26.txt
***********************************************
[4] From: Father Time <father.time@xcar.wooster.local>
[7] Message-ID: <6df65d354b.father.time@rpc.wooster.local>
[16] You either require a newer version of your software which supports MIME, or
[17] a separate MIME decoding utility.  Alternatively, ask the sender of this

C:/Python34/Lib/test/test_email/data/msg_35.txt
***********************************************
[4] counter to RFC 2822, there's no separating newline here

C:/Python34/Lib/test/test_email/data/msg_36.txt
***********************************************
[13] Content-Type: Multipart/Alternative; Boundary="OtherAccess"
[15] --OtherAccess
[26] --OtherAccess
[37] --OtherAccess--

C:/Python34/Lib/test/test_email/data/msg_38.txt
***********************************************
[19] Unlike the test test_nested-multiples-with-internal-boundary, this
[20] piece of text not only contains the outer boundary tags 
[24] but puts them at the start of a line! And, to be even nastier, it
[35] a case of this in the wild, but I've seen *similar* things.

C:/Python34/Lib/test/test_email/data/msg_43.txt
***********************************************
[27] was blocked by our Spam Firewall. The email you sent with the following subject has NOT BEEN DELIVERED:
[31] An attachment in that mail was of a file type that the Spam Firewall is set to block.

C:/Python34/Lib/test/test_email/data/msg_44.txt
***********************************************
[8] Message-ID: <15261.36209.358846.118674@anthem.python.org>

C:/Python34/Lib/test/test_email/data/msg_45.txt
***********************************************
[14] X-Long-Line: Another really long line contains a lot of text and thus has to be rewrapped because it is another
[18] This is the signed contents.

C:/Python34/Lib/test/tokenize_tests-latin1-coding-cookie-and-utf8-bom-sig.txt
*****************************************************************************
[2] # IMPORTANT: this file has the utf-8 BOM signature '\xef\xbb\xbf' 
[3] # at the start of it.  Make sure this is preserved if any changes
[4] # are made!  Also note that the coding cookie above conflicts with
[5] # the presense of a utf-8 BOM signature -- this is intended.

C:/Python34/Lib/test/tokenize_tests-no-coding-cookie-and-utf8-bom-sig-only.txt
******************************************************************************
[1] ﻿# IMPORTANT: this file has the utf-8 BOM signature '\xef\xbb\xbf' 
[2] # at the start of it.  Make sure this is preserved if any changes

C:/Python34/Lib/test/tokenize_tests-utf8-coding-cookie-and-no-utf8-bom-sig.txt
******************************************************************************
[2] # IMPORTANT: unlike the other test_tokenize-*.txt files, this file
[3] # does NOT have the utf-8 BOM signature '\xef\xbb\xbf' at the start

C:/Python34/Lib/test/tokenize_tests-utf8-coding-cookie-and-utf8-bom-sig.txt
***************************************************************************
[2] # IMPORTANT: this file has the utf-8 BOM signature '\xef\xbb\xbf' 
[3] # at the start of it.  Make sure this is preserved if any changes

C:/Python34/Lib/test/tokenize_tests.txt
***************************************
[1] # Tests for the 'tokenize' module.
[82] the 'lazy' dog.
[84] y = '\nThe "quick"\nbrown fox\njumps over\nthe \'lazy\' dog.\n'
[89] the 'lazy' dog.
[95] the 'lazy' dog.\n\
[101] the \'lazy\' dog.\n\

C:/Python34/Lib/tkinter/test/README.txt
***************************************
[7]     New tests should always use only one Tk window at once, like all the
[8]     current tests do. This means that you have to destroy the current window
[9]     before creating another one, and clean up after the test. The motivation

C:/Python34/NEWS.txt
********************
[28] - Issue #23048: Fix jumping out of an infinite while loop in the pdb.
[48] - Issue #22520: Fix overflow checking when generating the repr of a unicode
[55] - Issue #23165: Perform overflow checks before allocating memory in the
[77] - Issue #23353: Fix the exception handling of generators in
[78]   PyEval_EvalFrameEx(). At entry, save or swap the exception state even if
[79]   PyEval_EvalFrameEx() is called with throwflag=0. At exit, the exception state
[88] - Issue #23268: Fixed bugs in the comparison of ipaddress classes.
[95]   headers with no key rather than amusing the body has started.
[99] - Issue #23098: 64-bit dev_t is now supported in the os module.
[101] - Issue #23250: In the http.cookies module, capitalize "HttpOnly" and "Secure"
[102]   as they are written in the standard.
[104] - Issue #23063: In the disutils' check command, fix parsing of reST with code or
[108]   reference to the selector mapping to break a reference cycle. Initial patch
[112]   availability of the function is checked during the compilation. Patch written
[116]   uses the :data:`~ssl.PROTOCOL_SSLv23` protocol by default, not
[120] - Issue #23111: In the ftplib, make ssl.PROTOCOL_SSLv23 the default protocol
[128] - Issue #23112: Fix SimpleHTTPServer to correctly carry the query string and
[131] - Issue #23093: In the io, module allow more operations to work on detached
[140] - Issue #19858: pickletools.optimize() now aware of the MEMOIZE opcode, can
[142]   data contains MEMOIZE opcodes together with PUT or BINPUT opcodes.
[145]   value in the host header was set to "None".  Patch by Demian Brecht.
[147] - Issue #23016: A warning no longer produces an AttributeError when the program
[152]   That is not the case, so the exception handler itself raised AttributeError
[153]   when run on Linux (and, presumably, any other non-Windows OS).
[159] - Issue #22959: In the constructor of http.client.HTTPSConnection, prefer the
[160]   context's check_hostname attribute over the *check_hostname* parameter.
[162] - Issue #16043: Add a default limit for the amount of data xmlrpclib.gzip_decode
[166]   asked to compile a source file containing multiple dots in the source file
[169] - Issue #21971: Update turtledemo doc and add module to the index.
[179] - Issue #22609: Constructors and update methods of mapping classes in the
[180]   collections module now accept the self keyword argument.
[184] - Issue #22921: Allow SSLContext to take the *hostname* parameter even if
[187] - Issue #22894: TestCase.subTest() would cause the test suite to be stopped
[188]   when in failfast mode, even in the absence of failures.
[190] - Issue #22638: SSLv3 is now disabled throughout the standard library.
[198] - Issue #22849: Fix possible double free in the io.TextIOWrapper constructor.
[200] - Issue #12728: Different Unicode characters having the same uppercase but
[206] - Issue #22406: Fixed the uu_codec codec incorrectly ported to 3.x.
[220]   (SSLContext) as an argument which will then used be for HTTPS connection.
[223] - Issue #22776: Brought excluded code into the scope of a try block in
[232] - Issue #22410: Module level functions in the re module now cache compiled
[233]   locale-dependent regular expressions taking into account the locale.
[236]   now return False when the underlying stat call raises NotADirectoryError.
[245]   are no longer ignored when also set on the parent parser.
[248]   be read-only (MappingProxyType).  Previously the dictionary was modifiable
[249]   but a new one was created on each access of the attribute.
[251] - Issue #22641: In asyncio, the default SSL context for client connections
[268] - Issue #11866: Eliminated race condition in the computation of names
[277] - Issue #22449: In the ssl.SSLContext.load_default_certs, consult the
[285]   os.posix_fallocate() because their prototypes in system headers are wrong.
[299] - Issue #20577: Configuration of the max line length for the FormatParagraph
[300]   extension has been moved from the General tab of the Idle preferences dialog
[301]   to the FormatParagraph tab of the Config Extensions dialog.
[312]   editor window with a filename.  When Class Browser is requested otherwise,
[317] - Issue #4832: Save As to type Python files automatically adds .py to the
[321] - Issue #21986: Code objects are not normally pickled by the pickle module.
[322]   To match this, they are no longer pickled when running under Idle.
[332] - Issue #18982: Add tests for CLI of the calendar module.
[335]   statements in the updated documentation remain accurate. Patch by Martin
[357] - Issue #15506: Use standard PKG_PROG_PKG_CONFIG autoconf macro in the configure
[360] - Issue #22935: Allow the ssl module to be compiled if openssl doesn't support
[363] - Issue #16537: Check whether self.extensions is empty in setup.py. Patch by
[381] - Issue #19548: Update the codecs module documentation to better cover the
[382]   distinction between text encodings and other codecs, together with other
[385] - Issue #22914: Update the Python 2/3 porting HOWTO to describe a more automated
[388] - Issue #21514: The documentation of the json module now refers to new JSON RFC
[394] - Issue #22314: pydoc now works when the LINES environment variable is set.
[400]   to be in ``PCbuild\..\externals`` rather than ``PCbuild\..\..``.
[425]   used in the with statement in generator.
[433] - Issue #22415: Fixed debugging output of the GROUPREF_EXISTS opcode in the re
[440]   line buffering, rather than block buffering.  Patch by Akira Li.
[451] - Issue #22258: Fix the the internal function set_inheritable() on Illumos.
[452]   This platform exposes the function ``ioctl(FIOCLEX)``, but calling it fails
[454]   now falls back to the slower ``fcntl()`` (``F_GETFD`` and then ``F_SETFD``).
[456] - Issue #21669: With the aid of heuristics in SyntaxError.__init__, the
[461] - Issue #21642: If the conditional if-else expression, allow an integer written
[462]   with no space between itself and the ``else`` keyword (e.g. ``True if 42else
[465] - Issue #21523: Fix over-pessimistic computation of the stack effect of
[466]   some opcodes in the compiler.  This also fixes a quadratic compilation
[474]   a method.  Since EmailMessage is provisional, we can change the API in a
[478] - Issue #21079: Fix email.message.EmailMessage.is_attachment to return the
[479]   correct result when the header has parameters as well as a value.
[483] - Issue #4180: The warnings registries are now reset when the filters
[486] - Issue #22419: Limit the length of incoming HTTP request in wsgiref server to
[494] - Issue #22384: An exception in Tkinter callback no longer crashes the program
[499] - Issue #21147: sqlite3 now raises an exception if the request contains a null
[506]   if the memory allocation fails.
[508] - Issue #22338: Fix a crash in the json module on memory allocation failure.
[510] - Issue #22226: First letter no longer is stripped from the "status" key in
[511]   the result of Treeview.heading().
[513] - Issue #19524: Fixed resource leak in the HTTP connection when an invalid
[516] - Issue #22051: turtledemo no longer reloads examples to re-run them.
[520] - Issue #21933: Turtledemo users can change the code font size with a menu
[524] - Issue #21597: The separator between the turtledemo text pane and the drawing
[526]   be widened to easily view or copy the full width of the text.  The canvas
[529] - Issue #18132: Turtledemo buttons no longer disappear when the window is
[533]   most obvious consequence of the previous behavior was a STARTTLS failure
[537]   caused by mutation of the waiters queue without holding the lock.  Patch
[543] - The webbrowser module now uses subprocess's start_new_session=True rather
[556] - Issue #8797: Raise HTTPError on failed Basic Authentication immediately.
[559] - Issue #20729: Restored the use of lazy iterkeys()/itervalues()/iteritems()
[560]   in the mailbox module.
[566]   and clearer error message when the user forgets the required parameters.
[575]   when unpickling pickled sqlite3.Row).  sqlite3.Row is now initialized in the
[596] - Issue #19884: readline: Disable the meta modifier key if stdout is not
[597]   a terminal to not write the ANSI sequence "\033[1034h" into stdout. This
[601] - Issue #21888: plistlib's load() and loads() now work if the fmt parameter is
[609] - Issue #19076: Don't pass the redundant 'file' argument to self.error().
[614]   if the number of received bytes is negative.
[622] - Issue #20639: calling Path.with_suffix('') allows removing the suffix
[625] - Issue #21714: Disallow the construction of invalid paths using
[628] - Issue #21897: Fix a crash with the f_locals attribute with closure
[631] - Issue #21151: Fixed a segfault in the winreg module when ``None`` is passed
[635]   it ignored I/O errors if at least the first C call read() succeed.
[640]   object is destroyed. The destructor now closes the file if needed. The
[641]   close() method can now be called twice: the second call does nothing.
[643] - Issue #21858: Better handling of Python exceptions in the sqlite3 module.
[645] - Issue #21476: Make sure the email.parser.BytesParser TextIOWrapper is
[646]   discarded after parsing, so the input file isn't unexpectedly closed.
[648] - Issue #21729: Used the "with" statement in the dbm.dumb module to ensure
[656]   negative values the same way for keyword arguments as it does for
[659] - Issue #21812: turtle.shapetransform did not tranform the turtle on the
[663]   cache didn't match the actual result.  The former was a list of tuples
[664]   and the latter was a list of named tuples.
[669] - Issue #21723: asyncio.Queue: support any type of number (ex: float) for the
[674]   raise an exception if the event loop was closed.
[676] - Issue #21774: Fixed NameError for an incorrect variable reference in the
[687] - Issue #11709: Fix the pydoc.help function to not fail when sys.stdin is not a
[690] - Issue #13223: Fix pydoc.writedoc so that the HTML documentation for methods
[691]   that use 'self' in the example code is generated correctly.
[693] - Issue #21463: In urllib.request, fix pruning of the FTP cache.
[696]   inherited by the calling process and already higher than POSIX resource
[697]   limits would otherwise allow.  On systems with a functioning /proc/self/fd
[698]   or /dev/fd interface the max is now ignored and all fds are closed.
[701]   the tkinter module on 64-bit platforms.
[703] - Issue #14315: The zipfile module now ignores extra fields in the central
[706]   the wild and is ignored by other zip tools.
[713] - Issue #18807: If copying (no symlinks) specified for a venv, then the python
[714]   interpreter aliases (python, python3) are now created by copying rather than
[726] - Issue #8743: Fix interoperability between set objects and the
[741]   broken by the fix for security issue #19435.  Patch by Zach Byrne.
[746] - Issue #22176: Update the ctypes module's libffi to v3.1.  This release
[747]   adds support for the Linux AArch64 and POWERPC ELF ABIv2 little endian
[754]   installer packages compatible with the Gatekeeper security feature.
[760]   now display special message when and only when there are failures.
[766] - Issue #21166: Prevent possible segfaults and other random failures of
[779]   Currently, the entry is on the Help menu, but it may move to Run.
[795]   bindings for Idle so Caps Lock does not disable them. Patch by Roger Serwy.
[797] - Issue #21695: Closing a Find-in-files output window while the search is
[809] - Issue #22166:  with the assistance of a new internal _codecs._forget_codec
[810]   helping function, test_codecs now clears the encoding caches to avoid the
[822] - Issue #22104: regrtest.py no longer holds a reference to the suite of tests
[837]   does not interfere with the transaction semantics expected by the tests.
[839] - Issue #19493: Refactored the ctypes test package to skip tests explicitly
[840]   rather than silently.
[854] - Issue #19925: Added tests for the spwd module. Original patch by Vajrasky Kok.
[863]   documented explicitly, rather than assuming users will be able to derive
[864]   the expected behaviour from the behaviour of the corresponding str methods.
[872] - Issue #10747: Use versioned labels in the Windows start menu.
[878] - Issue #22201: Command-line interface of the zipfile module now correctly
[895] - Issue #21418: Fix a crash in the builtin function super() when called without
[898] - Issue #21425: Fix flushing of standard streams in the interactive
[912]   with ignore case.  Original patch by Matthew Barnett.
[918]   flush() on the underlying binary stream.  Patch by akira.
[920] - Issue #21470: Do a better job seeding the random number generator by
[921]   using enough bytes to span the full state space of the Mersenne Twister.
[923] - Issue #21398: Fix an unicode error in the pydoc pager when the documentation
[924]   contains characters not encodable to the stdout encoding.
[929] - Issue #17756: Fix test_code test when run from the installed location.
[931] - Issue #17752: Fix distutils tests when run from the installed location.
[937]   consolidating and improving human-validated tests of Idle. Change other files
[938]   as needed to work with htest.  Running the module as __main__ runs all tests.
[951] - Issue #21209: Fix sending tuples to custom generator objects with the yield
[962] - Issue #20731: Properly position in source code files even if they
[972]   replacement fields. It now matches the behavior of str.format() in
[979]   In porting to Argument Clinic, the first two arguments were reversed.
[981] - Issue #21469:  Reduced the risk of false positives in robotparser by
[985] - Issue #21321: itertools.islice() now releases the reference to the source
[986]   iterator when the slice is exhausted.  Patch by Anton Afanasyev.
[989]   in the exception's traceback.
[991] - Issue #13204: Calling sys.flags.__new__ would crash the interpreter,
[994] - Issue #19385: Make operations on a closed dbm.dumb database always raise the
[997] - Issue #21207: Detect when the os.urandom cached fd has been closed or
[1,002]   at the same time without losing the Popen.returncode value.
[1,014] - Issue #21239: patch.stopall() didn't work deterministically when the same
[1,023]   strict RFC conformance.  Instead of losing the error code when we issue the
[1,024]   subsequent RSET, smtplib now returns the error code and defers raising the
[1,025]   SMTPServerDisconnected error until the next command is issued.
[1,039] - Issue #21169: getpass now handles non-ascii characters that the
[1,040]   input stream encoding cannot encode by re-encoding using the
[1,043] - Issue #21171: Fixed undocumented filter API of the rot13 codec.
[1,049]   if path and sock are specified at the same time.
[1,052]   shutdown. Thanks to Devin Jeanpierre for the patch.
[1,055]   TypeError if the second argument is not a string or compiled regex.
[1,058]   :func:`tempfile.NamedTemporaryFile`, close the file descriptor if
[1,070] - Issue #21082: In os.makedirs, do not set the process-wide umask. Note this
[1,076]   curve for ECDH key exchange on OpenSSL 1.0.2 and later, and otherwise
[1,079] - Issue #20995: Enhance default ciphers used by the ssl module to enable
[1,086] - Issue #20879: Delay the initialization of encoding and decoding tables for
[1,087]   base32, ascii85 and base85 codecs in the base64 module, and delay the
[1,088]   initialization of the unquote_to_bytes() table of the urllib.parse module, to
[1,089]   not waste memory if these modules are not used.
[1,091] - Issue #19157: Include the broadcast address in the usuable hosts for IPv6
[1,095]   prints out the whole command line (instead of just the command name) if the
[1,108] - Issue #20283: RE pattern methods now accept the string keyword parameters
[1,114] - Issue #20791: copy.copy() now doesn't make a copy when the input is
[1,132]   Due to the specifics of functools.partial implementation,
[1,145] - Issue #11571: Ensure that the turtle window becomes the topmost window
[1,151] - Issue #21276: posixmodule: Don't define USE_XATTRS on KFreeBSD and the Hurd.
[1,158] - Issue #21139: Change default paragraph width to 72, the PEP 8 recommendation.
[1,173] - Issue #15234: For BerkelyDB and Sqlite, only add the found library and
[1,174]   include directories if they aren't already being searched. This avoids
[1,190] - Issue #17386: Expanded functionality of the ``Doc/make.bat`` script to make
[1,193] - Issue #21043: Remove the recommendation for specific CA organizations and to
[1,194]   mention the ability to load the OS certificates.
[1,200]   the Python Packaging Authority tools. Existing guides have been retained
[1,201]   as legacy links from the distutils docs, as they still contain some
[1,211]   at least check whether Tk can be instantiated when the GUI resource is
[1,216] - Issue #21223: Pass test_site/test_startup_imports when some of the extensions
[1,242] - Add support for the PEP 465 matrix multiplication operator to 2to3.
[1,249] - Issue #20535: PYTHONWARNING no longer affects the run_tests.py script.
[1,284] - Issue #20839: Don't trigger a DeprecationWarning in the still supported
[1,293] - Issue #20748: Uninstalling pip does not leave behind the pyc of
[1,294]   the uninstaller anymore.
[1,296] - Issue #20568: The Windows installer now installs the unversioned ``pip``
[1,297]   command in addition to the versioned ``pip3`` and ``pip3.4`` commands.
[1,299] - Issue #20757: The ensurepip helper for the Windows uninstaller now skips
[1,300]   uninstalling pip (rather than failing) if the user has updated pip to a
[1,301]   different version from the one bundled with ensurepip.
[1,318] - Issue #20261: In pickle, lookup __getnewargs__ and __getnewargs_ex__ on the
[1,319]   type of the object.
[1,321] - Issue #20619: Give the AST nodes of keyword-only arguments a column and line
[1,325]   don't clear anymore the state of Python threads early during the Python
[1,331] - Issue #20710: The pydoc summary line no longer displays the "self" parameter
[1,343]   error if the address is not resolved; use __slots__ in Handle and
[1,344]   TimerHandle; as_completed() and wait() raise TypeError if the passed
[1,345]   list of Futures is a single Future; call_soon() and other 'call_*()'
[1,346]   functions raise TypeError if the passed callback is a coroutine
[1,349]   to consider pausing receiving if the watermark limits have changed;
[1,350]   fix _check_resolved_address() for IPv6 address; and other minor
[1,367] - Issue #19744: the ensurepip installation step now just prints a warning to
[1,368]   stderr rather than failing outright if SSL/TLS is unavailable. This allows
[1,371] - Issue #20594: Avoid name clash with the libc function posix_close.
[1,377]   with the NoImpersonate flag, to support elevated execution (UAC).
[1,382] - Issue #20609: Restored the ability to build 64-bit Windows binaries on
[1,383]   32-bit Windows, which was broken by the change in issue #19788.
[1,395]   cleaning other modules.  The sys and builtins modules are cleaned last.
[1,407] - Issue #20404: io.TextIOWrapper (and hence the open() builtin) now uses the
[1,415] - Issue #20162: Fix an alignment issue in the siphash24() hash function which
[1,422]   to reflect the fact that they only accept positional-only arguments.
[1,424] - Issue #20517: Functions in the os module that accept two filenames
[1,425]   now register both filenames in the exception on failure.
[1,430]   boundary marker, instead of doing so only when there is an epilogue.  This
[1,435]   algorithm would introduce idle delays before the entire transmission of a
[1,438] - Issue #16983: the new email header parsing code will now decode encoded words
[1,441] - Issue #19772: email.generator no longer mutates the message object when
[1,444] - Issue #20536: the statistics module now correctly handle Decimal instances
[1,447] - Issue #18805: the netmask/hostmask parsing in ipaddress now more reliably
[1,450] - Issue #20481: For at least Python 3.4, the statistics module will require
[1,452]   else a mixed of ints and a single other consistent type. This avoids
[1,453]   some interoperability issues that arose with the previous approach of
[1,456] - Issue #20478: the statistics module now treats collections.Counter inputs
[1,457]   like any other iterable.
[1,459] - Issue #17369: get_filename was raising an exception if the filename
[1,463] - Issue #20013: Some imap servers disconnect if the current mailbox is
[1,465]   handles the 'bye' correctly.
[1,467] - Issue #20531: Revert 3.4 version of fix for #19063, and apply the 3.3
[1,471] - Issue #20476: If a non-compat32 policy is used with any of the email parsers,
[1,472]   EmailMessage is now used as the factory class.  The factory class should
[1,473]   really come from the policy; that will get fixed in 3.5.
[1,480] - Issue #19186: Restore namespacing of expat symbols inside the pyexpat module.
[1,482] - Issue #20053: ensurepip (and hence venv) are no longer affected by the
[1,483]   settings in the default pip configuration file.
[1,485] - Issue #20426: When passing the re.DEBUG flag, re.compile() displays the
[1,486]   debug output every time it is called, regardless of the compilation cache.
[1,496] - Issue #20354: Fix an alignment issue in the tracemalloc module on 64-bit
[1,507] - Issue #20311, #20452: poll and epoll now round the timeout away from zero,
[1,512]   zero.  However, the granularity property and asyncio's resolution feature
[1,516]   unix pipes; Future.set_exception() instantiates the exception
[1,522]   in gather(), wait(), as_completed(); use a bytearray for buffering
[1,532] - Issue #20372: inspect.getfile (and a bunch of other inspect functions that
[1,537]   positional-only parameters from others.
[1,558] - Issue #20105: the codec exception chaining now correctly sets the
[1,559]   traceback of the original exception as its __traceback__ attribute.
[1,566] - Issue #14455: plistlib: fix serializing integers in the range
[1,567]   of an unsigned long long but outside of the range of signed long long for
[1,576] - Update the python.gif icon for the Idle classbrowser and pathbowser
[1,577]   from the old green snake to the new blue and yellow snakes.
[1,589] - Issue #19990: Added tests for the imghdr module.  Based on patch by
[1,603] - Issue #20456: Argument Clinic now observes the C preprocessor conditional
[1,604]   compilation statements of the C files it parses.  When a Clinic block is
[1,608] - Issue #20456: Cloned functions in Argument Clinic now use the correct
[1,609]   name, not the name of the function they were cloned from, for text
[1,615]   for a parameter in Python and C, using "as" on the parameter line.
[1,622] - Issue #20326: Argument Clinic now generates separate checksums for the
[1,623]   input and output sections of the block, allowing external tools to verify
[1,624]   that the input has not changed (and thus the output is not out-of-date).
[1,641] - Issue #20488: Change wording to say importlib is *the* implementation of
[1,644] - Issue #6386: Clarify in the tutorial that specifying a symlink to execute
[1,645]   means the directory containing the executed script and not the symlink is
[1,669]   the source encoding was specified on the second line.  Now the source encoding
[1,670]   declaration on the second line isn't effective if the first line contains
[1,671]   anything except a comment.  'python -x' works now again with files with the
[1,679]   issues listed below.  E.g. wait_for() now cancels the inner task if
[1,680]   the timeout occcurs; tweaked the set of exported symbols; renamed
[1,686]   between the resolution of the BaseEventLoop.time() method and the resolution
[1,687]   of the selector. The granuarility is used in the scheduler to round time and
[1,698]   correctly (for example, by the @contextmanager decorator). The infinite
[1,699]   loop this caused is now avoided by checking if the expected context is
[1,704] - Issue #20262: Warnings are raised now when duplicate names are added in the
[1,708]   @expectedFailure successful if they pass.
[1,720] - Issue #20245: The open functions in the tarfile module now correctly handle
[1,723] - Issue #20242: Fixed basicConfig() format strings for the alternative
[1,724]   formatting styles. Thanks to kespindler for the bug report and patch.
[1,730]   using a more efficient algorithm that doesn't have the bug.
[1,738] - Issue #19097: Raise the correct Exception when cgi.FieldStorage is given an
[1,750] - Issue #18960: The tokenize module now ignore the source encoding declaration
[1,751]   on the second line if the first line contains anything except a comment.
[1,770] - Issue #14455: Fix some problems with the new binary plist support in plistlib.
[1,778] - Issue #18960: IDLE now ignores the source encoding declaration on the second
[1,779]   line if the first line contains anything except a comment.
[1,787] - Issue #19804: The test_find_mac test in test_uuid is now skipped if the
[1,802]   kwargs (or args), the PyArg_NoKeywords (or PyArg_NoPositional) calls
[1,803]   generated are only run when the type object is an exact match.
[1,808] - Issue #20390: Argument Clinic converters now have a new template they can
[1,809]   inject code into: "modifiers".  Code put there is run in the parsing
[1,810]   function after argument parsing but before the call to the impl.
[1,814] - Issue #20381: Argument Clinic now sanity checks the default argument when
[1,819]   __new__ are always of type newfunc, the type of the tp_new slot.
[1,821]   the type of tp_init.
[1,823] - Issue #20189: Argument Clinic now suppresses the docstring for __new__
[1,824]   and __init__ functions if no docstring is provided in the input.
[1,826] - Issue #20189: Argument Clinic now suppresses the "self" parameter in the
[1,832] - Issue #20299: Argument Clinic custom converters may now change the default
[1,842]   requires them.  Disable executable bits and shebang lines in test and
[1,845]   shebang lines in the unittestgui and checkpip scripts.
[1,847] - Issue #20268: Argument Clinic now supports cloning the parameters and
[1,860] - Issue #18960: 2to3 and the findnocoding.py script now ignore the source
[1,861]   encoding declaration on the second line if the first line contains anything
[1,870] - Issue #20141: Improved Argument Clinic's support for the PyArg_Parse "O!"
[1,898] - Issue #19526: Exclude all new API from the stable ABI. Exceptions can be
[1,908] - Issue #19787: PyThread_set_key_value() now always set the value. In Python
[1,909]   3.3, the function did nothing if the key already exists (if the current value
[1,912] - Issue #14432: Remove the thread state field from the frame structure. Fix a
[1,913]   crash when a generator is created in a C thread that is destroyed while the
[1,915]   the frame kept a reference to the Python state of the destroyed C thread. The
[1,920]   the first time and PyEval_InitThreads() was not called yet, a GIL needs to be
[1,945] - Issue #20111: pathlib.Path.with_suffix() now sanity checks the given suffix.
[1,953] - Issue #19422: Explicitly disallow non-SOCK_STREAM sockets in the ssl
[1,954]   module, rather than silently let them emit clear text data.
[1,957]   calculated.  Generalized support of the euro modifier.
[1,978]   the file before the method is possibly called.
[1,983] - Issue #19967: Thanks to the PEP 442, asyncio.Future now uses a
[1,984]   destructor to log uncaught exceptions, instead of the dedicated
[2,003] - Issue #20026: Fix the sqlite module to handle correctly invalid isolation
[2,009] - Issue #19855: uuid.getnode() on Unix now looks on the PATH for the
[2,010]   executables used to find the mac address, with /sbin and /usr/sbin as
[2,019]   otherwise rely on parent modules being correctly imported prior to
[2,023]   parent is created with the default permissions, ignoring the mode argument
[2,024]   (mimicking the POSIX "mkdir -p" command).
[2,026] - Issue #19887: Improve the Path.resolve() algorithm to support certain
[2,031] - Issue #19911: ntpath.splitdrive() now correctly processes the 'İ' character
[2,035]   respects the -f and -q flags instead of ignoring them.
[2,037] - Issue #19623: Fixed writing to unseekable files in the aifc module.
[2,039] - Issue #19946: multiprocessing.spawn now raises ImportError when the module to
[2,040]   be used as the main module cannot be imported.
[2,043]   Fixed integer overflow in the eventmask parameter.
[2,045] - Issue #19063: if a Charset's body_encoding was set to None, the email
[2,046]   package would generate a message claiming the Content-Transfer-Encoding
[2,047]   was 7bit, and produce garbage output for the content.  This now works.
[2,048]   A couple of other set_payload mishandlings of non-ASCII are also fixed.
[2,055]   and move the function to importlib.util.
[2,058]   reference cycles between frames and the _Outcome instance.
[2,060] - Issue #17429: platform.linux_distribution() now decodes files from the UTF-8
[2,061]   encoding with the surrogateescape error handler, instead of decoding from the
[2,062]   locale encoding in strict mode. It fixes the function on Fedora 19 which is
[2,063]   probably the first major distribution release with a non-ASCII name. Patch
[2,070]   rather than 4096 for efficiency.  A microbenchmark shows Linux and OS X
[2,077]   if the FD is closed (as long as it was registered).
[2,085]   objects by setting the encoding argument of Unpickler to be 'bytes'.
[2,095]   no exception detail exists (no colon following the exception's name, or
[2,096]   a colon does follow but no text follows the colon).
[2,101]   socket.socket can now avoid a second syscall if the ioctl() function can be
[2,102]   used, or if the non-blocking flag of the socket is unchanged.
[2,123] - Issue #19509: Add SSLContext.check_hostname to match the peer's certificate
[2,131] - Issue #3693: Make the error message more helpful when the array.array()
[2,132]   constructor is given a str. Move the array module typecode documentation to
[2,133]   the docstring of the constructor.
[2,135] - Issue #19088: Fixed incorrect caching of the copyreg module in
[2,149] - Issue #6477: Added support for pickling the types of built-in singletons
[2,155] - Issue #19708: Update pkgutil to use the new importer APIs.
[2,157] - Issue #19703: Update pydoc to use the new importer APIs.
[2,193]   disabled since 3.0 due to the changes in listcomp handling.
[2,202] - Issue #19828: Fixed test_site when the whole suite is run with -S.
[2,217]   of the time.  Patch by Julian Gindi.
[2,232] - Issue #19788: kill_python(_d).exe is now run as a PreBuildEvent on the
[2,239] - Issue #20265: Updated some parts of the Using Windows document.
[2,241] - Issue #20266: Updated some parts of the Windows FAQ.
[2,243] - Issue #20255: Updated the about and bugs pages.
[2,245] - Issue #20253: Fixed a typo in the ipaddress docs that advertised an
[2,248] - Issue #18840: Introduce the json module in the tutorial, and de-emphasize
[2,249]   the pickle module.
[2,251] - Issue #19845: Updated the Compiling Python on Windows section.
[2,271] - Use the repr of a module name in more places in import, especially
[2,275]   internal API to throw LookupError for known non-text encodings, rather
[2,276]   than attempting the encoding or decoding operation and then throwing a
[2,286]   error handler now works with the utf-16* and utf-32* codecs.  Based on
[2,297]   codec processing with a replacement exception of the same type that
[2,298]   includes the codec name in the error message. It ensures it only does this
[2,299]   when the creation of the replacement exception won't lose any information.
[2,301] - Issue #19466: Clear the frames of daemon threads earlier during the
[2,318] - Issue #19369: Optimized the usage of __length_hint__().
[2,320] - Issue #18603: Ensure that PyOS_mystricmp and PyOS_mystrnicmp are in the
[2,321]   Python executable and not removed by the linker's optimizer.
[2,323] - Issue #19306: Add extra hints to the faulthandler module's stack
[2,324]   dumps that these are "upside down".
[2,332] - Issue #13477: Added command line interface to the tarfile module.
[2,339]   computes the stack effect of bytecode instructions.
[2,346]   which anchor the pattern at both ends of the string to match.
[2,347]   Original patch by Matthew Barnett.
[2,349] - Issue #13592: Improved the repr for regular expression pattern objects.
[2,352] - Issue #19641: Added the audioop.byteswap() function to convert big-endian
[2,355] - Issue #15204: Deprecated the 'U' mode in file-like objects.
[2,359] - Issue #19668: Added support for the cp1125 encoding.
[2,371]   certificates from default stores or system stores. By default the method
[2,372]   loads CA certs for authentication of server certs.
[2,374] - Issue #19673: Add pathlib to the stdlib as a provisional module (PEP 428).
[2,377]   yield from rather than stepping out of the generator into its
[2,382]   markers in the new disassembly API (Patch by Claudiu Popa).
[2,390] - Issue #19555: Restore sysconfig.get_config_var('SO'), (and the distutils
[2,393] - Issue #8813: Add SSLContext.verify_flags to change the verification flags
[2,394]   of the context in order to enable certification revocation list (CRL)
[2,397] - Issue #18294: Fix the zlib module to make it 64-bit safe.
[2,415]   provide the same API elements as non-keyed cryptographic hash functions.
[2,420] - Issue #19449: in csv's writerow, handle non-string keys when generating the
[2,421]   error message that certain keys are not in the 'fieldnames' list.
[2,426] - Issue #2927: Added the unescape() function to the html module.
[2,428] - Issue #8402: Added the escape() function to the glob module.
[2,430] - Issue #17618: Add Base85 and Ascii85 encoding/decoding to the base64 module.
[2,436]   on a system with SO_REUSEPORT defined in the headers but run on a system
[2,439] - Fix compilation error under gcc of the ctypes module bundled libffi for arm.
[2,444] - Issue #19282: dbm.open now supports the context management protocol. (Inital
[2,447] - Issue #8311: Added support for writing any bytes-like objects in the aifc,
[2,450] - Issue #5202: Added support for unseekable files in the wave module.
[2,459]   parameters to sdist command accidentally rolled back as part of the
[2,465] - Issue #19406: implementation of the ensurepip module (part of PEP 453).
[2,470]   in the rollback of distutils2.
[2,472] - Issue #19544 and Issue #7457: Restore the read_pkg_file method to
[2,473]   distutils.dist.DistributionMetadata accidentally removed in the undo of
[2,476] - Issue #16685: Added support for any bytes-like objects in the audioop module.
[2,482] - Issue #19261: Added support for writing 24-bit samples in the sunau module.
[2,489] - Issue #19378: Fixed a number of cases in the dis module where the new
[2,492] - Issue #19378: Removed the "dis.Bytecode.show_info" method
[2,494] - Issue #19378: Renamed the "dis.Bytecode.display_code" method to
[2,495]   "dis.Bytecode.dis" and converted it to returning a string rather than
[2,498] - Issue #19378: the "line_offset" parameter in the new "dis.get_instructions"
[2,499]   API has been renamed to "first_line" (and the default value and usage
[2,500]   changed accordingly). This should reduce confusion with the more common use
[2,501]   of "offset" in the dis docs to refer to bytecode offsets.
[2,520]   the filelist, preventing failure outlined in the ticket.
[2,523]   by the HTML5 standard.
[2,525] - Issue #15114: The html.parser module now raises a DeprecationWarning when the
[2,526]   strict argument of HTMLParser or the HTMLParser.error method are used.
[2,528] - Issue #19410: Undo the special-casing removal of '' for
[2,531] - Issue #19424: Fix the warnings module to accept filename containing surrogate
[2,544] - Issue #19227: Try to fix deadlocks caused by re-seeding then OpenSSL
[2,565] - Issue #19330: the unnecessary wrapper functions have been removed from the
[2,566]   implementations of the new contextlib.redirect_stdout and
[2,567]   contextlib.suppress context managers, which also ensures they provide
[2,570] - Issue #19393: Fix symtable.symtable function to not be confused when there are
[2,586] - Issue #19379: Lazily import linecache in the warnings module, to make
[2,589] - Issue #19288: Fixed the "in" operator of dbm.gnu databases for string
[2,592] - Issue #19287: Fixed the "in" operator of dbm.ndbm databases for string
[2,595] - Issue #19327: Fixed the working of regular expressions with too big charset.
[2,600] - Issue #19350: Increasing the test coverage of macurl2path. Patch by Colin
[2,603] - Issue #19365: Optimized the parsing of long replacement string in re.sub*()
[2,631]   of the wrong type.
[2,634]   limiting the call to readline().  Original patch by Michał
[2,637] - Issue #17087: Improved the repr for regular expression match objects.
[2,642] - Issue #19664: test_userdict's repr test no longer depends on the order
[2,646]   import, converting from test_main to unittest.main, and running the
[2,649] - Issue #19378: the main dis module tests are now run with both stdout
[2,652] - Issue #19378: removed the not-actually-helpful assertInstructionMatches
[2,668]   attempt to reduce confusion in the glossary by not saying there are
[2,674] - Issue #19358: "make clinic" now runs the Argument Clinic preprocessor
[2,688] - Issue #19520: Fix compiler warning in the _sha3 module on 32bit Windows.
[2,698] - Issue #19649: On OS X, the same set of file names are now installed
[2,705]   upgrade pip by default, using the bundled pip provided by the new ensurepip
[2,707]   available to override the default ensurepip "--upgrade" option.  The option
[2,710] - Issue #19551: PEP 453 - the OS X installer now installs pip by default.
[2,723] - Issue #19730: Argument Clinic now supports all the existing PyArg
[2,725]   "self converters" and the "version" directive.
[2,728]   default (pass --without-pip to request the old behaviour)
[2,750]   the code is optimistic that if something exists in a directory named exactly
[2,751]   like the possible package being searched for that it's in actuality a
[2,754] - Issue #18416: importlib.machinery.PathFinder now treats '' as the cwd and
[2,757]   __file__ (this does not affect modules specified by path on the CLI but it
[2,761] - Issue #4555: All exported C symbols are now prefixed with either
[2,769] - Issue #16742: The result of the C callback PyOS_ReadlineFunctionPointer must
[2,780]   of data at the front (slice deletion).
[2,787] - Issue #19078: memoryview now correctly supports the reversed builtin
[2,796] - Issue #18235: Fix the sysconfig variables LDSHARED and BLDSHARED under AIX.
[2,799] - Issue #18606: Add the new "statistics" module (PEP 450).  Contributed
[2,812] - Issue #19262: Initial check in of the 'asyncio' package (a.k.a. Tulip,
[2,813]   a.k.a. PEP 3156).  There are no docs yet, and the PEP is slightly
[2,814]   out of date with the code.  This module will have *provisional* status
[2,817] - Issue #19276: Fixed the wave module on 64-bit big-endian platforms.
[2,819] - Issue #19266: Rename the new-in-3.4 ``contextlib.ignore`` context manager
[2,821]   descriptions of that operation elsewhere in the language and standard
[2,824] - Issue #18891: Completed the new email package (provisional) API additions
[2,829] - Issue #18999: Multiprocessing now supports 'contexts' with the same API
[2,830]   as the module, but bound to specified start methods.
[2,832] - Issue #18468: The re.split, re.findall, and re.sub functions and the group()
[2,838] - Issue #18776: atexit callbacks now display their full traceback when they
[2,841] - Issue #17827: Add the missing documentation for ``codecs.encode`` and
[2,847] - Issue #18582: Add 'pbkdf2_hmac' to the hashlib module. It implements PKCS#5
[2,853] - Issue #19209: Remove import of copyreg from the os module to speed up
[2,855]   reside in the os module.
[2,857] - Issue #19205: Don't import the 're' module in site and sysconfig module to
[2,860] - Issue #9548: Add a minimal "_bootlocale" module that is imported by the
[2,861]   _io module instead of the full locale module.
[2,863] - Issue #18764: remove the 'print' alias for the PDB 'p' command so that it no
[2,864]   longer shadows the print function.
[2,871] - Issue #18716: Deprecate the formatter module.
[2,879]   object that exports a 1 dimensional array of bytes (this means the same
[2,888]   NotImplemented being returned by the underlying comparison function (Patch
[2,892]   from the __exit__ callbacks of inner context managers (Patch by Hrvoje
[2,895] - Issue #12641: Avoid passing "-mno-cygwin" to the mingw32 compiler, except
[2,899]   if no history has been read already.  This avoids double writes to the
[2,904] - Issue #19095: SSLSocket.getpeercert() now raises ValueError when the
[2,922]   encoding and error handler for the standard IO streams (initial patch by
[2,942] - Issue #18972: Modernize email examples and use the argparse module in them.
[2,955]     4. there was no obvious way to configure an intel-32 only build.
[2,957] - Issue #19019: Change the OS X installer build script to use CFLAGS instead
[2,972] - Issue #19098: Prevent overflow in the compiler when the recursion limit is set
[2,979]   attributes returned by `dir()` that are located in the metaclass.
[2,981] - Issue #18950: Fix miscellaneous bugs in the sunau module.
[3,002] - Issue #18978: ``urllib.request.Request`` now allows the method to be
[3,003]   indicated on the class and no longer sets it to None in ``__init__``.
[3,005] - Issue #18626: the inspect module now offers a basic command line
[3,012]   before moving them into place, to avoid race conditions with other programs
[3,013]   that may be accessing the maildir directory.
[3,016]   argument (and therefore is reading the user's $HOME/.netrc file), it now
[3,017]   enforces the same security rules as typical ftp clients: the .netrc file must
[3,018]   be owned by the user that owns the process and must not be readable by any
[3,019]   other user.
[3,028]   to ensure that a block of code emits a message using the logging module.
[3,034]   in the underlying iterables.
[3,037]   if all the necessary functions have already been found in libuuid.  Patch by
[3,040] - The :envvar:`PYTHONFAULTHANDLER` environment variable now only enables the
[3,041]   faulthandler module if the variable is non-empty. Same behaviour than other
[3,045]   the local variables of all the stack frames referenced by a traceback
[3,066] - Issue #17003: Unified the size argument names in the io module with common
[3,072] - Issue #18596: Support the use of address sanity checking in recent versions
[3,073]   of clang and GCC by appropriately marking known false alarms in the small
[3,079] - Issue #18873: 2to3 and the findnocoding.py script now detect Python source
[3,093] - Issue #18571: Implementation of the PEP 446: file descriptors and file
[3,098] - Issue #11619: The parser and the import machinery do not encode Unicode
[3,108] - Issue #18771: Add optimization to set object lookups to reduce the cost
[3,112] - Issue #16105: When a signal handler fails to write to the file descriptor
[3,114]   of ignoring the error.
[3,116] - Issue #18722: Remove uses of the "register" keyword in C code.
[3,137] - Issue #18808: Thread.join() now waits for the underlying thread state to
[3,144] - Issue #18852: Handle case of ``readline.__doc__`` being ``None`` in the new
[3,148]   the _sre module.
[3,153] - Issue #18878: sunau.open now supports the context management protocol.  Based on
[3,159] - Issue #18876: The FileIO.mode attribute now better reflects the actual mode
[3,160]   under which the file was opened.  Patch by Erik Bray.
[3,166] - Issue #18901: The sunau getparams method now returns a namedtuple rather than
[3,169] - Issue #17487: The result of the wave getparams method now is pickleable again.
[3,183] - Issue #16611: http.cookie now correctly parses the 'secure' and 'httponly'
[3,190]   instead of symlinks even where symlinks are available and the default.
[3,197] - Issue #17702: On error, os.environb now suppresses the exception context
[3,198]   when raising a new KeyError with the original key.
[3,206]   supersedes the previous fixes for #14360, #1717, and #16564.
[3,212]   in the tkinter module.
[3,215]   A pthread_atfork() parent handler is used to seed the PRNG with pid, time
[3,221] - Issue #18777: The ssl module now uses the new CRYPTO_THREADID API of
[3,222]   OpenSSL 1.0.0+ instead of the deprecated CRYPTO id callback function.
[3,230]   inside subjectAltName correctly. Formerly the module has used OpenSSL's
[3,231]   GENERAL_NAME_print() function to get the string represention of ASN.1
[3,237] - Issue #18756: Improve error reporting in os.urandom() when the failure
[3,239]   exhausting the file descriptor limit).
[3,244] - Issue #18532: Change the builtin hash algorithms' names to lower case names
[3,251] - Issue #18405: Improve the entropy of crypt.mksalt().
[3,254]   instead of 6, to reduce the risk of filename collision. The entropy was
[3,255]   reduced when uppercase letters were removed from the charset used to generate
[3,262]   include the module name when a key argument is missing.
[3,275]   if methods have annotations; it now correctly displays the annotations.
[3,282] - Issue #18621: Prevent the site module's patched builtins from keeping
[3,293] - Issue #18920: argparse's default destination for the version action (-v,
[3,294]   --version) has also been changed to stdout, to match the Python executable.
[3,299] - Issue #18623: Factor out the _SuppressCoreFiles context manager into
[3,304] - Issue #15507: test_subprocess's test_send_signal could fail if the test
[3,305]   runner were run in an environment where the process inherited an ignore
[3,306]   setting for SIGINT.  Restore the SIGINT handler to the desired
[3,335] - Issue #15663: Tcl/Tk 8.5.14 is now included with the OS X 10.6+ 64-/32-bit
[3,337]   Tcl/Tk 8.5 to work around the problems in the Apple-supplied Tcl/Tk 8.5
[3,344]   their version strings to stdout, and not to sderr.
[3,365]   their globals to None, in most cases.
[3,378] - Issue #15905: Fix theoretical buffer overflow in handling of sys.argv[0],
[3,379]   prefix and exec_prefix if the operation system does not obey MAXPATHLEN.
[3,386] - Issue #18342: Use the repr of a module name when an import fails when using
[3,398] - Issue #17206: On Windows, increase the stack size from 2 MB to 4.2 MB to fix
[3,399]   a stack overflow in the marshal module (fix a crash in test_marshal).
[3,402] - Issue #3329: Implement the PEP 445: Add new APIs to customize Python memory
[3,405] - Issue #18328: Reorder ops in PyThreadState_Delete*() functions. Now the
[3,406]   tstate is first removed from TLS and then deallocated.
[3,431] - Tweak the exception message when the magic number or size value in a bytecode
[3,435]   change the C type of seqiterobject.it_index from long to Py_ssize_t.
[3,437] - Issue #18065: Don't set __path__ to the package name for frozen packages.
[3,440]   attributes on the module (e.g. __name__, __loader__, __package__, __file__,
[3,445] - Issue #12370: Prevent class bodies from interfering with the __class__
[3,451] - Issue #17237: Fix crash in the ASCII decoder on m68k.
[3,453] - Issue #17927: Frame objects kept arguments alive if they had been
[3,454]   copied into a cell, even if the cell was cleared.
[3,459] - Issue #7330: Implement width and precision (ex: "%5.3s") for the format
[3,467]   resources which would otherwise remain perpetually alive (e.g. database
[3,470] - Issue #17408: Avoid using an obsolete instance of the copyreg module when
[3,471]   the interpreter is shutdown and then started again.
[3,473] - Issue #5845: Enable tab-completion in the interactive interpreter by
[3,480]   over the closures.
[3,482] - Issue #17863: In the interactive console, don't loop forever if the encoding
[3,487] - Issue #18698: Ensure importlib.reload() returns the module out of sys.modules.
[3,493]   exception instance for the 'value' element of the arg tuple if the exception
[3,513] - Issue #14439: Python now prints the traceback on runpy failure at startup.
[3,521]   the importlib transition.
[3,523] - Issue #17610: Don't rely on non-standard behavior of the C qsort() function.
[3,526]   disabled by default.  It can be re-enabled with the `-X showrefcount` option.
[3,530] - Issue #17275: Corrected class name in init error messages of the C version of
[3,548]   in the interpreter.
[3,550] - Issue #17137: When an Unicode string is resized, the internal wide character
[3,553] - Issue #17043: The unicode-internal decoder no longer read past the end of
[3,556] - Issue #17098: All modules now have __loader__ set even if they pre-exist the
[3,559] - Issue #16979: Fix error handling bugs in the unicode-escape-decode decoder.
[3,561] - Issue #16772: The base argument to the int constructor no longer accepts
[3,562]   floats, or other non-integer objects with an __int__ method.  Objects
[3,565] - Issue #10156: In the interpreter's initialization phase, unicode globals
[3,568] - Issue #16980: Fix processing of escaped non-ascii bytes in the
[3,571] - Issue #16975: Fix error handling bug in the escape-decode bytes decoder.
[3,577]   allow the new child map to be specified explicitly.
[3,580]   exception when trying to populate its cache and it finds out the directory is
[3,587] - Issue #11461: Fix the incremental UTF-16 decoder. Original patch by
[3,597] - Issue #16759: Support the full DWORD (unsigned long) range in Reg2Py
[3,601] - Issue #14420: Support the full DWORD (unsigned long) range in Py2Reg
[3,604] - Issue #11939: Set the st_dev attribute of stat_result to allow Windows to
[3,605]   take advantage of the os.path.samefile/sameopenfile/samestat implementations
[3,606]   used by other platforms.
[3,609]   accepts non integer values.  Consistent with the behavior in Python 2.
[3,616] - Issue #16597: In buffered and text IO, call close() on the underlying stream
[3,619] - Issue #16722: In the bytes() constructor, try to call __bytes__ on the
[3,623]   handled correctly (previously, the first module loaded from that file
[3,627]   chain, the object could remain reachable through its weakref even though
[3,633]   literals. As a result, these constants are never loaded at runtime from
[3,636] - Issue #16455: On FreeBSD and Solaris, if the locale is C, the
[3,637]   ASCII/surrogateescape codec is now used (instead of the locale encoding) to
[3,638]   decode the command line arguments. This change fixes inconsistencies with
[3,639]   os.fsencode() and os.fsdecode(), because these operating systems announce an
[3,640]   ASCII locale encoding, but actually use the ISO-8859-1 encoding in practice.
[3,655]   parameters where passed to the interpreter.  Patch by Hieu Nguyen.
[3,660] - Issue #16290: A float return value from the __complex__ special method is no
[3,661]   longer accepted in the complex() constructor.
[3,664]   encoded/decoded to/from UTF-8/surrogateescape, instead of the locale encoding
[3,672]   handled by Python to not persist after os.fork() in the child process.
[3,675]   rather than raising OverflowError.
[3,680] - Issue #8271: the utf-8 decoder now outputs the correct number of U+FFFD
[3,681]   characters when used with the 'replace' error handler on invalid utf-8
[3,684] - Issue #5765: Apply a hard recursion limit in the compiler instead of
[3,685]   blowing the stack and segfaulting. Initial patch by Andrea Griffini.
[3,690] - Issue #16336: fix input checking in the surrogatepass error handler.
[3,699] - Issue #16309: Make PYTHONPATH="" behavior the same as if PYTHONPATH
[3,702] - Issue #10189: Improve the error reporting of SyntaxErrors related to global
[3,708] - Issue #14625: Rewrite the UTF-32 decoder. It is now 3x to 4x faster. Patch
[3,712]   received a nonempty dict from the constructor.
[3,717] - Issue #12805: Make bytes.join and bytearray.join faster when the separator
[3,720] - Issue #6074: Ensure cached bytecode files can always be updated by the
[3,721]   user that created them, even when the source file is read-only.
[3,736] - Issue #15379: Fix passing of non-BMP characters as integers for the charmap
[3,744]   (which defines `AT_FDCWD` as ``0xffd19553``), harmless on other platforms.
[3,748] - Issue #15448: Buffered IO now frees the buffer when closed, instead
[3,770] - Issue #13461: Fix a crash in the TextIOWrapper.tell method on 64-bit
[3,775] - Issue #14323: Expanded the number of digits in the coefficients for the
[3,776]   RGB -- YIQ conversions so that they match the FCC NTSC versions.
[3,780] - Issue #17557: Fix os.getgroups() to work with the modified behavior of
[3,783] - Issue #18608: Avoid keeping a strong reference to the locale module
[3,784]   inside the _io module.
[3,793] - Issue #17616: wave.open now supports the context management protocol.
[3,805] - Issue #18556: Check the return type of PyUnicode_AsWideChar() in ctype's
[3,826] - Issue #18480: Add missing call to PyType_Ready to the _elementtree extension.
[3,833]   platform._bcd2str have been removed. This does not affect the public
[3,834]   interface of the platform module.
[3,836] - Issue #17482: functools.update_wrapper (and functools.wraps) now set the
[3,837]   __wrapped__ attribute correctly even if the underlying function has a
[3,847]   an encoded character immediately followed the '?' that follows the CTE
[3,854]   and thus was always falling back to stdin, and would then raise an exception
[3,856]   All of these issues are now fixed.
[3,858] - Issue #17198: Fix a NameError in the dbm module.  Patch by Valentina
[3,861] - Issue #18013: Fix cgi.FieldStorage to parse the W3C sample form.
[3,866] - Issue #18347: ElementTree's html serializer now preserves the case of
[3,871] - Issue #18343: faulthandler.register() now keeps the previous signal handler
[3,872]   when the function is called twice, so faulthandler.unregister() restores
[3,873]   correctly the original signal handler.
[3,878]   segfault inside the _pickle C extension.
[3,893] - Issue #11390: Add -o and -f command line options to the doctest CLI to
[3,896] - Issue #18135: ssl.SSLSocket.write() now raises an OverflowError if the input
[3,898]   raises a ValueError if the password is longer than 2 gigabytes. The ssl
[3,901] - Issue #11016: Add C implementation of the stat module as _stat.
[3,912]   when \r\n appears at end of 65535 bytes without other newlines.
[3,921] - Issue #18058, 18057: Make the namespace package loader meet the
[3,927] - subprocess: Prevent a possible double close of parent pipe fds when the
[3,928]   subprocess exec runs into an error.  Prevent a regular multi-close of the
[3,932]   source_from_cache() while documenting the equivalent functions in imp as
[3,941] - Issue #18149: Add filecmp.clear_cache() to manually clear the filecmp cache.
[3,953]   the default locations for cafile and capath.
[3,960] - Issue #18109: os.uname() now decodes fields from the locale encoding, and
[3,961]   socket.gethostname() now decodes the hostname from the locale encoding,
[3,962]   instead of using the UTF-8 encoding in strict mode.
[3,967]   module attributes. Leads to the pending deprecation of
[3,970] - Issue #17403: urllib.parse.robotparser normalizes the urls before adding to
[3,977] - Added importlib.util.module_to_load to return a context manager to provide the
[3,984]   binascii.Error if there are non-b32-alphabet characters present in the input
[3,990] - Issue #8240: Set the SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER flag on SSL
[3,996] - Issue #16986: ElementTree now correctly works with string input when the
[4,018] - Issue #17981: logging's SysLogHandler now closes the socket when it catches
[4,021] - Issue #17964: Fix os.sysconf(): the return type of the C sysconf() function
[4,024] - Fix typos in the multiprocessing module.
[4,026] - Issue #17754: Make ctypes.util.find_library() independent of the locale.
[4,030] - Issue #17606: Fixed support of encoded byte strings in the XMLGenerator
[4,040] - Issue #16601: Restarting iteration over tarfile really restarts rather
[4,044]   or applications changing the rl_completer_word_break_characters global
[4,050] - Issue #11816: multiple improvements to the dis module: get_instructions
[4,067]   raise an OSError with ENOTCONN, instead of an AttributeError, when the
[4,082]   preserves the line endings of the original file.
[4,084] - Issue #17272: Making the urllib.request's Request.full_url a descriptor.
[4,093]   allowing the subprocess's stdin to be provided as a (byte) string.
[4,099] - Issue #16694: Add a pure Python implementation of the operator module.
[4,102] - Issue #11182: remove the unused and undocumented pydoc.Scanner class.
[4,114] - Issue #17720: Fix the Python implementation of pickle.Unpickler to correctly
[4,115]   process the APPENDS opcode when it is used on non-list objects.
[4,117] - Issue #17012: shutil.which() no longer falls back to the PATH environment
[4,122] - Issue #17341: Include the invalid name in the error messages from re about
[4,125] - Issue #17702: os.environ now raises KeyError with the original environment
[4,126]   variable name (str on UNIX), instead of using the encoded name (bytes on
[4,129] - Issue #16163: Make the importlib based version of pkgutil.iter_importers
[4,132] - Issue #16804: Fix a bug in the 'site' module that caused running
[4,135] - Issue #15480: Remove the deprecated and unused TYPE_INT64 code from marshal.
[4,141]   in the re module.  Patch by Nickolai Zeldovich.
[4,146] - Issue #9556: the logging package now allows specifying a time-of-day for a
[4,150]   has a different __name__ than its name in the TestCase class dictionary.
[4,152] - Issue #17487: The wave getparams method now returns a namedtuple rather than
[4,158] - Issue #17093: Make the ABCs in importlib.abc provide default values or raise
[4,159]   reasonable exceptions for their methods to make them more amenable to super()
[4,165] - Issue #17678: Remove the use of deprecated method in http/cookiejar.py by
[4,166]   changing the call to get_origin_req_host() to origin_req_host.
[4,175] - Issue #16795: On the ast.arguments object, unify vararg with varargannotation
[4,176]   and kwarg and kwargannotation. Change the column offset of ast.Attribute to be
[4,177]   at the attribute name.
[4,183]   it has a value of None or the attribute doesn't exist.
[4,185] - Issue #17032: The "global" in the "NameError: global name 'x' is not defined"
[4,188] - Issue #18080: When building a C extension module on OS X, if the compiler
[4,189]   is overriden with the CC environment variable, use the new compiler as
[4,190]   the default for linking if LDSHARED is not also overriden.  This restores
[4,193] - Issue #18113: Fixed a refcount leak in the curses.panel module's
[4,198] - Implement PEP 435 "Adding an Enum type to the Python standard library".
[4,206]   default values for the args and kwargs parameters.
[4,224] - Issue #17488: Change the subprocess.Popen bufsize parameter default value
[4,225]   from unbuffered (0) to buffering (-1) to match the behavior existing code
[4,226]   expects and match the behavior of the subprocess module in Python 2 to avoid
[4,233]   where the target handler wasn't configured first.
[4,239]   sending mail by closing the socket and reporting the 421 error code via the
[4,240]   exception appropriate to the command that received the error response.
[4,245] - Issue #17485: Also delete the Request Content-Length header if the data
[4,257] - Issue #17192: Update the ctypes module's libffi to v3.0.13.  This
[4,263] - Issue #17443: imaplib.IMAP4_stream was using the default unbuffered IO
[4,264]   in subprocess, but the imap code assumes buffered IO.  In Python2 this
[4,268]   'allmethods'; it was missing unbound methods on the class.
[4,270] - Issue #17474: Remove the deprecated methods of Request class.
[4,275] - Use the HTTPS PyPI url for upload, overriding any plain HTTP URL in pypirc.
[4,277] - Issue #5024: sndhdr.whichhdr now returns the frame count for WAV files
[4,278]   rather than -1.
[4,280] - Issue #17460: Remove the strict argument of HTTPConnection and removing the
[4,283] - Issue #16880: Do not assume _imp.load_dynamic() is defined in the imp module.
[4,285] - Issue #16389: Fixed a performance regression relative to Python 3.1 in the
[4,297] - Issue #1285086: Get rid of the refcounting hack and speed up
[4,301]   is not set, harmonizing with what happens when the attribute is set to None.
[4,303] - Expose the O_PATH constant in the os module if it is available.
[4,305] - Issue #17368: Fix an off-by-one error in the Python JSON decoder that caused
[4,313]   ignore specified exceptions, replacing the "except SomeException: pass" idiom.
[4,315] - Issue #14645: The email generator classes now produce output using the
[4,316]   specified linesep throughout.  Previously if the prolog, epilog, or
[4,321]   the list is being resized concurrently.
[4,323] - Issue #16962: Use getdents64 instead of the obsolete getdents syscall
[4,324]   in the subprocess module on Linux.
[4,326] - Issue #16935: unittest now counts the module as skipped if it raises SkipTest,
[4,341] - Issue #15132: Allow a list for the defaultTest argument of
[4,344] - Issue #17225: JSON decoder now counts columns in the first line starting
[4,345]   with 1, as in other lines.
[4,350] - Issue #13700: Fix byte/string handling in imaplib authentication when an
[4,357]   non-greedy repeat.  Patch by Matthew Barnett.
[4,363] - Issue #17143: Fix a missing import in the trace module.  Initial patch by
[4,372]   web-browser on the executable search path.
[4,375]   the disk is full.  Original patch by Amir Szekely.
[4,379] - Issue #16564: Fixed regression relative to Python2 in the operation of
[4,396] - Issue #13773: sqlite3.connect() gets a new `uri` parameter to pass the
[4,399] - Issue #16564: Fixed regression relative to Python2 in the operation of
[4,403]   SpooledTemporaryFile objects even when they have not yet rolled over.
[4,411]   various other functions now work correctly with 32-bit sample -0x80000000.
[4,415] - Issue #16723: httplib.HTTPResponse no longer marked closed when the connection
[4,418] - Issue #15359: Add CAN_BCM protocol support to the socket module. Patch by
[4,422]   sets in the email package.
[4,424] - Issue #16811: Fix folding of headers with no value in the provisional email
[4,432] - Issue #17089: Expat parser now correctly works with string input when the
[4,449] - Issue #15633: httplib.HTTPResponse is now mark closed when the server
[4,450]   sends less than the advertised Content-Length.
[4,462] - Issue #17071: Signature.bind() now works when one of the keyword arguments
[4,469]   Code now raises FileExistsError if the file path to be used for the
[4,471]   will not keep the file path type if it writes to that path.
[4,477]   now fills the ``os.environ`` variable correctly.
[4,483]   if all other iterators were very advanced before.
[4,488] - Issue #16957: shutil.which() no longer searches a bare file name in the
[4,495] - Issue #16993: shutil.which() now preserves the case of the path and extension
[4,498] - Issue #16992: On Windows in signal.set_wakeup_fd, validate the file
[4,501] - Issue #16422: For compatibility with the Python version, the C version of
[4,510] - Issue #16955: Fix the poll() method for multiprocessing's socket
[4,513] - SSLContext.load_dh_params() now properly closes the input file.
[4,516]   duplication. Thanks to Ronan Lamy for the report and taking an initial stab
[4,517]   at the problem.
[4,520]   and doesn't touch the underlying data with increfs and decrefs.
[4,524] - Issue #13899: \A, \Z, and \B now correctly match the A, Z, and B literals
[4,525]   when used inside character classes (e.g. '[\A]').  Patch by Matthew Barnett.
[4,528]   failing if the connection used a row factory (such as sqlite3.Row) that
[4,534]   file descriptor receive the incorrect type.
[4,540] - Issue #16860: In tempfile, use O_CLOEXEC when available to set the
[4,550] - Issue #16833: In http.client.HTTPConnection, do not concatenate the request
[4,551]   headers and body when the payload exceeds 16 KB, since it can consume more
[4,560]   section order within the parser. This makes `parser.update()` preserve section
[4,564]   clears previous values stored in the default section. Same goes for
[4,575]   non-ASCII strings.  Patch by Matthew Barnett.
[4,584] - Issue #16165: sched.scheduler.run() no longer blocks a scheduler for other
[4,601] - Issue #15701: Fix HTTPError info method call to return the headers information.
[4,608] - Issue #16626: Fix infinite recursion in glob.glob() on Windows when the
[4,609]   pattern contains a wildcard in the drive or UNC path.  Patch by Serhiy
[4,612] - Issue #15783: Except for the number methods, the C version of decimal now
[4,619] - Issue #16488: epoll() objects now support the `with` statement.  Patch
[4,622] - Issue #16298: In HTTPResponse.read(), close the socket when there is no
[4,623]   Content-Length and the incoming stream is finished.  Patch by Eran
[4,626] - Issue #16049: Add abc.ABC class to enable the use of inheritance to create
[4,627]   ABCs, rather than the more cumbersome metaclass=ABCMeta. Patch by Bruno
[4,630] - Expose the TCP_FASTOPEN and MSG_FASTOPEN flags in socket when they're
[4,636] - Issue #15872: Fix 3.3 regression introduced by the new fd-based shutil.rmtree
[4,640] - Issue #16248: Disable code execution from the user's home directory by
[4,641]   tkinter when the -E flag is passed to Python.  Patch by Zachary Ware.
[4,643] - Issue #13390: New function :func:`sys.getallocatedblocks()` returns the
[4,673] - Issue #16464: Reset the Content-Length header when a urllib Request is reused
[4,677]   lengths as unsigned 32-bit integers, like the C implementation does.
[4,686] - Issue #4473: Add a POP3.capa() method to query the capabilities advertised
[4,687]   by the POP3 server.  Patch by Lorenzo Catucci.
[4,689] - Issue #4473: Ensure the socket is shutdown cleanly in POP3.close().
[4,694] - Issue #15627: Add the importlib.abc.InspectLoader.source_to_code() method.
[4,697]   in the zipfile module.  Patch by Serhiy Storchaka.
[4,714] - Remove a bare print to stdout from the subprocess module that could have
[4,715]   happened if the child process wrote garbage to its pre-exec error pipe.
[4,721]   used for stdin/stdout/stderr pipes to the child when fork() fails.
[4,723] - Issue #14396: Handle the odd rare case of waitpid returning 0 when not
[4,732] - Issue #16409: The reporthook callback made by the legacy
[4,734]   block_size as it did in Python 3.2 and 2.7.  This matches the behavior of
[4,737] - Issue #16431: Use the type information when constructing a Decimal subtype
[4,744]   successive calls after EOF in unused_data, instead of only saving the argument
[4,745]   to the last call. decompressobj().flush() now correctly sets unused_data and
[4,746]   unconsumed_tail. A bug in the handling of MemoryError when setting the
[4,749] - Issue #12759: sre_parse now raises a proper error when the name of the group
[4,752] - Issue #16152: fix tokenize to ignore whitespace at the end of the code when
[4,758] - Issue #16230: Fix a crash in select.select() when one the lists changes
[4,761] - Issue #16228: Fix a crash in the json module where a list changes size
[4,770] - Issue #16316: mimetypes now recognizes the .xz and .txz (.tar.xz) extensions.
[4,774]   mode when the logdir option is specified.
[4,785] - Issue #16245: Fix the value of a few entities in html.entities.html5.
[4,787] - Issue #16301: Fix the localhost verification in urllib/request.py for file://
[4,790] - Issue #16250: Fix the invocations of URLError which had misplaced filename
[4,796] - Issue #14398: Fix size truncation and overflow bugs in the bz2 module.
[4,821]   message stating that args[0] did not exist when either the cwd or executable
[4,830]   source and destination are the same file. Patch by Atsuo Ishimoto.
[4,837] - Issue #14377: ElementTree.write and some of the module-level functions have
[4,848]   that allows an application to apply a verification function to the
[4,851] - Issue #16034: Fix performance regressions in the new `bz2.BZ2File`
[4,854] - `pty.spawn()` now returns the child process status returned by `os.waitpid()`.
[4,857]   return a returncode of 0 when the child has already exited or cannot be waited
[4,877] - Issue #15970: `xml.etree.ElementTree` now serializes correctly the empty HTML
[4,881]   ValueError when the file-like object is closed.  Patch by Alessandro Moura.
[4,883] - Issue #15876: Fix a refleak in the `curses` module: window.encoding.
[4,889]   `io.BytesIO` and `io.StringIO` objects now raise ValueError when the object
[4,899]   add_argument) only once. Before, the type function was called twice in the
[4,900]   case where the default was specified and the argument was given as well.  This
[4,901]   was especially problematic for the FileType type, as a default file would
[4,902]   always be opened, even if a file argument was specified on the command line.
[4,904] - Issue #15906: Fix a regression in argparse caused by the preceding change,
[4,907] - Issue #16113: Added sha3 module based on the Keccak reference implementation
[4,909]   `sha3_256`, `sha3_384` and `sha3_512`. As part of the patch some common
[4,912] - ctypes.call_commethod was removed, since its only usage was in the defunct
[4,915] - Issue #16692: Added TLSv1.1 and TLSv1.2 support for the ssl modules.
[4,924]   are selected. As with text blocks, this works best when the selection
[4,931]   changed when it has not been changed. This fix followed the addition of a
[4,932]   test file originally written by Phil Webster (the issue's main goal).
[4,934] - Issue #7136: In the Idle File menu, "New Window" is renamed "New File".
[4,956] - Issue #13495: Avoid loading the color delegator twice in IDLE.
[4,976] - Issue #17625: In IDLE, close the replace dialog after it is used.
[4,991] - Issue #9290: In IDLE the sys.std* streams now implement io.TextIOBase
[4,996] - Issue #16829: IDLE printing no longer fails if there are spaces or other
[4,997]   special characters in the file path.
[5,019]   permissions.  Patch by Catherine Devlin.
[5,021] - Issue #18273: move the tests in Lib/test/json_tests to Lib/test/test_json
[5,022]   and make them discoverable by unittest.  Patch by Zachary Ware.
[5,032]   test.support, and refactor temp_cwd() to use them.  Patch by Chris Jerdonek.
[5,034] - Issue #15494: test.support is now a package rather than a module (Initial
[5,047] - Issue #18375: Assume --randomize when --randseed is used for running the
[5,057] - Issue #17992: Add timeouts to asyncore and asynchat tests so that they won't
[5,071] - Issue #17835: Fix test_io when the default OS pipe buffer size is larger
[5,077] - Issue #12820: add tests for the xml.dom.minicompat module.
[5,103] - Issue #17448: test_sax now skips if there are no xml parsers available
[5,126]   the new server-side SNI support in the ssl module.  Initial patch by
[5,129] - Issue #17041: Fix testing when Python is configured with the
[5,212] - Issue #16559: Add more tests for the json module, including some from the
[5,215] - Issue #16661: Fix the `os.getgrouplist()` test by not assuming that it gives
[5,216]   the same output as :command:`id -G`.
[5,218] - Issue #16115: Add some tests for the executable argument to
[5,230] - Issue #15557: Added a test suite for the webbrowser module, thanks to Anton
[5,242] - Issue #18257: Fix readlink usage in python-config.  Install the python
[5,249] - Issue #17845: Clarified the message printed when some module are not built.
[5,254] - Issue #17547: In configure, explicitly pass -Wformat for the benefit for GCC
[5,263] - Issue #17550: Fix the --enable-profiling configure switch.
[5,267] - Issue #16754: Fix the incorrect shared library extension on linux. Introduce
[5,268]   two makefile macros SHLIB_SUFFIX and EXT_SUFFIX. SO now has the value of
[5,271] - Issue #5033: Fix building of the sqlite3 extension module when the
[5,291] - Issue #17029: Let h2py search the multiarch system include directory.
[5,304] - Issue #16836: Enable IPv6 support even if IPv6 is disabled on the build host.
[5,306] - Issue #16593: Have BSD 'make -s' do the right thing, thanks to Daniel Shahaf
[5,343]   expand their arguments once instead of multiple times.  Patch written by Illia
[5,346] - Issue #17522: Add the PyGILState_Check() API.
[5,367] - Issue #18440: Clarify that `hash()` can truncate the value returned from an
[5,372] - Issue #14097: improve the "introduction" page of the tutorial.
[5,374] - Issue #17977: The documentation for the cadefault argument's default value
[5,375]   in urllib.request.urlopen() is fixed to match the code.
[5,377] - Issue #6696: add documentation for the Profile objects, and improve
[5,388]   reported by Serhiy Storchaka and Matthew Barnett.
[5,390] - Issue #15465: Document the versioning macros in the C API docs rather than
[5,391]   the standard library docs. Patch by Kushal Das.
[5,393] - Issue #16406: Combine the pages for uploading and registering to PyPI.
[5,395] - Issue #16403: Document how distutils uses the maintainer field in
[5,402]   of the /tmp directory with better alternatives in the documentation.
[5,408]   all return the same result?" programming FAQ.
[5,410] - Issue #14901: Update portions of the Windows FAQ.
[5,413] - Issue #16267: Better document the 3.3+ approach to combining
[5,421] - Issue #16209: Move the documentation for the str built-in function to a new
[5,422]   str class entry in the "Text Sequence Type" section.
[5,429] - Issue #16400: Update the description of which versions of a given package
[5,438] - Issue #8040: added a version switcher to the documentation.  Patch by
[5,444] - Additional comments and some style changes in the concurrent.futures URL
[5,464] - Issue #11964: Document a change in v3.2 to the behavior of the indent
[5,491] - Issue #17028: Allowed Python arguments to be supplied to the Windows
[5,494] - Issue #17156: pygettext.py now detects the encoding of source files and
[5,500]   "class" or "def" keywords and with continuations at the start of line.
[5,504] - Issue #10966: Remove the concept of unexpected skipped tests.
[5,506] - Issue #9893: Removed the Misc/Vim directory.
[5,508] - Removed the Misc/TextMate directory.
[5,510] - Issue #16245: Add the Tools/scripts/parse_html5_entities.py script to parse
[5,511]   the list of HTML5 entities and update the html.entities.html5 dictionary.
[5,524] - Issue #18569: The installer now adds .py to the PATHEXT variable when extensions
[5,558] - Issue #15926: Fix crash after multiple reinitializations of the interpreter.
[5,572]   with the specification).
[5,574] - Issue #15925: Fix a regression in `email.util` where the `parsedate()` and
[5,575]   `parsedate_tz()` functions did not return None anymore when the argument could
[5,584] - Issue #15977: Fix memory leak in Modules/_ssl.c when the function
[5,622] - Issue #15340: Fix importing the random module when ``/dev/urandom`` cannot be
[5,623]   opened.  This was a regression caused by the hash randomization patch.
[5,625] - Issue #10650: Deprecate the watchexp parameter of the `Decimal.quantize()`
[5,628] - Issue #15785: Modify `window.get_wch()` API of the curses module: return a
[5,633] - Issue #14223: Fix `window.addch()` of the curses module for special characters
[5,634]   like curses.ACS_HLINE: the Python function addch(int) and addch(bytes) is now
[5,635]   calling the C function waddch()/mvwaddch() (as it was done in Python 3.2),
[5,637]   calling the C function wadd_wch()/mvwadd_wch() if the Python curses is linked
[5,649] - Issue #15814: The memoryview enhancements in 3.3.0 accidentally permitted the
[5,651]   formats. The intended restrictions have now been documented - they will be
[5,666] - Issue #15316: When an item in the fromlist for `__import__()` doesn't exist,
[5,674]   the cached bytecode file. (The migration to importlib reintroduced this
[5,675]   problem because these was no regression test. A test has been added as part of
[5,686] - Issue #14846: `importlib.FileFinder` now handles the case where the directory
[5,693]   using the clang compiler.
[5,703]   requested) even if the body contains undecodable bytes.
[5,716] - Issue #13579: `string.Formatter` now understands the 'a' conversion specifier.
[5,724] - Issue #15715: `importlib.__import__()` will silence an ImportError when the
[5,734]   on Windows without the ``if __name__ == '__main__'`` idiom.
[5,745] - Touched up the Python 2 to 3 porting guide.
[5,747] - Issue #14674: Add a discussion of the `json` module's standard compliance.
[5,750] - Create a 'Concurrent Execution' section in the docs, and split up the
[5,752]   classification scheme (splitting them across the new CE section, IPC and text
[5,753]   processing). Operating system limitations can be reflected with the Sphinx
[5,754]   ``:platform:`` tag, it doesn't make sense as part of the Table of Contents.
[5,756] - Issue #4966: Bring the sequence docs up to date for the Py3k transition and
[5,757]   the many language enhancements since they were original written.
[5,760]   more-awkward-but-at-least-not-wrong suggestion of "path based finder" in the
[5,765] - Issue #15630: Add an example for "continue" stmt in the tutorial.  Patch by
[5,771] - Issue #15747: ZFS always returns EOPNOTSUPP when attempting to set the
[5,772]   UF_IMMUTABLE flag (via either chflags or lchflags); refactor affected tests in
[5,775] - Issue #15285: Refactor the approach for testing connect timeouts using two
[5,778] - Issue #15743: Remove the deprecated method usage in `urllib` tests. Patch by
[5,781] - Issue #15615: Add some tests for the `json` module's handling of invalid input
[5,810] - Issue #15568: Fix the return value of ``yield from`` when StopIteration is
[5,816] - Issue #15534: Fix the fast-search function for non-ASCII Unicode strings.
[5,818] - Issue #15508: Fix the docstring for `__import__()` to have the proper default
[5,819]   value of 0 for 'level' and to not mention negative levels since they are not
[5,825] - Issue #14578: Support modules registered in the Windows registry again.
[5,827] - Issue #15466: Stop using TYPE_INT64 in marshal, to make importlib.h (and other
[5,846] - Issue #15202: Consistently use the name "follow_symlinks" for new parameters
[5,853]   inside itself, don't mask that fact behind a generic ImportError for the
[5,856] - Issue #15293: Add GC support to the AST base node type.
[5,861] - Issue #15110: Fix the tracebacks generated by "import xxx" to not show the
[5,872] - Issue #15033: Fix the exit status bug when modules invoked using -m switch,
[5,873]   return the proper failure return value (1). Patch contributed by Jeff Knupp.
[5,877]   calling str() on them.
[5,880]   Mac OS X, like other POSIX builds.
[5,901] - Issue #15559: To avoid a problematic failure mode when passed to the bytes
[5,902]   constructor, objects in the ipaddress module no longer implement `__index__()`
[5,903]   (they still implement `__int__()` as appropriate).
[5,905] - Issue #15546: Fix handling of pathological input data in the peek() and
[5,906]   read1() methods of the BZ2File, GzipFile and LZMAFile classes.
[5,909]   `os.sched_setaffinity()` now use regular sets of integers to represent the
[5,912] - Issue #15538: Fix compilation of the `socket.getnameinfo()` /
[5,915] - Issue #15519: Properly expose WindowsRegistryFinder in importlib (and use the
[5,918] - Issue #15502: Bring the importlib ABCs into line with the current state of the
[5,927] - Issue #6056: Make `multiprocessing` use setblocking(True) on the sockets it
[5,934] - Issue #15402: An issue in the struct module that caused `sys.getsizeof()` to
[5,946]   the first one.
[5,951]   user-defined types as keys or other unorderable keys.
[5,956] - Issue #14635: `telnetlib` will use poll() rather than select() when possible to
[5,957]   avoid failing due to the select() file descriptor limit.
[5,962]   importlib.machinery.FileFinder (similar to the way it already handled
[5,968]   importlib internally rather than the emulation.
[5,970] - Issue #15233: Python now guarantees that callables registered with the atexit
[5,976]   the documentation.
[5,992]   BufferedRWPair, from the io module.
[6,018] - Issue #15030: `importlib.abc.PyPycLoader` now supports the new source size
[6,024] - Issue #10571: Fix the "--sign" option of distutils' upload command.  Patch by
[6,028]   renamed over the old file when flush() is called on an mbox, MMDF or Babyl
[6,044] - Issue #15169, issue #14599: Strip out the C implementation of
[6,046]   used the Python code instead. Leads to PyImport_ExecCodeModuleObject() to not
[6,047]   try to infer the source path from the bytecode path as
[6,056] - Issue #15194: Update libffi to the 3.0.11 release.
[6,067] - Issue #15458: python-config gets a new option --configdir to print the $LIBPL
[6,073]   enhanced to show information on more C frames relevant to CPython within the
[6,076]   * C frames that are waiting on the GIL
[6,078]   * C frames that are due to the invocation of a PyCFunction
[6,088] - Issue #15295: Reorganize and rewrite the documentation on the import system.
[6,090] - Issue #15230: Clearly document some of the limitations of the runpy module and
[6,094]   functions in imp instead of just at the top of the relevant section.
[6,096] - Issue #15288: Link to the term "loader" in notes in pkgutil about how things
[6,097]   won't work as expected in Python 3.3 and mark the requisite functions as
[6,098]   "changed" since they will no longer work with modules directly imported by
[6,107] - Issue #15442: Expose the default list of directories ignored by
[6,108]   `filecmp.dircmp()` as a module attribute, and expand the list to more modern
[6,117] - Issue #15320: Make iterating the list of tests thread-safe when running tests
[6,125] - Issue #15230: Adopted a more systematic approach in the runpy tests.
[6,127] - Issue #15300: Ensure the temporary test working directories are in the same
[6,149]   by building a local copy of libsqlite3 rather than depending on the wide range
[6,161] - Issue #14197: For OS X framework builds, ensure links to the shared library
[6,162]   are created with the proper ABI suffix.
[6,167] - Issue #15235: Allow Berkley DB versions up to 5.3 to build the dbm module.
[6,183] - Issue #14815: Use Py_ssize_t instead of long for the object hash, to
[6,189]   from within these methods.
[6,197]   the work by Hirokazu Yamamoto.
[6,199] - Issue #15096: Removed support for ur'' as the raw notation isn't
[6,202] - Issue #13783: Generator objects now use the identifier APIs internally
[6,212]   in text mode if the encoding is not specified. Don't change temporary the
[6,213]   locale encoding using locale.setlocale(), use the current locale encoding
[6,214]   instead of the user preferred encoding.
[6,243] - Issue #15061: Re-implemented hmac.compare_digest() in C to prevent further
[6,250] - Support Mageia Linux in the platform module.
[6,252] - Issue #11678: Support Arch linux in the platform module.
[6,258] - Speed up _decimal by another 10-15% by caching the thread local context
[6,259]   that was last accessed. In the pi benchmark (64-bit platform, prec=9),
[6,262] - Remove the packaging module, which is not ready for prime time.
[6,268]   It is used automatically on platforms supporting the necessary os.openat()
[6,271] - Issue #15156: HTMLParser now uses the new "html.entities.html5" dictionary.
[6,273] - Issue #11113: add a new "html5" dictionary containing the named character
[6,274]   references defined by the HTML5 standard and the equivalent Unicode
[6,275]   character(s) to the html.entities module.
[6,277] - Issue #15114: the strict mode of HTMLParser and the HTMLParseError exception
[6,278]   are deprecated now that the parser is able to parse invalid markup.
[6,291] - Issue #14626: Large refactoring of functions / parameters in the os module.
[6,304] - Issue #444582: Add shutil.which, for finding programs on the system path.
[6,313]   timezone instance corresponding to the system local timezone when
[6,319] - Issue #14684: zlib.compressobj() and zlib.decompressobj() now support the use
[6,331]   also the module imported as importlib._bootstrap.
[6,383] - LZMAFile now accepts the modes "rb"/"wb"/"ab" as synonyms of "r"/"w"/"a".
[6,388] - BZ2File.__init__() and LZMAFile.__init__() now accept a file object as their
[6,389]   first argument, rather than requiring a separate "fileobj" argument.
[6,394]   when the path existed and had the S_ISGID mode bit set when it was
[6,396]   cannot control if the OS sets that bit for it or not.
[6,398] - Issue #14989: Make the CGI enable option to http.server available via command
[6,403] - Issue #1079: email.header.decode_header now correctly parses all the examples
[6,404]   in RFC2047.  There is a necessary visible behavior change: the leading and/or
[6,415] - Issue #14443: Ensure that .py files are byte-compiled with the correct Python
[6,426] - Issue #13783: Inadvertent additions to the public C API in the PEP 380
[6,427]   implementation have either been removed or marked as private interfaces.
[6,432] - Issue #15000: Support the "unique" x32 architecture in _posixsubprocess.c.
[6,449] - Issue #14982: Document that pkgutil's iteration functions require the
[6,451]   the importlib importers do not define).
[6,465]   for "parity" between PyArg_ParseTuple() and the Python/getargs.c static
[6,472]   block loading of the gdb hooks
[6,488]       and libs if the SDK used to build the interpreter is not
[6,491]       in particular, --enable-universalsdk=yes uses the Xcode default
[6,512] - Issue #14744: Use the new _PyUnicodeWriter internal API to speed up
[6,517] - Issue #14775: Fix a potential quadratic dict build-up due to the garbage
[6,528]   absolute imports are the default behavior in 3.0 instead of 2.7.
[6,531] - Issue #9260: A finer-grained import lock.  Most of the import sequence
[6,532]   now uses per-module locks rather than the global import lock, eliminating
[6,541]   attribute on BaseException. This replaces the original mechanism of PEP 409.
[6,543] - Issue #14417: Mutating a dict during lookup now restarts the lookup instead
[6,555] - Issue #14690: Use monotonic clock instead of system clock in the sched,
[6,558] - Issue #14443: Tell rpmbuild to use the correct version of Python in
[6,562]   a MIME part without seeing the closing MIME boundary.
[6,568] - Issue #14925: email now registers a defect when the parser decides that there
[6,569]   is a missing header/body separator line.  MalformedHeaderDefect, which the
[6,573]   the parent window is closed before the dialog. Patch by Roger Serwy.
[6,575] - Issue #8739: Updated smtpd to support RFC 5321, and added support for the
[6,585]   compatibility with Python 3.2 by default yet allow for the introduction of
[6,591] - Issue #14920: Fix the help(urllib.parse) failure on locale C on terminals.
[6,602] - Issue #14875: Use float('inf') instead of float('1e66666') in the json module.
[6,606] - PEP 3144, Issue #14814: Added the ipaddress module
[6,608] - Issue #14426: Correct the Date format in Expires attribute of Set-Cookie
[6,618] - Issue #14721: Send the correct 'Content-length: 0' header when the body is an
[6,621] - Issue #14072: Fix parsing of 'tel' URIs in urlparse by making the check for
[6,627] - Issue #14798: Fix the functions in pyclbr to raise an ImportError
[6,628]   when the first part of a dotted name is not a package. Patch by
[6,632]   using the same sys.flags as the current process.  Initial patch by
[6,639]   to use the default certificate store.  Initial patch by James Oakley.
[6,651]   accessing the Tk clipboard.  Modify clipboad_get() to first request type
[6,653]   environment, falling back to the current default type STRING if that fails.
[6,659]   Authentation in urllib2.
[6,666] - Issue #14532: Add a secure_compare() helper to the hmac module, to mitigate
[6,681]   importlib.machinery.ExtensionFileLoader.load_module() have their single
[6,682]   argument be optional. Allows for the replacement (and thus deprecation) of
[6,685] - Issue #13959: imp.get_suffixes() has been deprecated in favour of the new
[6,697]   the same as it was in Python 3.2.
[6,700]   import one of its modules then raise an error.
[6,709] - Add support for timeouts to the acquire() methods of
[6,735]   Other tooltipss have been corrected or improved and the number of tests
[6,742]   the Python 3.3 Grammar.
[6,759] - Issue #14705: The PyArg_Parse() family of functions now support the 'p' format
[6,761]   value into an integer--0 if it is "false", and 1 otherwise.
[6,766] - Issue #14863: Update the documentation of os.fdopen() to reflect the
[6,769] - Issue #14588: The language reference now accurately documents the Python 3
[6,773]   and correctly list the argument names in the function's explanation.
[6,784] - Issue #14699: Fix calling the classmethod descriptor directly.
[6,791] - Issue #14646: __import__() sets __loader__ if the loader did not.
[6,802]   their keys with other dictionaries. Classes take advantage of this to share
[6,803]   their instance dictionary keys for improved memory and performance.
[6,817] - Issue #14385: It is now possible to use a custom type for the __builtins__
[6,834]   fails to import now uses the new path and name attributes from
[6,838]   any of the dtoa.c string <-> float conversion functions, on MSVC builds of
[6,844] - Issue #2377: Make importlib the implementation of __import__().
[6,848]   import as they are meant for use by importlib.
[6,851]   while writing error message if the thread leaves a unhandled exception.
[6,869]   the DST transition.  Patch by Joe Peterson.
[6,873] - Issue #6085: In http.server.py SimpleHTTPServer.address_string returns the
[6,879] - Issue #14428: Implement the PEP 418. Add time.get_clock_info(),
[6,893]   the links were not located in an archive subdirectory.
[6,895] - Issue #14638: pydoc now treats non-string __name__ values as if they
[6,906]   custom semantics of caring the right-most path separator forward in path
[6,911] - Issue #14629: tokenizer.detect_encoding will specify the filename in the
[6,914] - Issue #14629: Raise SyntaxError in tokenizer.detect_encoding if the
[6,917] - Issue #14308: Fix an exception when a "dummy" thread is in the threading
[6,920] - Issue #11750: The Windows API functions scattered in the _subprocess and
[6,929] - Issue #14452: SysLogHandler no longer inserts a UTF-8 BOM into the message.
[6,931] - Issue #14386: Expose the dict_proxy internal type as types.MappingProxyType.
[6,934]   the reload.
[6,936] - Issue #13959: Add imp.py and rename the built-in module to _imp, allowing for
[6,937]   re-implementing parts of the module in pure Python.
[6,945] - Issue #14399: zipfile now recognizes that the archive has been modified even
[6,946]   if only the comment is changed.  In addition, the TypeError that results from
[6,947]   trying to set a non-binary value as a comment is now raised at the time
[6,948]   the comment is set rather than at the time the zipfile is written.
[6,955]   implementation details of the email package Message object.
[6,957] - Issue #7978: socketserver now restarts the select() call when EINTR is
[6,958]   returned.  This avoids crashing the server loop when a signal is received.
[6,984]   after a "hg update" which failed to bring the timestamps into the right order.
[6,990]   correctly for the various invocation approaches (Patch by Jason Yeo)
[6,998] - Issue #14355: Regrtest now supports the standard unittest test loading, and
[7,014]   placing the Python installation into the system "Path" environment variable.
[7,016] - Issue #13165: stringbench is now available in the Tools/stringbench folder.
[7,034] - Issue #1683368: object.__new__ and object.__init__ raise a TypeError if they
[7,035]   are passed arguments and their complementary method is not overridden.
[7,038]   the module name that was not interned.
[7,041]   allocating path buffers on the heap instead of the stack.
[7,049] - Issue #14205: dict lookup raises a RuntimeError if the dict is modified
[7,052] - Issue #14220: When a generator is delegating to another iterator with the
[7,056]   on the PyObject_Malloc() api like all other objects.
[7,058] - Issue #14471: Fix a possible buffer overrun in the winreg module.
[7,060] - Issue #14288: Allow the serialization of builtin iterators
[7,068] - Issue #13872: socket.detach() now marks the socket closed (as mirrored
[7,069]   in the socket repr()).  Patch by Matt Joiner.
[7,076] - Issue #14416: syslog now defines the LOG_ODELAY and LOG_AUTHPRIV constants
[7,077]   if they are defined in <syslog.h>.
[7,082]   the _decimal module against an installed libmpdec.
[7,091] - Issue #14204: The ssl module now has support for the Next Protocol
[7,092]   Negotiation extension, if available in the underlying OpenSSL library.
[7,097] - Issue #12757: Fix the skipping of doctests when python is run with -OO so
[7,100] - Issue #7652: Integrate the decimal floating point libmpdec library to speed
[7,101]   up the decimal module. Performance gains of the new C implementation are
[7,102]   between 10x and 100x, depending on the application.
[7,104] - Issue #14269: SMTPD now conforms to the RFC and requires a HELO command
[7,110] - Issue #14344: fixed the repr of email.policy objects.
[7,113]   (mostly the new Bytes classes).
[7,116]   the C-accelerated implementation.  Patch by sbt.
[7,118] - Issue #10484: Fix the CGIHTTPServer's PATH_INFO handling problem.
[7,120] - Issue #11199: Fix the with urllib which hangs on particular ftp urls.
[7,122] - Improve the memory utilization and speed of functools.lru_cache.
[7,124] - Issue #14222: Use the new time.steady() function instead of time.time() for
[7,130] - Issue #14234: CVE-2012-0876: Randomize hashes of xml attributes in the hash
[7,131]   table internal to the pyexpat module's copy of the expat library to avoid a
[7,133]   modifications by the expat project.
[7,136]   the name ends up being quoted.
[7,141] - Issue #13839: When invoked on the command-line, the pstats module now
[7,142]   accepts several filenames of profile stat files and merges them all.
[7,154] - Issue #14184: Increase the default stack size for secondary threads on
[7,164]   a ValueError, if the timestamp does not fit in time_t.
[7,179] - Issue #13394: the aifc module now uses warnings.warn() to signal warnings.
[7,182]   Windows when the child process has already exited.
[7,184] - Issue #14223: curses.addch() is no more limited to the range 0-255 when the
[7,196]   data or close method) for the Python implementation as well.
[7,197]   Drop the no-op TreeBuilder().xml() method from the C implementation.
[7,200]   also for their arguments, wherever possible.
[7,202] - Issue #14310: Sockets can now be with other processes on Windows using
[7,203]   the api socket.socket.share() and socket.fromshare().
[7,218] - Issue #14321: Do not run pgen during the build if files are up to date.
[7,223] - Issue #14034: added the argparse tutorial.
[7,234]   ctypes.c_float that caused an incorrect exception to be returned in the
[7,241]   keyword arguments, contrary to the documentation.
[7,262]   (other than a bytes object).
[7,264] - Issue #13521: dict.setdefault() now does only one lookup for the given key,
[7,268]   suppressing the display of the chained exception context. The chained
[7,269]   context still remains available as the __context__ attribute.
[7,274]   (See whatsnew/3.3), and the documentation has been updated extensively.
[7,276]   PEP-3118, so further development towards the complete implementation
[7,277]   of the PEP can proceed in a test-driven manner.
[7,286]   format and shape without making a copy of the underlying memory.
[7,300]   against denial of service attacks due to hash collisions within the dict and
[7,314] - Fix the builtin module initialization code to store the init function for
[7,318]   all possible file descriptors in the child process rather than just open
[7,319]   file descriptors.  It now closes only the open fds if possible for the
[7,322] - Issue #13629: Renumber the tokens in token.h so that they match the indexes
[7,327] - Issue #13761: Add a "flush" keyword argument to the print() function,
[7,328]   used to ensure flushing the output stream.
[7,330] - Issue #13645: pyc files now contain the size of the corresponding source
[7,332]   timestamp resolution) when checking for freshness of the bytecode.
[7,338] - Issue #13748: Raw bytes literals can now be written with the ``rb`` prefix
[7,350] - Issue #6695: Full garbage collection runs now clear the freelist of set
[7,353] - Fix OSError.__init__ and OSError.__new__ so that each of them can be
[7,356] - Fix the fix for issue #12149: it was incorrect, although it had the side
[7,357]   effect of appearing to resolve the issue.  Thanks to Mark Shannon for
[7,371]   stream.  It was already the case with Python 2.  However, the corresponding
[7,383] - Issue #13411: memoryview objects are now hashable when the underlying
[7,393] - Issue #13393: BufferedReader.read1() now asks the full requested size to
[7,394]   the raw stream instead of limiting itself to the buffer size.
[7,398] - Issue #13333: The UTF-7 decoder now accepts lone surrogates (the encoder
[7,399]   already accepts them).
[7,401] - Issue #13389: Full garbage collection passes now clear the freelists for
[7,402]   list and dict objects.  They already cleared other freelists in the
[7,405] - Issue #13327: Remove the need for an explicit None as the second argument
[7,407]   order to update to the current time. Also added keyword argument
[7,408]   handling to os.utimensat in order to remove the need for explicit None.
[7,419]   variable in the default value of a keyword-only argument: ``lambda *,
[7,434]   the sequence of values they define (instead of comparing based on
[7,437] - Issue #1294232: In a few cases involving metaclass inheritance, the
[7,438]   interpreter would sometimes invoke the wrong metaclass when building a new
[7,447]   as their first argument.  Patch by Petri Lehtinen.
[7,452] - Issue #12281: Rewrite the MBCS codec to handle correctly replace and ignore
[7,457]   generator.throw() now gets the traceback from the passed exception's
[7,463]   longer include a "manifest" to prevent them failing at import time in some
[7,466] - PEP 3151 / issue #12555: reworking the OS and IO exception hierarchy.
[7,470] - Issue #13063: the Windows error ERROR_NO_DATA (numbered 232 and described
[7,474] - Issue #12911: Fix memory consumption when calculating the repr() of huge
[7,477] - PEP 393: flexible string representation. Thanks to Torsten Becker for the
[7,488]   module. Ignore the direcotry if its name matchs the module name (e.g.
[7,492]   finding the bug and providing a patch.
[7,501] - Issue #12802: the Windows error ERROR_DIRECTORY (numbered 267) is now
[7,519]   outside the BMP.
[7,524]   return the respective singleton instances.
[7,528] - Verify the types of AST strings and identifiers provided by the user before
[7,529]   compiling them.
[7,544] - Issue #12149: Update the method cache after a type's dictionary gets
[7,545]   cleared by the garbage collector.  This fixes a segfault when an instance
[7,546]   and its type get caught in a reference cycle, and the instance's
[7,547]   deallocator calls one of the methods on the type (e.g. when subclassing
[7,550] - Issue #9611, Issue #9015: FileIO.read() clamps the length to INT_MAX on Windows.
[7,552] - Issue #9642: Uniformize the tests on the availability of the mbcs codec, add
[7,555] - Issue #9642: Fix filesystem encoding initialization: use the ANSI code page
[7,556]   on Windows if the mbcs codec is not available, and fail with a fatal error if
[7,557]   we cannot get the locale encoding (if nl_langinfo(CODESET) is not available)
[7,560] - When a generator yields, do not retain the caller's exception state on the
[7,563] - Issue #12475: Prevent generators from leaking their exception state into the
[7,564]   caller's frame as they return for the last time.
[7,567]   with other data interleaved between marshalled objects.
[7,570]   given, produce a informative error message which includes the name(s) of the
[7,573] - Issue #12370: Fix super with no arguments when __class__ is overriden in the
[7,579] - Loosen type restrictions on the __dir__ method. __dir__ can now return any
[7,589]   the following case: sys.stdin.read() stopped with CTRL+d (end of file),
[7,592] - Issue #12216: Allow unexpected EOF errors to happen on any line of the file.
[7,597] - Issue #9670: Increase the default stack size for secondary threads on
[7,598]   Mac OS X and FreeBSD to reduce the chances of a crash instead of a
[7,602] - Issue #12106: The use of the multiple-with shorthand syntax is now reflected
[7,603]   in the AST.
[7,605] - Issue #12190: Try to use the same filename object when compiling unmarshalling
[7,606]   a code objects in the same file.
[7,609]   the __dir__() methods of those types.
[7,611] - Issue #5715: In socketserver, close the server socket in the child process.
[7,613] - Correct lookup of __dir__ on objects. Among other things, this causes errors
[7,616] - Issue #12060: Use sig_atomic_t type and volatile keyword in the signal
[7,619] - Issue #1746656: Added the if_nameindex, if_indextoname, if_nametoindex
[7,620]   methods to the socket module.
[7,623]   wait for the process to end when exiting the context to avoid unintentionally
[7,626] - Issue #1195: Fix input() if it is interrupted by CTRL+d and then CTRL+c,
[7,627]   clear the end-of-file indicator after CTRL+d.
[7,629] - Issue #1856: Avoid crashes and lockups when daemon threads run while the
[7,630]   interpreter is shutting down; instead, these threads are now killed when
[7,631]   they try to take the GIL.
[7,634]   the check of the object type doesn't read the __class__ attribute anymore.
[7,635]   Fix a crash if a class override its __class__ attribute (e.g. a proxy of the
[7,638] - Issue #10517: After fork(), reinitialize the TLS used by the PyGILState_*
[7,639]   APIs, to avoid a crash with the pthread implementation in RHEL 5.  Patch
[7,642] - Issue #10914: Initialize correctly the filesystem codec when creating a new
[7,644]   the ISO-8859-15 codec.
[7,646] - Issue #11918: OS/2 and VMS are no more supported because of the lack of
[7,652] - Issue #5057: fix a bug in the peepholer that led to non-portable pyc files
[7,661]   subprocess.check_output.  If the blocking operation takes more than `timeout`
[7,662]   seconds, the `subprocess.TimeoutExpired` exception is raised.
[7,665]   (EINTR), for example if the program is stopped with CTRL+z on Mac OS X. Patch
[7,668] - Issue #9319: Include the filename in "Non-UTF8 code ..." syntax error.
[7,670] - Issue #10785: Store the filename as Unicode in the Python parser.
[7,672] - Issue #11619: _PyImport_LoadDynamicModule() doesn't encode the path to bytes
[7,681] - Issue #11395: io.FileIO().write() clamps the data length to 32,767 bytes on
[7,682]   Windows if the file is a TTY to workaround a Windows bug. The Windows console
[7,684]   stdout mode is binary and the length is greater than 66,000 bytes (or less,
[7,691]   3.2.0 where the stdout or stderr file descriptor being the same as the stdin
[7,703]   there are many tags (e.g. when using mq).  Patch by Nadeem Vawda.
[7,705] - Issue #11335: Fixed a memory leak in list.sort when the key function
[7,708] - Issue #8923: When a string is encoded to UTF-8 in strict mode, the result is
[7,709]   cached into the object. Examples: str.encode(), str.encode('utf-8'),
[7,713] - Issue #10829: Refactor PyUnicode_FromFormat(), use the same function to parse
[7,714]   the format string in the 3 steps, fix crashs on invalid format strings.
[7,728]   It encoded the Unicode filename to UTF-8, but the encoding fails on
[7,733]   PyUnicode_AsEncodedString(), it was replaced by a better fallback (use the
[7,740] - Issue #11386: bytearray.pop() now throws IndexError when the bytearray is
[7,760] - Issue #13550: Remove the debug machinery from the threading module: remove
[7,763] - Issue #14159: Fix the len() of weak containers (WeakSet, WeakKeyDictionary,
[7,765]   are dead or dying.  Moreover, the implementation is now O(1) rather than
[7,777] - HTMLParser is now able to handle slashes in the start tag.
[7,779] - Issue #13641: Decoding functions in the base64 module now accept ASCII-only
[7,805]   to their --libraries option.
[7,807] - Issue #10287: nntplib now queries the server's CAPABILITIES first before
[7,814] - Issue #13930: lib2to3 now supports writing converted output files to another
[7,815]   directory tree as well as copying unchanged files and altering the file
[7,822] - Issue #10287: nntplib now queries the server's CAPABILITIES again after
[7,823]   authenticating (since the result may change, according to RFC 4643).
[7,828]   Apple has removed gcc-4.2, the version used to build python.org
[7,829]   64-bit/32-bit Pythons.  If the user does not explicitly override
[7,830]   the default C compiler by setting the CC environment variable,
[7,833]   the user does explicitly set CC, substitute its value as the default
[7,834]   compiler in the Distutils LDSHARED configuration variable for OS X.
[7,835]   (Note, the python.org 32-bit-only Pythons use gcc-4.0 and the 10.4u
[7,836]   SDK, neither of which are available in Xcode 4.  This change does not
[7,837]   attempt to override settings to support their use with Xcode 4.)
[7,842] - When '' is a path (e.g. in sys.path), make sure __file__ uses the current
[7,845] - Issue #13609: Add two functions to query the terminal size:
[7,850]   instead of ftime() to have a resolution of 100 ns instead of 1 ms (the clock
[7,857]   make sure two listeners can't bind to the same socket/pipe (or any existing
[7,866] - Issue #2945: Make the distutils upload command aware of bdist_rpm products.
[7,877] - Issue #13848: open() and the FileIO constructor now check for NUL
[7,878]   characters in the file name.  Patch by Hynek Schlawack.
[7,884]   flush stderr after printing the exception traceback.
[7,886] - Issue #13885: CVE-2011-3389: the _ssl module would always disable the CBC
[7,891]   OSError if localtime() failed. time.clock() now raises a RuntimeError if the
[7,894] - Issue #13772: In os.symlink() under Windows, do not try to guess the link
[7,895]   target's type (file or directory).  The detection was buggy and made the
[7,896]   call non-atomic (therefore prone to race conditions).
[7,900] - Issue #13722: Avoid silencing ImportErrors when initializing the codecs
[7,907]   in the directory name.
[7,914] - Issue #13589: Fix some serialization primitives in the aifc module.
[7,918]   Authentication. Patch contributed by Joonas Kuorilehto.
[7,921]   The hang would occur when retrieving the result of a scheduled future after
[7,922]   the executor had been shut down.
[7,925]   return False when the event was set and cleared right after.
[7,927] - Issue #9993: When the source and destination are on different filesystems,
[7,928]   and the source is a symlink, shutil.move() now recreates a symlink on the
[7,929]   destination instead of copying the file contents.  Patch by Jonathan Niehof
[7,934] - Issue #13696: Fix the 302 Relative URL Redirection problem.
[7,936] - Issue #13636: Weak ciphers are now disabled by default in the ssl module
[7,941]   true, symlinks aren't dereferenced and the operation instead acts on the
[7,946] - Issue #13626: Add support for SSL Diffie-Hellman key exchange, through the
[7,947]   SSLContext.load_dh_params() method and the ssl.OP_SINGLE_DH_USE option.
[7,962] - Issue #13637: "a2b" functions in the binascii module now accept ASCII-only
[7,968]   key exchange, through the SSLContext.set_ecdh_curve() method and the
[7,972]   choose the cipher based on their own preferences, rather than on the
[7,984] - Issue #8035: urllib: Fix a bug where the client could remain stuck after a
[7,987] - Issue #13560: os.strerror() now uses the current locale encoding instead of
[7,990] - Issue #8373: The filesystem path of AF_UNIX sockets now uses the filesystem
[7,991]   encoding and the surrogateescape error handler, rather than UTF-8.  Patch
[8,003]   when set to False makes run() execute the scheduled events due to expire
[8,004]   soonest (if any) and then return.  Patch by Giampaolo Rodolà.
[8,011] - Issue #5689: Add support for lzma compression to the tarfile module.
[8,018] - Issue #5905, Issue #13560: time.strftime() is now using the current locale
[8,019]   encoding, instead of UTF-8, if the wcsftime() function is not available.
[8,025]   other than 900k.
[8,029] - Issue #6715: Add a module 'lzma' for compression using the LZMA algorithm.
[8,030]   Thanks to Per Øyvind Karlsen for the initial implementation.
[8,036]   compiled files in the current directory.  Initial patch by Sjoerd de Vries.
[8,042]   when it is linked to the ncurses library. It encodes also Unicode strings to
[8,043]   the locale encoding instead of UTF-8.
[8,045] - Issue #12856: Ensure child processes do not inherit the parent's random
[8,046]   seed for filename generation in the tempfile module.  Patch by Brian
[8,050]   parameter, as other file-like objects.  Patch by Ryan Kelly.
[8,052] - Issue #13458: Fix a memory leak in the ssl module when decoding a
[8,064]   the wait_flag parameter is false.  Patch by sbt.
[8,067]   raised when the wrapped raw file is non-blocking and the write would block.
[8,068]   Previous code assumed that the raw write() would raise BlockingIOError, but
[8,069]   RawIOBase.write() is defined to returned None when the call would block.
[8,075]   node when it is the only child of an element.  Initial patch by Dan
[8,078] - Issue #13374: The Windows bytes API has been deprecated in the os module. Use
[8,079]   Unicode filenames instead of bytes filenames to not depend on the ANSI code
[8,103] - Issue #3067: locale.setlocale() now raises TypeError if the second
[8,107] - Issue #13140: Fix the daemon_threads attribute of ThreadingMixIn.
[8,112] - Byte compilation in packaging is now isolated from the calling Python -B or
[8,126] - Issue #670664: Fix HTMLParser to correctly handle the content of
[8,132] - Fix the xmlrpc.client user agent to return something similar to
[8,140] - Issue #13258: Use callable() built-in in the standard library.
[8,145] - Issue #11183: Add finer-grained exceptions to the ssl module, so that
[8,146]   you don't have to inspect the exception's attributes in the common case.
[8,148] - Issue #13216: Add cp65001 codec, the Windows UTF-8 (CP_UTF8).
[8,150] - Issue #13226: Add RTLD_xxx constants to the os module. These constants can be
[8,154]   the time module. time.clock_gettime(time.CLOCK_MONOTONIC) provides a
[8,169]   semicolons together. Patch by Ben Darnell and Petri Lehtinen.
[8,177] - Issue #13150: sysconfig no longer parses the Makefile and config.h files
[8,182]   in order to display the prompt correctly.
[8,184] - Issue #12454: The mailbox module is now using ASCII, instead of the locale
[8,193] - Issue #12386: packaging does not fail anymore when writing the RESOURCES
[8,199] - Issue #13025: mimetypes is now reading MIME types using the UTF-8 encoding,
[8,200]   instead of the locale encoding.
[8,224]   if the underlying raw stream is unseekable, even if the seek could be
[8,225]   satisfied using the internal buffer.  Patch by John O'Connor.
[8,227] - Issue #7689: Allow pickling of dynamically created classes when their
[8,231] - Issue #13034: When decoding some SSL certificates, the subjectAltName
[8,234] - Issue #12306: Expose the runtime version of the zlib C library as a constant,
[8,235]   ZLIB_RUNTIME_VERSION, in the zlib module. Patch by Torsten Landschoff.
[8,243] - Issue #12567: Add curses.unget_wch() function. Push a character so the next
[8,247]   instead of the locale encoding.
[8,250]   of crashing when an invalid path is given in the manifest template.
[8,252] - Issue #12841: tarfile unnecessarily checked the existence of numerical user
[8,253]   and group ids on extraction. If one of them did not exist the respective id
[8,254]   of the current user (i.e. root) was used for the file and ownership
[8,263]   getstatusoutput() functions of the subprocess module now kill the process,
[8,273]   the C pickle implementation.
[8,278] - Issue #12287: Fix a stack corruption in ossaudiodev module when the FD is
[8,284] - Issue #9923: The mailcap module now correctly uses the platform path
[8,285]   separator for the MAILCAP environment variable on non-POSIX platforms.
[8,287] - Issue #12835: Follow up to #6560 that unconditionally prevents use of the
[8,292]   to be used if the private key is encrypted.  Patch by Adam Simpkins.
[8,300] - Issue #6560: The sendmsg/recvmsg API is now exposed by the socket module
[8,301]   when provided by the underlying platform, supporting processing of
[8,304] - Issue #12326: On Linux, sys.platform doesn't contain the major version
[8,306]   on the Linux version used to build Python.
[8,315]   resources (FD/zombie) when killed at the wrong time.
[8,324]   the file cannot be opened.
[8,329] - Issue #10087: Fix the html output format of the calendar module.
[8,338] - Issue #12655: Expose functions from sched.h in the os module: sched_yield(),
[8,345] - Issues #11104, #8688: Fix the behavior of distutils' sdist command with
[8,348] - Issue #11281: smtplib.STMP gets source_address parameter, which adds the
[8,356]   in Python code) now finds the doc of the method.
[8,361]   code pre-dates the ability to subclass extension types.  It is now possible
[8,362]   to inherit from these classes, without having to import the private
[8,370] - Issue #12514: Use try/finally to assure the timeit module restores garbage
[8,383] - Issue #12591: Improve support of "universal newlines" in the subprocess
[8,384]   module: the piped streams can now be properly read from or written to.
[8,394] - Issue #12372: POSIX semaphores are broken on AIX: don't use them.
[8,397]   to get channel binding data for the current SSL session (only the
[8,398]   "tls-unique" channel binding is implemented).  This allows the implementation
[8,399]   of certain authentication mechanisms such as SCRAM-SHA-1-PLUS.  Patch by
[8,405] - Issue #12571: Add a plat-linux3 directory mirroring the plat-linux2
[8,406]   directory, so that "import DLFCN" and other similar imports work on
[8,410]   commands; they aren't required and in fact postfix doesn't support that form.
[8,424] - Issue #11321: Fix a crash with multiple imports of the _pickle module when
[8,430] - Add cgi.closelog() function to close the log file.
[8,435]   the parent structure. Patch by Vlad Riscutia.
[8,437] - Raise ValueError when attempting to set the _CHUNK_SIZE attribute of a
[8,441]   This fixes a bug with the remove (uninstall) feature on Windows.
[8,447]   ignore the first byte of an invalid byte sequence. For example,
[8,450] - Issue #12459: time.sleep() now raises a ValueError if the sleep length is
[8,452]   Linux for example, to have the same behaviour on all platforms.
[8,455]   Python scripts using a encoding different than UTF-8 (read the coding cookie
[8,456]   of the script).
[8,459]   if the process has only one pipe.
[8,464] - Issue #12451: pydoc: importfile() now opens the Python script in binary mode,
[8,465]   instead of text mode using the locale encoding, to avoid encoding issues.
[8,467] - Issue #12451: runpy: run_path() now opens the Python script in binary mode,
[8,468]   instead of text mode using the locale encoding, to support other encodings
[8,469]   than UTF-8 (scripts using the coding cookie).
[8,472]   of the text mode (using the locale encoding) to avoid encoding issues.
[8,474] - Issue #12147: Adjust the new-in-3.2 smtplib.send_message method for better
[8,475]   conformance to the RFCs:  correctly handle Sender and Resent- headers.
[8,478]   the garbage collector while the Heap lock is held.
[8,480] - Issue #12462: time.sleep() now immediately calls the (Python) signal handler
[8,481]   if it is interrupted by a signal, instead of having to wait until the next
[8,488]   UTF-8 instead of the locale encoding if the encoding is not specified. It now
[8,489]   also opens XML files for the parser in binary mode instead of the text mode
[8,495] - Issue #12451: pydoc.synopsis() now reads the encoding cookie if available,
[8,496]   to read the Python script from the right encoding.
[8,498] - Issue #12451: distutils now opens the setup script in binary mode to read the
[8,502]   check or set the MACOSX_DEPLOYMENT_TARGET environment variable for the
[8,504]   and was unreliable since tests or user programs could modify the interpreter
[8,505]   environment after Distutils set it.  Instead, have Distutils set the
[8,506]   deployment target only in the environment of each build subprocess.  It is
[8,507]   still possible to globally override the default by setting
[8,508]   MACOSX_DEPLOYMENT_TARGET before launching the interpreter; its value must be
[8,509]   greater or equal to the default value, the value with which the interpreter
[8,510]   was built.  Also, implement the same handling in packaging.
[8,512] - Issue #12422: In the copy module, don't store objects that are their own copy
[8,513]   in the memo dict.
[8,515] - Issue #12303: Add sigwaitinfo() and sigtimedwait() to the signal module.
[8,520] - Issue #1874: email now detects and reports as a defect the presence of
[8,521]   any CTE other than 7bit, 8bit, or binary on a multipart.
[8,523] - Issue #12383: Fix subprocess module with env={}: don't copy the environment
[8,526] - Issue #11637: Fix support for importing packaging setup hooks from the
[8,529] - Issue #6771: Moved the curses.wrapper function from the single-function
[8,530]   wrapper module into __init__, eliminating the module.  Since __init__ was
[8,531]   already importing the function to curses.wrapper, there is no API change.
[8,533] - Issue #11584: email.header.decode_header no longer fails if the header
[8,542] - Issue #12133: AbstractHTTPHandler.do_open() of urllib.request closes the HTTP
[8,549] - Issue #9284: Allow inspect.findsource() to find the source of doctest
[8,553]   compatibility helper for the distutils-packaging transition.  Original patch
[8,556] - Issue #12287: In ossaudiodev, check that the device isn't closed in several
[8,565] - Issue #10694: zipfile now ignores garbage at the end of a zipfile.
[8,569] - Issue #10424: Argparse now includes the names of the missing required
[8,570]   arguments in the missing arguments error message.
[8,573]   a new 'append_nul' attribute on the handler.
[8,589] - Issue #11893: Remove obsolete internal wrapper class ``SSLFakeFile`` in the
[8,597]   left over from the Mercurial transition
[8,601] - Issue #12085: Fix an attribute error in subprocess.Popen destructor if the
[8,614] - Issue #12196: Add pipe2() to the os module.
[8,624] - Issue #12175: FileIO.readall() now only reads the file position and size
[8,630]   if the file is closed.
[8,638] - Issue #10818: Remove the Tk GUI and the serve() function of the pydoc module,
[8,642] - Issue #1441530: In imaplib, read the data in one chunk to speed up large
[8,645] - Issue #12070: Fix the Makefile parser of the sysconfig module to handle
[8,649]   their encode() method anymore, but continue to call the reset() method if the
[8,652] - Issue #12049: Add RAND_bytes() and RAND_pseudo_bytes() functions to the ssl
[8,655] - Issue #6501: os.device_encoding() returns None on Windows if the application
[8,658] - Issue #12105: Add O_CLOEXEC to the os module.
[8,661]   now raises TypeError (reflecting the invalid type of the 3rd argument) rather
[8,665]   to be able to unload the module.
[8,667] - Add the packaging module, an improved fork of distutils (also known as
[8,670] - Issue #12065: connect_ex() on an SSL socket now returns the original errno
[8,671]   when the socket's timeout expires (it used to return None).
[8,681]   their incremental counterparts now raise OverflowError if given an input
[8,682]   larger than 4GB, instead of silently truncating the input and returning
[8,685] - Issue #12050: zlib.decompressobj().decompress() now clears the unconsumed_tail
[8,690]   writing, then seeking before the previous write but still within buffered
[8,696] - Issue #11799: urllib.request Authentication Handlers will raise a ValueError
[8,697]   when presented with an unsupported Authentication Scheme. Patch contributed
[8,701]   non-ASCII path (path to the Python executable). Open and write the script in
[8,702]   binary mode, but ensure that the shebang is decodable from UTF-8 and from the
[8,703]   encoding of the script.
[8,712]   manages the sending of headers to output stream and flushing the internal
[8,717] - Issue #11164: Stop trying to use _xmlplus in the xml module.
[8,724] - Issue #8407: The signal handler writes the signal number as a single byte
[8,725]   instead of a nul byte into the wakeup file descriptor. So it is possible to
[8,728] - Issue #8407: Add pthread_kill(), sigpending() and sigwait() functions to the
[8,736] - Issue #11916: Add a number of MacOSX specific definitions to the errno module.
[8,740]   detect mtime changes by comparing to the system clock instead of to the
[8,741]   previous value of the mtime.
[8,746]   parameter to control parameters of the secure channel.  Patch by Sijin
[8,749] - ntpath.samefile failed to notice that "a.txt" and "A.TXT" refer to the same
[8,753]   dNSName entry, ssl.match_hostname() should use the subject's commonName.
[8,761]   filesystems when the source and destination name where the same except
[8,762]   for the case.
[8,765]   more than one call to the function when used as a decorator. Initial patch
[8,778] - Issue #8407: Add signal.pthread_sigmask() function to fetch and/or change the
[8,779]   signal mask of the calling thread.
[8,789] - Issue #11763: don't use difflib in TestCase.assertMultiLineEqual if the
[8,796] - Issue #11005: threading.RLock()._release_save() raises a RuntimeError if the
[8,803]   release the GIL.  Patch by Charles-François Natali.
[8,806]   the thread implementation.
[8,811] - Issue #11768: The signal handler of the signal module only calls
[8,812]   Py_AddPendingCall() for the first signal to fix a deadlock on reentrant or
[8,813]   parallel calls. PyErr_SetInterrupt() writes also into the wake up file.
[8,815] - Issue #11492: fix several issues with header folding in the email package.
[8,820]   mutating the object instead of just working on a copy.
[8,827] - Issue #11474: Fix the bug with url2pathname() handling of '/C|/' on Windows.
[8,837] - Issue #11830: Remove unnecessary introspection code in the decimal module.
[8,839] - Issue #11703: urllib2.geturl() does not return correct url when the original
[8,846]   character in the index of modules.
[8,848] - Issue #11815: Use a light-weight SimpleQueue for the result queue in
[8,855]   iterable of handlers to be added to the root logger. Additional parameter
[8,864]   worker processes: new processes would be spawned while the pool is being
[8,867] - Issue #2650: re.escape() no longer escapes the '_'.
[8,876]   multipart subparts with an 8-bit CTE into unicode instead of preserving the
[8,880]   charset parameter that defaults to utf-8 and is used as the charset for RFC
[8,881]   2047 encoding when the realname contains non-ASCII characters.
[8,906] - Issue #11393: Add the new faulthandler module.
[8,908] - Issue #11618: Fix the timeout logic in threading.Lock.acquire() under Windows.
[8,910] - Removed the 'strict' argument to email.parser.Parser, which has been
[8,927]   are now zeroed on creation.  This matches the behaviour specified by the
[8,939]   to match the path to where the source code currently is, not where the code
[8,942] - Issue #8754: Have importlib use the repr of a module name in error messages.
[8,947] - collections.namedtuple() now adds a _source attribute to the generated
[8,948]   class.  This make the source more accessible than the outdated
[8,949]   "verbose" option which prints to stdout but doesn't make the source
[8,962] - Issue #11662: Make urllib and urllib2 ignore redirections if the
[8,977]   unbuffered pipes, such that select() works properly on them.
[8,980]   arguments has the wrong type.  Patch by Nikita Vetoshkin.
[8,982] - Issue #10812: Add some extra posix functions to the os module.
[8,987] - Issue #11243: fix the parameter querying methods of Message to work if
[8,988]   the headers contain un-encoded non-ASCII data.
[8,991]   relative to Python2 and the result is now the same as it was in Python2.
[8,994]   which was a regression relative to Python2.  Unlike Python2, the last line
[8,995]   of the folded body now ends with a carriage return.
[8,997] - Issue #11560: shutil.unpack_archive now correctly handles the format
[9,005] - Issue #11569: use absolute path to the sysctl command in multiprocessing to
[9,006]   ensure that it will be found regardless of the shell PATH. This ensures
[9,010]   not installed. Instead, the zipfile.ZIP_STORED compression is used to create
[9,011]   the ZipFile. Patch by Natalia B. Bidart.
[9,016] - Issue #11554: Fixed support for Japanese codecs; previously the body output
[9,017]   encoding was not done if euc-jp or shift-jis was specified as the charset.
[9,019] - Issue #11407: `TestCase.run` returns the result object used or created.
[9,022] - Issue #11500: Fixed a bug in the OS X proxy bypass code for fully qualified
[9,023]   IP addresses in the proxy exception list.
[9,026]   the "n" as the flag argument and the file exists. The behavior matches
[9,027]   the documentation and general logic.
[9,029] - Issue #1162477: Postel Principle adjustment to email date parsing: handle the
[9,033]   operations when the rounding mode is ROUND_FLOOR.
[9,063]   to release an unacquired lock, as claimed in the threading documentation.
[9,070] - Issue #11326: Add the missing connect_ex() implementation for SSL sockets,
[9,075] - Issue #10755: Add the posix.flistdir() function.  Patch by Ross Lagerwall.
[9,077] - Issue #4761: Add the ``*at()`` family of functions (openat(), etc.) to the
[9,087] - Issue #6064: Add a ``daemon`` keyword argument to the threading.Thread
[9,088]   and multiprocessing.Process constructors in order to override the
[9,089]   default behaviour of inheriting the daemonic property from the current
[9,093]   has arrived and the handler returned successfully.
[9,103] - Issue #10868: Allow usage of the register method of an ABC as a class
[9,106] - Issue #11224: Fixed a regression in tarfile that affected the file-like
[9,108]   consumption and failures with the stream interface.
[9,117]   module called collections.abc, following the pattern used by importlib.abc.
[9,118]   For backwards compatibility, the names are imported into the collections
[9,128] - Issue #11089: Fix performance issue limiting the use of ConfigParser()
[9,131] - Issue #10276: Fix the results of zlib.crc32() and zlib.adler32() on buffers
[9,137]   for the names of optional and positional arguments in help messages.
[9,146]   given path also specifying their names.
[9,160] - PEP 393: the configure option --with-wide-unicode is removed.
[9,170]   os.lchflags() are once again built on systems that support these
[9,175]   Python-X.Y.Z-pyX.Y.egg-info file in the lib-dynload directory.
[9,177] - Do not accidentally include the directory containing sqlite.h twice when
[9,181]   ensure "make install" creates symlinks in --prefix bin for the "-32"
[9,182]   files in the framework bin directory like the installer does.
[9,196] - Issue #14409: IDLE now properly executes commands in the Shell window
[9,197]   when it cannot read the normal config files on startup and
[9,198]   has to use the built-in default key bindings.
[9,199]   There was previously a bug in one of the defaults.
[9,220]   display a message popup and continue rather than crash.  Original patch by
[9,233] - Issue #12636: IDLE reads the coding cookie when executing a Python script.
[9,238] - Issue #12590: IDLE editor window now always displays the first line
[9,239]   when opening a long file.  With Tk 8.5, the first line was hidden.
[9,248] - Issue #11718: IDLE's open module dialog couldn't find the __init__.py
[9,257] - Issue #13930: 2to3 is now able to write its converted output files to another
[9,258]   directory tree as well as copying unchanged files and altering the file
[9,262] - Issue #13628: python-gdb.py is now able to retrieve more frames in the Python
[9,296]   would be finalized after the reference to its underlying BufferedRWPair's
[9,297]   writer got cleared by the GC.
[9,305]   Thanks to Suman Saha for finding the bug and providing a patch.
[9,310] - Issue #1172711: Add 'long long' support to the array module.
[9,313] - Issue #12483: ctypes: Fix a crash when the destruction of a callback
[9,314]   object triggers the garbage collector.
[9,319] - Issue #12764: Fix a crash in ctypes when the name of a Structure field is not
[9,327] - Issue #10309: Define _GNU_SOURCE so that mremap() gets the proper
[9,332]   objects using the C accelerations.
[9,335]   objects using the C accelerations.
[9,338]   to an instance of the class.
[9,346] - Issue #13447: Add a test file to host regression tests for bugs in the
[9,347]   scripts found in the Tools directory.
[9,359] - Issue #13726: Fix the ambiguous -S flag in regrtest. It is -o/--slow for slow
[9,374] - Issue #13725: Fix regrtest to recognize the documented -d flag.
[9,392] - Issue #11651: Improve the Makefile test targets to run more of the test suite
[9,394]   the amount of time needed to run the tests. "make test" and "make quicktest"
[9,395]   now include some resource-intensive tests, but no longer run the test suite
[9,399] - Issue #12331: The test suite for the packaging module can now run from an
[9,406]   with the ``-m`` (or ``--match``) option.  This works with all test cases
[9,407]   using the unittest module.  This is useful with long test suites
[9,410] - Issue #12624: It is now possible to fail after the first failure when
[9,411]   running in verbose mode (``-v`` or ``-W``), by using the ``--failfast``
[9,421]   as the processor type on some Mac systems.
[9,439] - Issue #12440: When testing whether some bits in SSLContext.options can be
[9,440]   reset, check the version of the OpenSSL headers Python was compiled against,
[9,441]   rather than the runtime version of the OpenSSL library.
[9,443] - Issue #11512: Add a test suite for the cgitb module. Patch by Robbie Clemons.
[9,445] - Issue #12497: Install test/data to prevent failures of the various codecmaps
[9,451] - Issue #12469: Run wakeup and pending signal tests in a subprocess to run the
[9,453]   handling of the parent process.
[9,457]   in to the console windowserver (as may be the case under buildbot or ssh).
[9,461] - Issue #12400: regrtest -W doesn't rerun the tests twice anymore, but captures
[9,462]   the output and displays it on failure instead. regrtest -v doesn't print the
[9,463]   error twice anymore if there is only one error.
[9,490]   when the randomly generated temporary path happened to match the regex.
[9,496]   pthread_sigmask() to ensure that the SIGALRM signal is received by the main
[9,499] - Issue #11811: Factor out detection of IPv6 support on the current host
[9,508]   condition variable cannot be interrupted by a signal (e.g. on Linux, the
[9,513] - Fix possible "file already exists" error when running the tests in parallel.
[9,519]   TIMEOUT seconds, dumps the traceback of all threads and exits.
[9,523] - The email test suite now lives in the Lib/test/test_email package.  The test
[9,530] - New test_crashers added to exercise the scripts in the Lib/test/crashers
[9,531]   directory and confirm they fail as expected
[9,533] - Issue #11578: added test for the timeit module.  Patch by Michael Henry.
[9,540] - Issue #11548: Improve test coverage of the shutil module. Patch by
[9,549]   false positive if the last directory in the path is inaccessible.
[9,551] - Issue #11223: Fix test_threadsignals to fail, not hang, when the
[9,573]   different than "strict" anymore. The caller was unable to compute the
[9,574]   size of the output buffer: it depends on the error handler.
[9,577]   and PyUnicode_EncodeLocale() functions to the C API to decode/encode from/to
[9,578]   the current locale encoding.
[9,582] - Issue #11246: Fix PyUnicode_FromFormat("%V") to decode the byte string from
[9,590]   implementations for the getter and setter of a ``__dict__`` descriptor of C
[9,609] - Issue #12380: PyArg_ParseTuple now accepts a bytearray for the 'c' format.
[9,614] - Issue #23006: Improve the documentation and indexing of dict.__missing__.
[9,615]   Add an entry in the language datamodel special methods section.
[9,616]   Revise and index its discussion in the stdtypes mapping/dict section.
[9,628] - Issue #8982: Improve the documentation for the argparse Namespace object.
[9,631]   their children.
[9,643] - Issue #9021: Add an introduction to the copy module documentation.
[9,645] - Issue #6005: Examples in the socket library documentation use sendall, where
[9,648] - Issue #12798: Updated the mimetypes documentation.
[9,650] - Issue #12949: Document the kwonlyargcount argument for the PyCode_New
[9,653] - Issue #13513: Fix io.IOBase documentation to correctly link to the
[9,654]   io.IOBase.readline method instead of the readline module.
[9,657]   functions and the most commonly needed arguments to Popen.
[9,664] **(For information about older versions, consult the HISTORY file.)**

C:/Python34/README.txt
**********************
[7] Python 3.x is a new version of the language, which is incompatible with the 2.x
[8] line of releases.  The language is mostly the same, but many details, especially
[27] You can pass many options to the configure script; run "./configure --help" to
[28] find out more.  On OSX and Cygwin, the executable is called python.exe;
[32] use "make frameworkinstall" to do the installation.  Note that this installs the
[38] If you wish, you can create a subdirectory and invoke configure from there.  For
[47] (This will fail if you *also* built at the top-level directory.  You should do a
[48] "make clean" at the toplevel first.)
[54] We try to have a comprehensive overview of the changes in the "What's New in
[60] incomplete, and also doesn't list anything merged in from the 2.7 release under
[63] If you want to install multiple versions of Python see the section below
[75] is downloadable in HTML, PDF, and reStructuredText formats; the latter version
[79] If you would like to contribute to the development of Python, relevant
[94] A source-to-source translation tool, "2to3", can take care of the mundane task
[96] is complemented by the deprecation warnings in 2.6.  See
[103] To test the interpreter, type "make test" in the top-level directory.  The test
[104] set produces some output.  You can generally ignore the messages about skipped
[109] memory.  To enable these tests, run "make testall".
[111] IMPORTANT: If the tests fail and you decide to mail a bug report, *don't*
[112] include the output of "make test".  It is useless.  Run the failing test
[117] (substituting the top of the source tree for '.' if you built in a different
[118] directory).  This runs the test in verbose mode.
[125] using the same installation prefix (--prefix argument to the configure script)
[126] you must take care that your primary python executable is not overwritten by the
[128] "make altinstall" contain the major and minor version and can thus live
[130] ${prefix}/bin/pythonX.Y.  If you intend to install multiple versions using the
[132] Install that version using "make install".  Install all other versions using
[135] For example, if you want to install Python 2.6, 2.7 and 3.4 with 2.7 being the
[137] and "make altinstall" in the others.
[143] We're soliciting bug reports about all aspects of the language.  Fixes are also
[144] welcome, preferable in unified diff format.  Please use the issue tracker:
[148] If you're not sure whether you're dealing with a bug or a feature, use the
[153] To subscribe to the list, use the mailman form:
[161] If you have a proposal to change Python, you may want to send an email to the
[185] Copyright (c) 1991-1995 Stichting Mathematisch Centrum.  All rights reserved.
[187] See the file "LICENSE" for information on the history of this software, terms &
[192] but these are entirely optional.
[194] All trademarks referenced herein are property of their respective holders.

C:/Python34/Tools/Scripts/README.txt
************************************
[5] 2to3                      Main script for running the 2to3 conversion tool
[6] abitype.py                Converts a C file to use the PEP 384 type definition API
[7] analyze_dxp.py            Analyzes the result of sys.getdxp()
[13] copytime.py               Copy one file's atime and mtime to another
[22] find_recursionlimit.py    Find the maximum recursion limit on this machine
[23] find-uname.py             Look for the given arguments in the sets of all Unicode names
[27] fixnotice.py              Fix the copyright notice in source files
[30] get-remote-certificate.py Fetch the certificate that the server(s) are providing in PEM form
[37] import_diagnostics.py     Miscellaneous diagnostics for the import system
[61] run_tests.py              Run the test suite with more sensible default options
[69] win_add2path.py           Add Python to the search path on Windows

C:/Python34/Tools/pynche/README.txt
***********************************
[10]     originally wrote back in 1987 for the Sunview window system.  That
[11]     editor was called ICE, the Interactive Color Editor.  I'd always
[16]     changed the name because these days, too many other systems have
[17]     the acronym `ICE'.
[24]     graphics cards; 24bit+ graphics cards are so cheap these days,
[29]     rgb.txt file from the X11R6.4 distribution for this reason, along
[30]     with other "Web related" database (see below).  You can use a
[31]     different file with the -d option.  The file xlicense.txt contains
[32]     the license only for rgb.txt and both files are in the X/
[40]     On Unix, start it by running the `pynche' script.  On Windows, run
[41]     pynche.pyw to inhibit the console window.  When run from the
[42]     command line, the following options are recognized:
[46]         Alternate location of the color database file.  Without this
[47]         option, the first valid file found will be used (see below).
[51]         Alternate location of the persistent initialization file.  See 
[52]         the section on Persistency below.
[56]         Ignore the persistent initialization file when starting up.
[57]         Pynche will still write the current option settings to the
[62]         Print the help message.
[65]         a Tk color name or #rrggbb color spec to be used as the
[67]         the persistent init file.  Since `#' needs to be escaped in
[68]         many shells, it is optional in the spec (e.g. #45dd1f is the
[74]     Pynche can be run as a modal dialog, inside another application,
[76]     and a future version of IDLE may as well.  Pynche supports the API
[77]     implemented by the Tkinter standard tkColorChooser module, with a
[79]     the Pynche package, you can run
[83]     which will popup Pynche as a modal dialog, and return the selected 
[87]     vs. standalone.  When running as a modal, there is no "Quit" menu
[88]     item under the "File" menu.  Instead there are "Okay" and "Cancel"
[91]     When "Okay" is hit, askcolor() returns the tuple
[96]     respectively (in the range 0 to 255).  "name" will be a color name
[97]     from the color database if there is an exact match, otherwise it
[98]     will be an X11 color spec of the form "#rrggbb".  Note that this
[102]     askcolor() supports the following optional keyword arguments:
[105]             the color to set as the initial selected color
[108]             the master window to use as the parent of the modal
[110]             its own Tkinter.Tk instance as the master.  This may not
[114]             similar to the --database option, the value must be a
[118]             similar to the --initfile option, the value must be a
[122]             similar to the --ignore flag, the value is a boolean
[125]             When this is true, the "name" field in the return tuple
[126]             will always be a color spec of the form "#rrggbb".  It
[127]             will not return a color name even if there is a match;
[128]             this is so pyColorChooser can exactly match the API of
[131]         [*] these arguments must be specified the first time
[137]     The top part of the main Pynche window contains the "variation
[139]     strips always indicate the currently selected color by a highlight
[140]     rectangle around the selected color chip, with an arrow pointing
[141]     to the chip.  Each arrow has an associated number giving you the
[142]     color value along the variation's axis.  Each variation strip
[143]     shows you the colors that are reachable from the selected color by
[144]     varying just one axis of the color solid.
[146]     For example, when the selected color is (in Red/Green/Blue
[147]     notation) 127/127/127, the Red Variations strip shows you every
[148]     color in the range 0/127/127 to 255/127/127.  Similarly for the
[150]     chip.  This will update the highlight rectangle and the arrow, as
[151]     well as other displays in Pynche.
[153]     Click on "Update while dragging" if you want Pynche to update the
[155]     be a bit slower).  Click on "Hexadecimal" to display the arrow
[164]     In the lower left corner of the main window you see two larger
[165]     color chips.  The Selected chip shows you a larger version of the
[166]     color selected in the variation strips, along with its X11 color
[167]     specification.  The Nearest chip shows you the closest color in
[168]     the X11 database to the selected color, giving its X11 color
[169]     specification, and below that, its X11 color name.  When the
[170]     Selected chip color exactly matches the Nearest chip color, you
[171]     will see the color name appear below the color specification for
[172]     the Selected chip.
[174]     Clicking on the Nearest color chip selects that color.  Color
[175]     distance is calculated in the 3D space of the RGB color solid and
[176]     if more than one color name is the same distance from the selected
[177]     color, the first one found will be chosen.
[179]     Note that there may be more than one X11 color name for the same
[180]     RGB value.  In that case, the first one found in the text database
[181]     is designated the "primary" name, and this is shown under the
[182]     Nearest chip.  The other names are "aliases" and they are visible
[183]     in the Color List Window (see below).
[185]     Both the color specifications and color names are selectable for
[186]     copying and pasting into another window.
[191]     At the lower right of the main window are three entry fields.
[192]     Here you can type numeric values for any of the three color axes.
[193]     Legal values are between 0 and 255, and these fields do not allow
[195]     the new color.
[197]     Click on "Update while typing" if you want Pynche to select the
[203] Other Views
[206]     default.  You can bring these up via the "View" menu on the main
[213]     have on the standard Tk text widget elements.  In the upper part
[214]     of the window is a plain Tk text widget and here you can edit the
[217]     the other windows will change the text widget element specified in
[218]     the radio buttons below.  When this is turned off, text widget
[222]     clicking on one of the radio buttons in the bottom part of this
[223]     window.  Text foreground and background affect the text in the
[224]     upper part of the window.  Selection foreground and background
[225]     affect the colors of the primary selection which is what you see
[226]     when you click the middle button (depending on window system) and
[229]     The Insertion is the insertion cursor in the text window, where
[236]     The "Color List" window shows every named color in the color name
[237]     database (this window may take a while to come up).  In the upper
[238]     part of the window you see a scrolling list of all the color names
[239]     in the database, in alphabetical order.  Click on any color to
[240]     select it.  In the bottom part of the window is displayed any
[241]     aliases for the selected color (those color names that have the
[242]     same RGB value, but were found later in the text database).  For
[243]     example, find the color "Black" and you'll see that its aliases
[246]     If the color has no aliases you'll see "<no aliases>" here.  If you
[250]     Note that the color list is always updated when a color is selected
[251]     from the main window.  There's no way to turn this feature off.  If
[252]     the selected color has no matching color name you'll see
[253]     "<no matching color>" in the Aliases window.
[259]     than just clicking on a color chip in the main window.  The row of
[260]     buttons along the top apply the specified increment and decrement
[261]     amounts to the selected color.  These delta amounts are applied to
[262]     the variation strips specified by the check boxes labeled "Move
[264]     will subtract 10 from the color value along the red and green
[265]     variation only.  Note the message under the checkboxes; this
[266]     indicates the primary color level being changed when more than one
[267]     slider is tied together.  For example, if Red and Green are
[268]     selected, you will be changing the Yellow level of the selected
[272]     variation hits either the lower or upper boundaries (0 or 255) as
[273]     a result of clicking on the top row buttons:
[276]         When the increment or decrement would send any of the tied
[277]         variations out of bounds, the entire delta is discarded.
[280]         When the increment or decrement would send any of the tied
[281]         variations out of bounds, the out of bounds value is wrapped
[282]         around to the other side.  Thus if red were at 238 and +25
[283]         were clicked, red would have the value 7.
[286]         When the increment or decrement would send any of the tied
[288]         one, so as to preserve the distance between them.  Thus if
[294]         When the increment or decrement would send any of the tied
[295]         variations out of bounds, the out of bounds variation is set
[296]         to the ceiling of 255 or floor of 0, as appropriate.  In this
[297]         way, all tied variations are squashed to one edge or the
[298]         other.
[300]     The top row buttons have the following keyboard accelerators:
[312]     Alt-w in any secondary window dismisses the window.  In the main
[321]     invocations, storing these values in a `persistent initialization
[322]     file'.  The actual location of this file is specified by the
[325]     When Pynche exits, it saves these values in the init file, and
[326]     re-reads them when it starts up.  There is no locking on this
[328]     may clobber the init file.
[332]     - the currently selected color
[336]     - the contents of the text window, the current text selection and
[340]     - the name of the color database file (but not its contents)
[342]     You can inhibit Pynche from reading the init file by supplying the
[343]     --ignore option on the command line.  However, you cannot suppress
[344]     the storing of the settings in the init file on Pynche exit.  If
[345]     you really want to do this, use /dev/null as the init file, using
[351]     Pynche uses a color name database file to calculate the nearest
[352]     color to the selected color, and to display in the Color List
[354]     below.  By default, the X11 color name database file is selected.
[355]     Other files:
[357]     html40colors.txt -- the HTML 4.0 guaranteed color names
[359]     websafe.txt -- the 216 "Web-safe" colors that Netscape and MSIE
[360]     guarantee will not be dithered.  These are specified in #rrggbb
[370]     the "File" menu.  This brings up a standard Tk file dialog.
[371]     Choose the file you want and then click "Ok".  If Pynche
[372]     understands the format in this file, it will load the database and 
[373]     update the appropriate windows.  If not, it will bring up an error 
[381]     - Better support for resizing the top level windows
[385]     - Have the notion of a `last color selected'; this may require a
[388]     - Support setting the font in the text view

C:/Python34/Tools/pynche/X/xlicense.txt
***************************************
[6] a copy of this software and associated documentation files (the
[7] "Software"), to deal in the Software without restriction, including
[8] without limitation the rights to use, copy, modify, merge, publish,
[9] distribute, sublicense, and/or sell copies of the Software, and to
[10] permit persons to whom the Software is furnished to do so, subject to
[11] the following conditions:
[14] included in all copies or substantial portions of the Software.
[24] Except as contained in this notice, the name of The Open Group shall
[25] not be used in advertising or otherwise to promote the sale, use or
[26] other dealings in this Software without prior written authorization

C:/Python34/tcl/tix8.4.3/pref/WmDefault.txt
*******************************************
[1] One of the bad things about Tk/Tkinter is that it does not pick up
[2] the current color and font scheme from the prevailing CDE/KDE/GNOME/Windows 
[5] One of the good things about Tk/Tkinter is that it is not tied to one
[6] particular widget set so it could pick up the current color and font scheme 
[7] from the prevailing CDE/KDE/GNOME/Windows window manager scheme.
[9] The WmDefault package is for making Tk/Tkinter applications use the 
[10] prevailing CDE/KDE/GNOME/Windows scheme. It tries to find the files
[11] and/or settings that the current window manager is using, and then
[12] sets the Tk options database accordingly (plus a few other things as well). 
[18] Download the latest version of wm_default from http://tix.sourceforge.net
[19] either as a part of the standard Tix distribution, or as a part of the
[28] WmDefault is the default Tix scheme, so there is nothing else to do.
[30] For Tk applications, it should be sufficent at the beginning of a wish
[39] 1) find the files and/or settings (::wm_default::setup).
[41]  still barely supported for GNOME because of the difficulty
[43]  setup takes one optional argument: wm, the name of the window manager
[46] 2) Setting the Tk options database (::wm_default::addoptions).
[47] You can override the settings in 1) by adding your values to the call
[51] You can examine the settings with
[53] which returns a Tcl array of the current settings, and
[55] which returns a string of the current settings, one value-pair per line.
[57] There are a number of assumptions built into the heuristics of addoptions,
[65] with Python 2.1  and above, WmDefault is the default Tix scheme, 
[66] so there is nothing else you need to do.
[68] The easiest way to install WmDefault for Tkinter is to copy the WmDefault.*
[70] PYTHONPATH. Then the following should work:
[83] Here is a list of all the settings controlled by WmDefault:
[125] or change the defines in generic/tixInit.c 
[130] 2) Edit the installed lib/8.1/Tix.tcl and change the -configspec 
[131] in tixClass tixAppContext with the following
[135] 3) Copy the files WmDefault.* AND pkgIndex.tcl to the installed
[138] 4) Make or edit the file lib/tix8.1/pkgIndex.tcl and add the lines

Files with Matches: 53
Matches Found: 2,870
